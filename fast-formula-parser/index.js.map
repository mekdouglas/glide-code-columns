{
  "version": 3,
  "sources": ["../../node_modules/lodash/_arrayReduce.js", "../../node_modules/lodash/_basePropertyOf.js", "../../node_modules/lodash/_deburrLetter.js", "../../node_modules/lodash/_freeGlobal.js", "../../node_modules/lodash/_root.js", "../../node_modules/lodash/_Symbol.js", "../../node_modules/lodash/_arrayMap.js", "../../node_modules/lodash/isArray.js", "../../node_modules/lodash/_getRawTag.js", "../../node_modules/lodash/_objectToString.js", "../../node_modules/lodash/_baseGetTag.js", "../../node_modules/lodash/isObjectLike.js", "../../node_modules/lodash/isSymbol.js", "../../node_modules/lodash/_baseToString.js", "../../node_modules/lodash/toString.js", "../../node_modules/lodash/deburr.js", "../../node_modules/lodash/_asciiWords.js", "../../node_modules/lodash/_hasUnicodeWord.js", "../../node_modules/lodash/_unicodeWords.js", "../../node_modules/lodash/words.js", "../../node_modules/lodash/_createCompounder.js", "../../node_modules/lodash/_baseSlice.js", "../../node_modules/lodash/_castSlice.js", "../../node_modules/lodash/_hasUnicode.js", "../../node_modules/lodash/_asciiToArray.js", "../../node_modules/lodash/_unicodeToArray.js", "../../node_modules/lodash/_stringToArray.js", "../../node_modules/lodash/_createCaseFirst.js", "../../node_modules/lodash/upperFirst.js", "../../node_modules/lodash/startCase.js", "../../node_modules/fast-formula-parser/grammar/type/collection.js", "../../node_modules/fast-formula-parser/formulas/helpers.js", "../../node_modules/fast-formula-parser/formulas/error.js", "../../node_modules/fast-formula-parser/ssf/ssf.js", "../../node_modules/bahttext/src/index.js", "../../node_modules/fast-formula-parser/formulas/functions/text.js", "../../node_modules/fast-formula-parser/formulas/operators.js", "../../node_modules/fast-formula-parser/formulas/functions/math.js", "../../node_modules/fast-formula-parser/formulas/functions/trigonometry.js", "../../node_modules/fast-formula-parser/formulas/functions/logical.js", "../../node_modules/bessel/bessel.js", "../../node_modules/jstat/dist/jstat.js", "../../node_modules/fast-formula-parser/formulas/functions/engineering.js", "../../node_modules/fast-formula-parser/formulas/functions/reference.js", "../../node_modules/fast-formula-parser/formulas/functions/information.js", "../../node_modules/fast-formula-parser/formulas/functions/distribution.js", "../../node_modules/fast-formula-parser/formulas/functions/statistical.js", "../../node_modules/fast-formula-parser/formulas/functions/date.js", "../../node_modules/fast-formula-parser/formulas/functions/web.js", "../../node_modules/fast-formula-parser/node_modules/chevrotain/src/version.ts", "../../node_modules/fast-formula-parser/node_modules/chevrotain/src/utils/utils.ts", "../../node_modules/fast-formula-parser/node_modules/regexp-to-ast/lib/regexp-to-ast.js", "../../node_modules/fast-formula-parser/node_modules/chevrotain/src/scan/reg_exp_parser.ts", "../../node_modules/fast-formula-parser/node_modules/chevrotain/src/scan/reg_exp.ts", "../../node_modules/fast-formula-parser/node_modules/chevrotain/src/scan/lexer.ts", "../../node_modules/fast-formula-parser/node_modules/chevrotain/src/scan/tokens.ts", "../../node_modules/fast-formula-parser/node_modules/chevrotain/src/scan/lexer_errors_public.ts", "../../node_modules/fast-formula-parser/node_modules/chevrotain/src/scan/lexer_public.ts", "../../node_modules/fast-formula-parser/node_modules/chevrotain/src/scan/tokens_public.ts", "../../node_modules/fast-formula-parser/node_modules/chevrotain/src/parse/grammar/gast/gast_public.ts", "../../node_modules/fast-formula-parser/node_modules/chevrotain/src/parse/grammar/rest.ts", "../../node_modules/fast-formula-parser/node_modules/chevrotain/src/parse/grammar/gast/gast_visitor_public.ts", "../../node_modules/fast-formula-parser/node_modules/chevrotain/src/parse/grammar/gast/gast.ts", "../../node_modules/fast-formula-parser/node_modules/chevrotain/src/parse/grammar/first.ts", "../../node_modules/fast-formula-parser/node_modules/chevrotain/src/parse/constants.ts", "../../node_modules/fast-formula-parser/node_modules/chevrotain/src/parse/grammar/follow.ts", "../../node_modules/fast-formula-parser/node_modules/chevrotain/src/parse/errors_public.ts", "../../node_modules/fast-formula-parser/node_modules/chevrotain/src/parse/grammar/resolver.ts", "../../node_modules/fast-formula-parser/node_modules/chevrotain/src/parse/grammar/interpreter.ts", "../../node_modules/fast-formula-parser/node_modules/chevrotain/src/parse/grammar/lookahead.ts", "../../node_modules/fast-formula-parser/node_modules/chevrotain/src/parse/grammar/checks.ts", "../../node_modules/fast-formula-parser/node_modules/chevrotain/src/parse/grammar/gast/gast_resolver_public.ts", "../../node_modules/fast-formula-parser/node_modules/chevrotain/src/parse/exceptions_public.ts", "../../node_modules/fast-formula-parser/node_modules/chevrotain/src/parse/parser/traits/recoverable.ts", "../../node_modules/fast-formula-parser/node_modules/chevrotain/src/parse/grammar/keys.ts", "../../node_modules/fast-formula-parser/node_modules/chevrotain/src/parse/parser/traits/looksahead.ts", "../../node_modules/fast-formula-parser/node_modules/chevrotain/src/parse/cst/cst.ts", "../../node_modules/fast-formula-parser/node_modules/chevrotain/src/lang/lang_extensions.ts", "../../node_modules/fast-formula-parser/node_modules/chevrotain/src/parse/cst/cst_visitor.ts", "../../node_modules/fast-formula-parser/node_modules/chevrotain/src/parse/parser/traits/tree_builder.ts", "../../node_modules/fast-formula-parser/node_modules/chevrotain/src/parse/parser/traits/lexer_adapter.ts", "../../node_modules/fast-formula-parser/node_modules/chevrotain/src/parse/parser/traits/recognizer_api.ts", "../../node_modules/fast-formula-parser/node_modules/chevrotain/src/parse/parser/traits/recognizer_engine.ts", "../../node_modules/fast-formula-parser/node_modules/chevrotain/src/parse/parser/traits/error_handler.ts", "../../node_modules/fast-formula-parser/node_modules/chevrotain/src/parse/parser/traits/context_assist.ts", "../../node_modules/fast-formula-parser/node_modules/chevrotain/src/parse/parser/traits/gast_recorder.ts", "../../node_modules/fast-formula-parser/node_modules/chevrotain/src/parse/parser/traits/perf_tracer.ts", "../../node_modules/fast-formula-parser/node_modules/chevrotain/src/parse/parser/parser.ts", "../../node_modules/fast-formula-parser/node_modules/chevrotain/src/diagrams/render_public.ts", "../../node_modules/fast-formula-parser/node_modules/chevrotain/src/generate/generate.ts", "../../node_modules/fast-formula-parser/node_modules/chevrotain/src/generate/generate_public.ts", "../../node_modules/fast-formula-parser/node_modules/chevrotain/src/api.ts", "../../node_modules/fast-formula-parser/grammar/lexing.js", "../../node_modules/fast-formula-parser/grammar/parsing.js", "../../node_modules/fast-formula-parser/grammar/utils.js", "../../node_modules/fast-formula-parser/grammar/hooks.js", "../../node_modules/fast-formula-parser/grammar/dependency/utils.js", "../../node_modules/fast-formula-parser/grammar/dependency/hooks.js", "../../node_modules/fast-formula-parser/index.js", "../../src/glide.ts", "../../src/icons.ts", "../../src/columns/fast-formula-parser.ts"],
  "sourcesContent": ["/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\nmodule.exports = arrayReduce;\n", "/**\n * The base implementation of `_.propertyOf` without support for deep paths.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyOf(object) {\n  return function(key) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = basePropertyOf;\n", "var basePropertyOf = require('./_basePropertyOf');\n\n/** Used to map Latin Unicode letters to basic Latin letters. */\nvar deburredLetters = {\n  // Latin-1 Supplement block.\n  '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n  '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n  '\\xc7': 'C',  '\\xe7': 'c',\n  '\\xd0': 'D',  '\\xf0': 'd',\n  '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n  '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n  '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n  '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n  '\\xd1': 'N',  '\\xf1': 'n',\n  '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n  '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n  '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n  '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n  '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n  '\\xc6': 'Ae', '\\xe6': 'ae',\n  '\\xde': 'Th', '\\xfe': 'th',\n  '\\xdf': 'ss',\n  // Latin Extended-A block.\n  '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n  '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n  '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n  '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n  '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n  '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n  '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n  '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n  '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n  '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n  '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n  '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n  '\\u0134': 'J',  '\\u0135': 'j',\n  '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n  '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n  '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n  '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n  '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n  '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n  '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n  '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n  '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n  '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n  '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n  '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n  '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n  '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n  '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n  '\\u0174': 'W',  '\\u0175': 'w',\n  '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n  '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n  '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n  '\\u0132': 'IJ', '\\u0133': 'ij',\n  '\\u0152': 'Oe', '\\u0153': 'oe',\n  '\\u0149': \"'n\", '\\u017f': 's'\n};\n\n/**\n * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n * letters to basic Latin letters.\n *\n * @private\n * @param {string} letter The matched letter to deburr.\n * @returns {string} Returns the deburred letter.\n */\nvar deburrLetter = basePropertyOf(deburredLetters);\n\nmodule.exports = deburrLetter;\n", "/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n", "var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n", "var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n", "/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n", "/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n", "var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n", "/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n", "var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n", "/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n", "var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n", "var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = baseToString;\n", "var baseToString = require('./_baseToString');\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;\n", "var deburrLetter = require('./_deburrLetter'),\n    toString = require('./toString');\n\n/** Used to match Latin Unicode letters (excluding mathematical operators). */\nvar reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n/** Used to compose unicode character classes. */\nvar rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;\n\n/** Used to compose unicode capture groups. */\nvar rsCombo = '[' + rsComboRange + ']';\n\n/**\n * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n */\nvar reComboMark = RegExp(rsCombo, 'g');\n\n/**\n * Deburrs `string` by converting\n * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n * letters to basic Latin letters and removing\n * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to deburr.\n * @returns {string} Returns the deburred string.\n * @example\n *\n * _.deburr('d\u00E9j\u00E0 vu');\n * // => 'deja vu'\n */\nfunction deburr(string) {\n  string = toString(string);\n  return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n}\n\nmodule.exports = deburr;\n", "/** Used to match words composed of alphanumeric characters. */\nvar reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n/**\n * Splits an ASCII `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction asciiWords(string) {\n  return string.match(reAsciiWord) || [];\n}\n\nmodule.exports = asciiWords;\n", "/** Used to detect strings that need a more robust regexp to match words. */\nvar reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n/**\n * Checks if `string` contains a word composed of Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a word is found, else `false`.\n */\nfunction hasUnicodeWord(string) {\n  return reHasUnicodeWord.test(string);\n}\n\nmodule.exports = hasUnicodeWord;\n", "/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsDingbatRange = '\\\\u2700-\\\\u27bf',\n    rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n    rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n    rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n    rsPunctuationRange = '\\\\u2000-\\\\u206f',\n    rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n    rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n    rsVarRange = '\\\\ufe0e\\\\ufe0f',\n    rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n/** Used to compose unicode capture groups. */\nvar rsApos = \"['\\u2019]\",\n    rsBreak = '[' + rsBreakRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsDigits = '\\\\d+',\n    rsDingbat = '[' + rsDingbatRange + ']',\n    rsLower = '[' + rsLowerRange + ']',\n    rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsUpper = '[' + rsUpperRange + ']',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n    rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n    rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n    rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n    reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])',\n    rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq;\n\n/** Used to match complex or compound words. */\nvar reUnicodeWord = RegExp([\n  rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n  rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n  rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n  rsUpper + '+' + rsOptContrUpper,\n  rsOrdUpper,\n  rsOrdLower,\n  rsDigits,\n  rsEmoji\n].join('|'), 'g');\n\n/**\n * Splits a Unicode `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction unicodeWords(string) {\n  return string.match(reUnicodeWord) || [];\n}\n\nmodule.exports = unicodeWords;\n", "var asciiWords = require('./_asciiWords'),\n    hasUnicodeWord = require('./_hasUnicodeWord'),\n    toString = require('./toString'),\n    unicodeWords = require('./_unicodeWords');\n\n/**\n * Splits `string` into an array of its words.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to inspect.\n * @param {RegExp|string} [pattern] The pattern to match words.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the words of `string`.\n * @example\n *\n * _.words('fred, barney, & pebbles');\n * // => ['fred', 'barney', 'pebbles']\n *\n * _.words('fred, barney, & pebbles', /[^, ]+/g);\n * // => ['fred', 'barney', '&', 'pebbles']\n */\nfunction words(string, pattern, guard) {\n  string = toString(string);\n  pattern = guard ? undefined : pattern;\n\n  if (pattern === undefined) {\n    return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n  }\n  return string.match(pattern) || [];\n}\n\nmodule.exports = words;\n", "var arrayReduce = require('./_arrayReduce'),\n    deburr = require('./deburr'),\n    words = require('./words');\n\n/** Used to compose unicode capture groups. */\nvar rsApos = \"['\\u2019]\";\n\n/** Used to match apostrophes. */\nvar reApos = RegExp(rsApos, 'g');\n\n/**\n * Creates a function like `_.camelCase`.\n *\n * @private\n * @param {Function} callback The function to combine each word.\n * @returns {Function} Returns the new compounder function.\n */\nfunction createCompounder(callback) {\n  return function(string) {\n    return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n  };\n}\n\nmodule.exports = createCompounder;\n", "/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nmodule.exports = baseSlice;\n", "var baseSlice = require('./_baseSlice');\n\n/**\n * Casts `array` to a slice if it's needed.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {number} start The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the cast slice.\n */\nfunction castSlice(array, start, end) {\n  var length = array.length;\n  end = end === undefined ? length : end;\n  return (!start && end >= length) ? array : baseSlice(array, start, end);\n}\n\nmodule.exports = castSlice;\n", "/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsZWJ = '\\\\u200d';\n\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\nvar reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */\nfunction hasUnicode(string) {\n  return reHasUnicode.test(string);\n}\n\nmodule.exports = hasUnicode;\n", "/**\n * Converts an ASCII `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction asciiToArray(string) {\n  return string.split('');\n}\n\nmodule.exports = asciiToArray;\n", "/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsAstral = '[' + rsAstralRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/**\n * Converts a Unicode `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction unicodeToArray(string) {\n  return string.match(reUnicode) || [];\n}\n\nmodule.exports = unicodeToArray;\n", "var asciiToArray = require('./_asciiToArray'),\n    hasUnicode = require('./_hasUnicode'),\n    unicodeToArray = require('./_unicodeToArray');\n\n/**\n * Converts `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction stringToArray(string) {\n  return hasUnicode(string)\n    ? unicodeToArray(string)\n    : asciiToArray(string);\n}\n\nmodule.exports = stringToArray;\n", "var castSlice = require('./_castSlice'),\n    hasUnicode = require('./_hasUnicode'),\n    stringToArray = require('./_stringToArray'),\n    toString = require('./toString');\n\n/**\n * Creates a function like `_.lowerFirst`.\n *\n * @private\n * @param {string} methodName The name of the `String` case method to use.\n * @returns {Function} Returns the new case function.\n */\nfunction createCaseFirst(methodName) {\n  return function(string) {\n    string = toString(string);\n\n    var strSymbols = hasUnicode(string)\n      ? stringToArray(string)\n      : undefined;\n\n    var chr = strSymbols\n      ? strSymbols[0]\n      : string.charAt(0);\n\n    var trailing = strSymbols\n      ? castSlice(strSymbols, 1).join('')\n      : string.slice(1);\n\n    return chr[methodName]() + trailing;\n  };\n}\n\nmodule.exports = createCaseFirst;\n", "var createCaseFirst = require('./_createCaseFirst');\n\n/**\n * Converts the first character of `string` to upper case.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.upperFirst('fred');\n * // => 'Fred'\n *\n * _.upperFirst('FRED');\n * // => 'FRED'\n */\nvar upperFirst = createCaseFirst('toUpperCase');\n\nmodule.exports = upperFirst;\n", "var createCompounder = require('./_createCompounder'),\n    upperFirst = require('./upperFirst');\n\n/**\n * Converts `string` to\n * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n *\n * @static\n * @memberOf _\n * @since 3.1.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the start cased string.\n * @example\n *\n * _.startCase('--foo-bar--');\n * // => 'Foo Bar'\n *\n * _.startCase('fooBar');\n * // => 'Foo Bar'\n *\n * _.startCase('__FOO_BAR__');\n * // => 'FOO BAR'\n */\nvar startCase = createCompounder(function(result, word, index) {\n  return result + (index ? ' ' : '') + upperFirst(word);\n});\n\nmodule.exports = startCase;\n", "/**\r\n * Represents unions.\r\n * (A1, A1:C5, ...)\r\n */\r\nclass Collection {\r\n\r\n    constructor(data, refs) {\r\n        if (data == null && refs == null) {\r\n            this._data = [];\r\n            this._refs = [];\r\n        } else {\r\n            if (data.length !== refs.length)\r\n                throw Error('Collection: data length should match references length.');\r\n            this._data = data;\r\n            this._refs = refs;\r\n        }\r\n    }\r\n\r\n    get data() {\r\n        return this._data;\r\n    }\r\n\r\n    get refs() {\r\n        return this._refs;\r\n    }\r\n\r\n    get length() {\r\n        return this._data.length;\r\n    }\r\n\r\n    /**\r\n     * Add data and references to this collection.\r\n     * @param {{}} obj - data\r\n     * @param {{}} ref - reference\r\n     */\r\n    add(obj, ref) {\r\n        this._data.push(obj);\r\n        this._refs.push(ref);\r\n    }\r\n}\r\n\r\nmodule.exports = Collection;\r\n", "const FormulaError = require('./error');\r\nconst Collection = require('../grammar/type/collection');\r\n\r\nconst Types = {\r\n    NUMBER: 0,\r\n    ARRAY: 1,\r\n    BOOLEAN: 2,\r\n    STRING: 3,\r\n    RANGE_REF: 4, // can be 'A:C' or '1:4', not only 'A1:C3'\r\n    CELL_REF: 5,\r\n    COLLECTIONS: 6, // Unions of references\r\n    NUMBER_NO_BOOLEAN: 10,\r\n};\r\n\r\nconst Factorials = [1, 1, 2, 6, 24, 120, 720, 5040, 40320, 362880, 3628800, 39916800, 479001600, 6227020800, 87178291200, 1307674368000, 20922789888000, 355687428096000, 6402373705728000, 121645100408832000, 2432902008176640000, 51090942171709440000, 1124000727777607680000, 25852016738884976640000, 620448401733239439360000, 15511210043330985984000000, 403291461126605635584000000, 10888869450418352160768000000, 304888344611713860501504000000, 8841761993739701954543616000000, 265252859812191058636308480000000, 8222838654177922817725562880000000, 263130836933693530167218012160000000, 8683317618811886495518194401280000000, 295232799039604140847618609643520000000, 10333147966386144929666651337523200000000, 371993326789901217467999448150835200000000, 13763753091226345046315979581580902400000000, 523022617466601111760007224100074291200000000, 20397882081197443358640281739902897356800000000, 815915283247897734345611269596115894272000000000, 33452526613163807108170062053440751665152000000000, 1405006117752879898543142606244511569936384000000000, 60415263063373835637355132068513997507264512000000000, 2658271574788448768043625811014615890319638528000000000, 119622220865480194561963161495657715064383733760000000000, 5502622159812088949850305428800254892961651752960000000000, 258623241511168180642964355153611979969197632389120000000000, 12413915592536072670862289047373375038521486354677760000000000, 608281864034267560872252163321295376887552831379210240000000000, 30414093201713378043612608166064768844377641568960512000000000000, 1551118753287382280224243016469303211063259720016986112000000000000, 80658175170943878571660636856403766975289505440883277824000000000000, 4274883284060025564298013753389399649690343788366813724672000000000000, 230843697339241380472092742683027581083278564571807941132288000000000000, 12696403353658275925965100847566516959580321051449436762275840000000000000, 710998587804863451854045647463724949736497978881168458687447040000000000000, 40526919504877216755680601905432322134980384796226602145184481280000000000000, 2350561331282878571829474910515074683828862318181142924420699914240000000000000, 138683118545689835737939019720389406345902876772687432540821294940160000000000000, 8320987112741390144276341183223364380754172606361245952449277696409600000000000000, 507580213877224798800856812176625227226004528988036003099405939480985600000000000000, 31469973260387937525653122354950764088012280797258232192163168247821107200000000000000, 1982608315404440064116146708361898137544773690227268628106279599612729753600000000000000, 126886932185884164103433389335161480802865516174545192198801894375214704230400000000000000, 8247650592082470666723170306785496252186258551345437492922123134388955774976000000000000000, 544344939077443064003729240247842752644293064388798874532860126869671081148416000000000000000, 36471110918188685288249859096605464427167635314049524593701628500267962436943872000000000000000, 2480035542436830599600990418569171581047399201355367672371710738018221445712183296000000000000000, 171122452428141311372468338881272839092270544893520369393648040923257279754140647424000000000000000, 11978571669969891796072783721689098736458938142546425857555362864628009582789845319680000000000000000, 850478588567862317521167644239926010288584608120796235886430763388588680378079017697280000000000000000, 61234458376886086861524070385274672740778091784697328983823014963978384987221689274204160000000000000000, 4470115461512684340891257138125051110076800700282905015819080092370422104067183317016903680000000000000000, 330788544151938641225953028221253782145683251820934971170611926835411235700971565459250872320000000000000000, 24809140811395398091946477116594033660926243886570122837795894512655842677572867409443815424000000000000000000, 1885494701666050254987932260861146558230394535379329335672487982961844043495537923117729972224000000000000000000, 145183092028285869634070784086308284983740379224208358846781574688061991349156420080065207861248000000000000000000, 11324281178206297831457521158732046228731749579488251990048962825668835325234200766245086213177344000000000000000000, 894618213078297528685144171539831652069808216779571907213868063227837990693501860533361810841010176000000000000000000, 71569457046263802294811533723186532165584657342365752577109445058227039255480148842668944867280814080000000000000000000, 5797126020747367985879734231578109105412357244731625958745865049716390179693892056256184534249745940480000000000000000000, 475364333701284174842138206989404946643813294067993328617160934076743994734899148613007131808479167119360000000000000000000, 39455239697206586511897471180120610571436503407643446275224357528369751562996629334879591940103770870906880000000000000000000, 3314240134565353266999387579130131288000666286242049487118846032383059131291716864129885722968716753156177920000000000000000000, 281710411438055027694947944226061159480056634330574206405101912752560026159795933451040286452340924018275123200000000000000000000, 24227095383672732381765523203441259715284870552429381750838764496720162249742450276789464634901319465571660595200000000000000000000, 2107757298379527717213600518699389595229783738061356212322972511214654115727593174080683423236414793504734471782400000000000000000000, 185482642257398439114796845645546284380220968949399346684421580986889562184028199319100141244804501828416633516851200000000000000000000, 16507955160908461081216919262453619309839666236496541854913520707833171034378509739399912570787600662729080382999756800000000000000000000, 1485715964481761497309522733620825737885569961284688766942216863704985393094065876545992131370884059645617234469978112000000000000000000000, 135200152767840296255166568759495142147586866476906677791741734597153670771559994765685283954750449427751168336768008192000000000000000000000, 12438414054641307255475324325873553077577991715875414356840239582938137710983519518443046123837041347353107486982656753664000000000000000000000, 1156772507081641574759205162306240436214753229576413535186142281213246807121467315215203289516844845303838996289387078090752000000000000000000000, 108736615665674308027365285256786601004186803580182872307497374434045199869417927630229109214583415458560865651202385340530688000000000000000000000, 10329978488239059262599702099394727095397746340117372869212250571234293987594703124871765375385424468563282236864226607350415360000000000000000000000, 991677934870949689209571401541893801158183648651267795444376054838492222809091499987689476037000748982075094738965754305639874560000000000000000000000, 96192759682482119853328425949563698712343813919172976158104477319333745612481875498805879175589072651261284189679678167647067832320000000000000000000000, 9426890448883247745626185743057242473809693764078951663494238777294707070023223798882976159207729119823605850588608460429412647567360000000000000000000000, 933262154439441526816992388562667004907159682643816214685929638952175999932299156089414639761565182862536979208272237582511852109168640000000000000000000000, 93326215443944152681699238856266700490715968264381621468592963895217599993229915608941463976156518286253697920827223758251185210916864000000000000000000000000];\r\n\r\nconst ReversedTypes = {};\r\nObject.keys(Types).forEach((key) => {\r\n    ReversedTypes[Types[key]] = key;\r\n});\r\n\r\n/**\r\n * Formula helpers.\r\n */\r\nclass FormulaHelpers {\r\n    constructor() {\r\n        this.Types = Types;\r\n        this.type2Number = {\r\n            number: Types.NUMBER,\r\n            boolean: Types.BOOLEAN,\r\n            string: Types.STRING,\r\n            object: -1\r\n        };\r\n    }\r\n\r\n    checkFunctionResult(result) {\r\n        const type = typeof result;\r\n        // number\r\n        if (type === 'number') {\r\n            if (isNaN(result)) {\r\n                return FormulaError.VALUE;\r\n            } else if (!isFinite(result)) {\r\n                return FormulaError.NUM;\r\n            }\r\n        }\r\n        if (result === undefined || result === null)\r\n            return FormulaError.NULL;\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Flatten an array\r\n     * @param {Array} arr1\r\n     * @returns {*}\r\n     */\r\n    flattenDeep(arr1) {\r\n        return arr1.reduce((acc, val) => Array.isArray(val) ? acc.concat(this.flattenDeep(val)) : acc.concat(val), []);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param obj\r\n     * @param isArray - if it is an array: [1,2,3], will extract the first element\r\n     * @param allowBoolean - Allow parse boolean into number\r\n     * @returns {number|FormulaError}\r\n     */\r\n    acceptNumber(obj, isArray = true, allowBoolean = true) {\r\n        // check error\r\n        if (obj instanceof FormulaError)\r\n            return obj;\r\n        let number;\r\n\r\n        if (typeof obj === 'number')\r\n            number = obj;\r\n        // TRUE -> 1, FALSE -> 0\r\n        else if (typeof obj === 'boolean') {\r\n            if (allowBoolean) {\r\n                number = Number(obj);\r\n            } else {\r\n                throw FormulaError.VALUE;\r\n            }\r\n        }\r\n        // \"123\" -> 123\r\n        else if (typeof obj === 'string') {\r\n            if (obj.length === 0) {\r\n                throw FormulaError.VALUE;\r\n            }\r\n            number = Number(obj);\r\n            // Note: the unique never-equal-to-itself characteristic of NaN\r\n            if (number !== number) {\r\n                throw FormulaError.VALUE;\r\n            }\r\n        } else if (Array.isArray(obj)) {\r\n            if (!isArray) {\r\n                // for range ref, only allow single column range ref\r\n                if (obj[0].length === 1) {\r\n                    number = this.acceptNumber(obj[0][0]);\r\n                } else {\r\n                    throw FormulaError.VALUE;\r\n                }\r\n            } else {\r\n                number = this.acceptNumber(obj[0][0]);\r\n            }\r\n\r\n        } else {\r\n            throw Error('Unknown type in FormulaHelpers.acceptNumber')\r\n        }\r\n        return number;\r\n    }\r\n\r\n    /**\r\n     * Flatten parameters to 1D array.\r\n     * @see {@link FormulaHelpers.accept}\r\n     * @param {Array} params - Parameter that needs to flatten.\r\n     * @param {Types|null} valueType - The type each item should be,\r\n     *                          null if allows any type. This only applies to literals.\r\n     * @param {boolean} allowUnion - Allow union, e.g. (A1:C1, E4:F3)\r\n     * @param {function} hook - Invoked after parsing each item.\r\n     *                         of the array.\r\n     * @param {*} [defValue=null] - The value if an param is omitted. i.e. SUM(1,2,,,,,)\r\n     * @param {number} [minSize=1] - The minimum size of the parameters\r\n     */\r\n    flattenParams(params, valueType, allowUnion, hook, defValue = null, minSize = 1) {\r\n        if (params.length < minSize)\r\n            throw FormulaError.ARG_MISSING([valueType]);\r\n        if (defValue == null) {\r\n            defValue = valueType === Types.NUMBER ? 0 : valueType == null ? null : '';\r\n        }\r\n        params.forEach(param => {\r\n            const {isCellRef, isRangeRef, isArray} = param;\r\n            const isUnion = param.value instanceof Collection;\r\n            const isLiteral = !isCellRef && !isRangeRef && !isArray && !isUnion;\r\n            const info = {isLiteral, isCellRef, isRangeRef, isArray, isUnion};\r\n\r\n            // single element\r\n            if (isLiteral) {\r\n                if (param.omitted)\r\n                    param = defValue;\r\n                else\r\n                    param = this.accept(param, valueType, defValue);\r\n                hook(param, info);\r\n            }\r\n            // cell reference of single range reference (A1:A1)\r\n            else if (isCellRef) {\r\n                hook(param.value, info);\r\n            }\r\n            // union\r\n            else if (isUnion) {\r\n                if (!allowUnion) throw FormulaError.VALUE;\r\n                param = param.value.data;\r\n                param = this.flattenDeep(param);\r\n                param.forEach(item => {\r\n                    hook(item, info);\r\n                })\r\n            } else if (isRangeRef || isArray) {\r\n                param = this.flattenDeep(param.value);\r\n                param.forEach(item => {\r\n                    hook(item, info);\r\n                })\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Check if the param valid, return the parsed param.\r\n     * If type is not given, return the un-parsed param.\r\n     * @param {*} param\r\n     * @param {number|null} [type] - The expected type\r\n     *           NUMBER: Expect a single number,\r\n     *           ARRAY: Expect an flatten array,\r\n     *           BOOLEAN: Expect a single boolean,\r\n     *           STRING: Expect a single string,\r\n     *           COLLECTIONS: Expect an Array of the above types\r\n     *           null: Do not parse the value, return it directly.\r\n     *           The collection is not a flatted array.\r\n     * @param {*} [defValue] - Default value if the param is not given.\r\n     *               if undefined, this param is required, a Error will throw if not given.\r\n     *               if null, and param is undefined, null will be returned.\r\n     * @param {boolean} [flat=true] - If the array should be flattened,\r\n     *                      only applicable when type is ARRAY.\r\n     *                      If false, collection is disallowed.\r\n     * @param {boolean} allowSingleValue - If pack single value into 2d array,\r\n     *                     only applicable when type is ARRAY.\r\n     * @return {string|number|boolean|{}|Array}\r\n     */\r\n    accept(param, type = null, defValue, flat = true, allowSingleValue = false) {\r\n        // TODO: remove this array check\r\n        if (Array.isArray(type))\r\n            type = type[0];\r\n        if (param == null && defValue === undefined) {\r\n            throw FormulaError.ARG_MISSING([type]);\r\n        } else if (param == null)\r\n            return defValue;\r\n\r\n        if (typeof param !== \"object\" || Array.isArray(param))\r\n            return param;\r\n\r\n        const isArray = param.isArray;\r\n        if (param.value != null) param = param.value;\r\n\r\n        // return an un-parsed type.\r\n        if (type == null)\r\n            return param;\r\n\r\n        if (param instanceof FormulaError)\r\n            throw param;\r\n\r\n        if (type === Types.ARRAY) {\r\n            if (Array.isArray(param)) {\r\n                return flat ? this.flattenDeep(param) : param;\r\n            } else if (param instanceof Collection) {\r\n                throw FormulaError.VALUE;\r\n            } else if (allowSingleValue) {\r\n                return flat ? [param] : [[param]];\r\n            }\r\n            throw FormulaError.VALUE;\r\n        } else if (type === Types.COLLECTIONS) {\r\n            return param;\r\n        }\r\n\r\n        // the only possible type for expectSingle=true are: string, boolean, number;\r\n        // If array encountered, extract the first element.\r\n        // extract first element from array\r\n        if (isArray) {\r\n            param = param[0][0];\r\n        }\r\n        const paramType = this.type(param);\r\n        if (type === Types.STRING) {\r\n            if (paramType === Types.BOOLEAN)\r\n                param = param ? 'TRUE' : 'FALSE';\r\n            else\r\n                param = `${param}`\r\n        } else if (type === Types.BOOLEAN) {\r\n            if (paramType === Types.STRING)\r\n                throw FormulaError.VALUE;\r\n            if (paramType === Types.NUMBER)\r\n                param = Boolean(param);\r\n        } else if (type === Types.NUMBER) {\r\n            param = this.acceptNumber(param, false);\r\n        } else if (type === Types.NUMBER_NO_BOOLEAN) {\r\n            param = this.acceptNumber(param, false, false);\r\n        } else {\r\n            throw FormulaError.VALUE;\r\n        }\r\n        return param;\r\n    }\r\n\r\n    type(variable) {\r\n        let type = this.type2Number[typeof variable];\r\n        if (type === -1) {\r\n            if (Array.isArray(variable))\r\n                type = Types.ARRAY;\r\n            else if (variable.ref) {\r\n                if (variable.ref.from) {\r\n                    type = Types.RANGE_REF;\r\n                } else {\r\n                    type = Types.CELL_REF;\r\n                }\r\n            } else if (variable instanceof Collection)\r\n                type = Types.COLLECTIONS;\r\n        }\r\n        return type;\r\n    }\r\n\r\n    isRangeRef(param) {\r\n        return param.ref && param.ref.from;\r\n    }\r\n\r\n    isCellRef(param) {\r\n        return param.ref && !param.ref.from;\r\n    }\r\n\r\n    /**\r\n     * Helper function for SUMIF, AVERAGEIF,...\r\n     * @param context\r\n     * @param range1\r\n     * @param range2\r\n     */\r\n    retrieveRanges(context, range1, range2) {\r\n        // process args\r\n        range2 = Address.extend(range1, range2);\r\n\r\n        // retrieve values\r\n        range1 = this.retrieveArg(context, range1);\r\n        range1 = H.accept(range1, Types.ARRAY, undefined, false, true);\r\n\r\n        if (range2 !== range1) {\r\n            range2 = this.retrieveArg(context, range2);\r\n            range2 = H.accept(range2, Types.ARRAY, undefined, false, true);\r\n        } else\r\n            range2 = range1;\r\n\r\n        return [range1, range2];\r\n    }\r\n\r\n    retrieveArg(context, arg) {\r\n        if (arg === null)\r\n            return {value: 0, isArray: false, omitted: true};\r\n        const res = context.utils.extractRefValue(arg);\r\n        return {value: res.val, isArray: res.isArray, ref: arg.ref};\r\n    }\r\n}\r\n\r\nconst H = new FormulaHelpers();\r\n\r\nconst WildCard = {\r\n    /**\r\n     * @param {string|*} obj\r\n     * @returns {*}\r\n     */\r\n    isWildCard: obj => {\r\n        if (typeof obj === \"string\")\r\n            return /[*?]/.test(obj);\r\n        return false;\r\n    },\r\n\r\n    toRegex: (lookupText, flags) => {\r\n        return RegExp(lookupText.replace(/[.+^${}()|[\\]\\\\]/g, '\\\\$&') // escape the special char for js regex\r\n            .replace(/([^~]??)[?]/g, '$1.') // ? => .\r\n            .replace(/([^~]??)[*]/g, '$1.*') // * => .*\r\n            .replace(/~([?*])/g, '$1'), flags); // ~* => * and ~? => ?\r\n    }\r\n};\r\n\r\nconst Criteria = {\r\n    /**\r\n     * Parse criteria, support comparison and wild card match.\r\n     * @param {string|number} criteria\r\n     * @return {{op: string, value: string|number|boolean|RegExp, match: boolean|undefined}} - The parsed criteria.\r\n     */\r\n    parse: (criteria) => {\r\n        const type = typeof criteria;\r\n        if (type === \"string\") {\r\n            // criteria = 'TRUE' or 'FALSE'\r\n            const upper = criteria.toUpperCase();\r\n            if (upper === 'TRUE' || upper === 'FALSE') {\r\n                // excel boolean\r\n                return {op: '=', value: upper === 'TRUE'};\r\n            }\r\n\r\n            const res = criteria.match(/(<>|>=|<=|>|<|=)(.*)/);\r\n            // is comparison\r\n            if (res) {\r\n                // [\">10\", \">\", \"10\", index: 0, input: \">10\", groups: undefined]\r\n                let op = res[1], value;\r\n\r\n                // string or boolean or error\r\n                if (isNaN(res[2])) {\r\n                    const upper = res[2].toUpperCase();\r\n                    if (upper === 'TRUE' || upper === 'FALSE') {\r\n                        // excel boolean\r\n                        value = upper === 'TRUE';\r\n                    } else if (/#NULL!|#DIV\\/0!|#VALUE!|#NAME\\?|#NUM!|#N\\/A|#REF!/.test(res[2])) {\r\n                        // formula error\r\n                        value = new FormulaError(res[2]);\r\n                    } else {\r\n                        // string, can be wildcard\r\n                        value = res[2];\r\n                        if (WildCard.isWildCard(value)) {\r\n                            return {op: 'wc', value: WildCard.toRegex(value), match: op === '='}\r\n                        }\r\n                    }\r\n                } else {\r\n                    // number\r\n                    value = Number(res[2])\r\n                }\r\n                return {op, value};\r\n\r\n            } else if (WildCard.isWildCard(criteria)) {\r\n                return {op: 'wc', value: WildCard.toRegex(criteria), match: true}\r\n            } else {\r\n                return {op: '=', value: criteria}\r\n            }\r\n        } else if (type === \"boolean\" || type === 'number' || (Array.isArray(criteria)\r\n            || criteria instanceof FormulaError)) {\r\n            return {op: '=', value: criteria}\r\n        } else {\r\n            throw Error(`Criteria.parse: type ${typeof criteria} not support`)\r\n        }\r\n    }\r\n};\r\n\r\nconst Address = {\r\n\r\n    columnNumberToName: (number) => {\r\n        let dividend = number;\r\n        let name = '';\r\n        let modulo = 0;\r\n\r\n        while (dividend > 0) {\r\n            modulo = (dividend - 1) % 26;\r\n            name = String.fromCharCode('A'.charCodeAt(0) + modulo) + name;\r\n            dividend = Math.floor((dividend - modulo) / 26);\r\n        }\r\n\r\n        return name;\r\n    },\r\n\r\n    columnNameToNumber: (columnName) => {\r\n        columnName = columnName.toUpperCase();\r\n        const len = columnName.length;\r\n        let number = 0;\r\n        for (let i = 0; i < len; i++) {\r\n            const code = columnName.charCodeAt(i);\r\n            if (!isNaN(code)) {\r\n                number += (code - 64) * 26 ** (len - i - 1)\r\n            }\r\n        }\r\n        return number;\r\n    },\r\n\r\n    /**\r\n     * Extend range2 to match with the dimension in range1.\r\n     * @param {{ref: {}}} range1\r\n     * @param {{ref: {}}} [range2]\r\n     */\r\n    extend: (range1, range2) => {\r\n        if (range2 == null) {\r\n            return range1;\r\n        }\r\n        let rowOffset, colOffset;\r\n        if (H.isCellRef(range1)) {\r\n            rowOffset = 0;\r\n            colOffset = 0;\r\n        } else if (H.isRangeRef(range1)) {\r\n            rowOffset = range1.ref.to.row - range1.ref.from.row;\r\n            colOffset = range1.ref.to.col - range1.ref.from.col;\r\n        } else throw Error('Address.extend should not reach here.');\r\n        // if range2 is a cell reference\r\n        if (H.isCellRef(range2)) {\r\n            if (rowOffset > 0 || colOffset > 0)\r\n                range2 = {\r\n                    ref: {\r\n                        from: {col: range2.ref.col, row: range2.ref.row},\r\n                        to: {row: range2.ref.row + rowOffset, col: range2.ref.col + colOffset}\r\n                    }\r\n                };\r\n        } else {\r\n            // range2 is a range reference\r\n            range2.ref.to.row = range2.ref.from.row + rowOffset;\r\n            range2.ref.to.col = range2.ref.from.col + colOffset;\r\n        }\r\n        return range2;\r\n    },\r\n};\r\n\r\nmodule.exports = {\r\n    FormulaHelpers: H,\r\n    Types,\r\n    ReversedTypes,\r\n    Factorials,\r\n    WildCard,\r\n    Criteria,\r\n    Address,\r\n};\r\n", "/**\r\n * Formula Error.\r\n */\r\nclass FormulaError extends Error {\r\n\r\n    /**\r\n     * @param {string} error - error code, i.e. #NUM!\r\n     * @param {string} [msg] - detailed error message\r\n     * @param {object|Error} [details]\r\n     * @returns {FormulaError}\r\n     */\r\n    constructor(error, msg, details) {\r\n        super(msg);\r\n        if (msg == null && details == null && FormulaError.errorMap.has(error))\r\n            return FormulaError.errorMap.get(error);\r\n        else if (msg == null && details == null) {\r\n            this._error = error;\r\n            FormulaError.errorMap.set(error, this);\r\n        } else {\r\n            this._error = error;\r\n        }\r\n        this.details = details;\r\n    }\r\n\r\n    /**\r\n     * Get the error name.\r\n     * @returns {string} formula error\r\n     */\r\n    get error() {\r\n        return this._error;\r\n    }\r\n    get name() {\r\n        return this._error;\r\n    }\r\n\r\n    /**\r\n     * Return true if two errors are same.\r\n     * @param {FormulaError} err\r\n     * @returns {boolean} if two errors are same.\r\n     */\r\n    equals(err) {\r\n        return err instanceof FormulaError && err._error === this._error;\r\n    }\r\n\r\n    /**\r\n     * Return the formula error in string representation.\r\n     * @returns {string} the formula error in string representation.\r\n     */\r\n    toString() {\r\n        return this._error;\r\n    }\r\n}\r\n\r\nFormulaError.errorMap = new Map();\r\n\r\n/**\r\n * DIV0 error\r\n * @type {FormulaError}\r\n */\r\nFormulaError.DIV0 = new FormulaError(\"#DIV/0!\");\r\n\r\n/**\r\n * NA error\r\n * @type {FormulaError}\r\n */\r\nFormulaError.NA = new FormulaError(\"#N/A\");\r\n\r\n/**\r\n * NAME error\r\n * @type {FormulaError}\r\n */\r\nFormulaError.NAME = new FormulaError(\"#NAME?\");\r\n\r\n/**\r\n * NULL error\r\n * @type {FormulaError}\r\n */\r\nFormulaError.NULL = new FormulaError(\"#NULL!\");\r\n\r\n/**\r\n * NUM error\r\n * @type {FormulaError}\r\n */\r\nFormulaError.NUM = new FormulaError(\"#NUM!\");\r\n\r\n/**\r\n * REF error\r\n * @type {FormulaError}\r\n */\r\nFormulaError.REF = new FormulaError(\"#REF!\");\r\n\r\n/**\r\n * VALUE error\r\n * @type {FormulaError}\r\n */\r\nFormulaError.VALUE = new FormulaError(\"#VALUE!\");\r\n\r\n/**\r\n * NOT_IMPLEMENTED error\r\n * @param {string} functionName - the name of the not implemented function\r\n * @returns {FormulaError}\r\n * @constructor\r\n */\r\nFormulaError.NOT_IMPLEMENTED = (functionName) => {\r\n    return new FormulaError(\"#NAME?\", `Function ${functionName} is not implemented.`)\r\n};\r\n\r\n/**\r\n * TOO_MANY_ARGS error\r\n * @param functionName - the name of the errored function\r\n * @returns {FormulaError}\r\n * @constructor\r\n */\r\nFormulaError.TOO_MANY_ARGS = (functionName) => {\r\n    return new FormulaError(\"#N/A\", `Function ${functionName} has too many arguments.`)\r\n};\r\n\r\n/**\r\n * ARG_MISSING error\r\n * @param args - the name of the errored function\r\n * @returns {FormulaError}\r\n * @constructor\r\n */\r\nFormulaError.ARG_MISSING = (args) => {\r\n    const {Types} = require('./helpers');\r\n    return new FormulaError(\"#N/A\", `Argument type ${args.map(arg => Types[arg]).join(', ')} is missing.`)\r\n};\r\n\r\n/**\r\n * #ERROR!\r\n * Parse/Lex error or other unexpected errors\r\n * @param {string} msg\r\n * @param {object|Error} [details]\r\n * @return {FormulaError}\r\n * @constructor\r\n */\r\nFormulaError.ERROR = (msg, details) => {\r\n    return new FormulaError('#ERROR!', msg, details);\r\n}\r\n\r\nmodule.exports = FormulaError;\r\n", "// https://github.com/looker/ssf/blob/master/ssf.js\n/* ssf.js (C) 2013-present SheetJS -- http://sheetjs.com */\n\n/**\n * Spreadsheet formatter.\n * @type {{}}\n */\nclass SSF {\n}\n\n/**\n * The version of SSF.\n * @type {string}\n */\nSSF.version = '0.10.3';\n\nfunction _strrev(x) {\n    let o = \"\", i = x.length - 1;\n    while (i >= 0) o += x.charAt(i--);\n    return o;\n}\n\nfunction fill(c, l) {\n    let o = \"\";\n    while (o.length < l) o += c;\n    return o;\n}\n\nfunction pad0(v, d) {\n    let t = \"\" + v;\n    return t.length >= d ? t : fill('0', d - t.length) + t;\n}\n\nfunction pad_(v, d) {\n    let t = \"\" + v;\n    return t.length >= d ? t : fill(' ', d - t.length) + t;\n}\n\nfunction rpad_(v, d) {\n    let t = \"\" + v;\n    return t.length >= d ? t : t + fill(' ', d - t.length);\n}\n\nfunction pad0r1(v, d) {\n    let t = \"\" + Math.round(v);\n    return t.length >= d ? t : fill('0', d - t.length) + t;\n}\n\nfunction pad0r2(v, d) {\n    let t = \"\" + v;\n    return t.length >= d ? t : fill('0', d - t.length) + t;\n}\n\nconst p2_32 = Math.pow(2, 32);\n\nfunction pad0r(v, d) {\n    if (v > p2_32 || v < -p2_32) return pad0r1(v, d);\n    const i = Math.round(v);\n    return pad0r2(i, d);\n}\n\nfunction isgeneral(s, i) {\n    i = i || 0;\n    return s.length >= 7 + i && (s.charCodeAt(i) | 32) === 103 && (s.charCodeAt(i + 1) | 32) === 101 && (s.charCodeAt(i + 2) | 32) === 110 && (s.charCodeAt(i + 3) | 32) === 101 && (s.charCodeAt(i + 4) | 32) === 114 && (s.charCodeAt(i + 5) | 32) === 97 && (s.charCodeAt(i + 6) | 32) === 108;\n}\n\nconst days = [\n    ['Sun', 'Sunday'],\n    ['Mon', 'Monday'],\n    ['Tue', 'Tuesday'],\n    ['Wed', 'Wednesday'],\n    ['Thu', 'Thursday'],\n    ['Fri', 'Friday'],\n    ['Sat', 'Saturday']\n];\nconst months = [\n    ['J', 'Jan', 'January'],\n    ['F', 'Feb', 'February'],\n    ['M', 'Mar', 'March'],\n    ['A', 'Apr', 'April'],\n    ['M', 'May', 'May'],\n    ['J', 'Jun', 'June'],\n    ['J', 'Jul', 'July'],\n    ['A', 'Aug', 'August'],\n    ['S', 'Sep', 'September'],\n    ['O', 'Oct', 'October'],\n    ['N', 'Nov', 'November'],\n    ['D', 'Dec', 'December']\n];\n\nfunction init_table(t) {\n    t[0] = 'General';\n    t[1] = '0';\n    t[2] = '0.00';\n    t[3] = '#,##0';\n    t[4] = '#,##0.00';\n    t[9] = '0%';\n    t[10] = '0.00%';\n    t[11] = '0.00E+00';\n    t[12] = '# ?/?';\n    t[13] = '# ??/??';\n    t[14] = 'm/d/yy';\n    t[15] = 'd-mmm-yy';\n    t[16] = 'd-mmm';\n    t[17] = 'mmm-yy';\n    t[18] = 'h:mm AM/PM';\n    t[19] = 'h:mm:ss AM/PM';\n    t[20] = 'h:mm';\n    t[21] = 'h:mm:ss';\n    t[22] = 'm/d/yy h:mm';\n    t[37] = '#,##0 ;(#,##0)';\n    t[38] = '#,##0 ;[Red](#,##0)';\n    t[39] = '#,##0.00;(#,##0.00)';\n    t[40] = '#,##0.00;[Red](#,##0.00)';\n    t[45] = 'mm:ss';\n    t[46] = '[h]:mm:ss';\n    t[47] = 'mmss.0';\n    t[48] = '##0.0E+0';\n    t[49] = '@';\n    t[56] = '\"\u4E0A\u5348/\u4E0B\u5348 \"hh\"\u6642\"mm\"\u5206\"ss\"\u79D2 \"';\n    t[65535] = 'General';\n}\n\nconst table_fmt = {};\ninit_table(table_fmt);\n\nfunction frac(x, D, mixed) {\n    const sgn = x < 0 ? -1 : 1;\n    let B = x * sgn;\n    let P_2 = 0, P_1 = 1, P = 0;\n    let Q_2 = 1, Q_1 = 0, Q = 0;\n    let A = Math.floor(B);\n    while (Q_1 < D) {\n        A = Math.floor(B);\n        P = A * P_1 + P_2;\n        Q = A * Q_1 + Q_2;\n        if ((B - A) < 0.00000005) break;\n        B = 1 / (B - A);\n        P_2 = P_1;\n        P_1 = P;\n        Q_2 = Q_1;\n        Q_1 = Q;\n    }\n    if (Q > D) {\n        if (Q_1 > D) {\n            Q = Q_2;\n            P = P_2;\n        } else {\n            Q = Q_1;\n            P = P_1;\n        }\n    }\n    if (!mixed) return [0, sgn * P, Q];\n    const q = Math.floor(sgn * P / Q);\n    return [q, sgn * P - q * Q, Q];\n}\n\nfunction parse_date_code(v, opts, b2) {\n    if (v > 2958465 || v < 0) return null;\n    let date = (v | 0), time = Math.floor(86400 * (v - date)), dow = 0;\n    let dout = [];\n    const out = {D: date, T: time, u: 86400 * (v - date) - time, y: 0, m: 0, d: 0, H: 0, M: 0, S: 0, q: 0};\n    if (Math.abs(out.u) < 1e-6) out.u = 0;\n    if (opts && opts.date1904) date += 1462;\n    if (out.u > 0.9999) {\n        out.u = 0;\n        if (++time === 86400) {\n            out.T = time = 0;\n            ++date;\n            ++out.D;\n        }\n    }\n    if (date === 60) {\n        dout = b2 ? [1317, 10, 29] : [1900, 2, 29];\n        dow = 3;\n    } else if (date === 0) {\n        dout = b2 ? [1317, 8, 29] : [1900, 1, 0];\n        dow = 6;\n    } else {\n        if (date > 60) --date;\n        /* 1 = Jan 1 1900 in Gregorian */\n        const d = new Date(1900, 0, 1);\n        d.setDate(d.getDate() + date - 1);\n        dout = [d.getFullYear(), d.getMonth() + 1, d.getDate()];\n        dow = d.getDay();\n        if (date < 60) dow = (dow + 6) % 7;\n        if (b2) dow = fix_hijri(d, dout);\n    }\n    out.y = dout[0];\n    out.m = dout[1];\n    out.d = dout[2];\n    out.S = time % 60;\n    time = Math.floor(time / 60);\n    out.M = time % 60;\n    time = Math.floor(time / 60);\n    out.H = time;\n    out.q = dow;\n    return out;\n}\n\nSSF.parse_date_code = parse_date_code;\nconst basedate = new Date(1899, 11, 31, 0, 0, 0);\nconst dnthresh = basedate.getTime();\nconst base1904 = new Date(1900, 2, 1, 0, 0, 0);\n\nfunction datenum_local(v, date1904) {\n    let epoch = v.getTime();\n    if (date1904) epoch -= 1461 * 24 * 60 * 60 * 1000;\n    else if (v >= base1904) epoch += 24 * 60 * 60 * 1000;\n    return (epoch - (dnthresh + (v.getTimezoneOffset() - basedate.getTimezoneOffset()) * 60000)) / (24 * 60 * 60 * 1000);\n}\n\nfunction general_fmt_int(v) {\n    return v.toString(10);\n}\n\nSSF._general_int = general_fmt_int;\nconst general_fmt_num = (function make_general_fmt_num() {\n    const gnr1 = /\\.(\\d*[1-9])0+$/, gnr2 = /\\.0*$/, gnr4 = /\\.(\\d*[1-9])0+/, gnr5 = /\\.0*[Ee]/,\n        gnr6 = /(E[+-])(\\d)$/;\n\n    function gfn2(v) {\n        const w = (v < 0 ? 12 : 11);\n        let o = gfn5(v.toFixed(12));\n        if (o.length <= w) return o;\n        o = v.toPrecision(10);\n        if (o.length <= w) return o;\n        return v.toExponential(5);\n    }\n\n    function gfn3(v) {\n        let o = v.toFixed(11).replace(gnr1, \".$1\");\n        if (o.length > (v < 0 ? 12 : 11)) o = v.toPrecision(6);\n        return o;\n    }\n\n    function gfn4(o) {\n        for (let i = 0; i !== o.length; ++i) if ((o.charCodeAt(i) | 0x20) === 101) return o.replace(gnr4, \".$1\").replace(gnr5, \"E\").replace(\"e\", \"E\").replace(gnr6, \"$10$2\");\n        return o;\n    }\n\n    function gfn5(o) {\n        return o.indexOf(\".\") > -1 ? o.replace(gnr2, \"\").replace(gnr1, \".$1\") : o;\n    }\n\n    return function general_fmt_num(v) {\n        let V = Math.floor(Math.log(Math.abs(v)) * Math.LOG10E), o;\n        if (V >= -4 && V <= -1) o = v.toPrecision(10 + V);\n        else if (Math.abs(V) <= 9) o = gfn2(v);\n        else if (V === 10) o = v.toFixed(10).substr(0, 12);\n        else o = gfn3(v);\n        return gfn5(gfn4(o));\n    };\n})();\nSSF._general_num = general_fmt_num;\n\nfunction general_fmt(v, opts) {\n    switch (typeof v) {\n        case 'string':\n            return v;\n        case 'boolean':\n            return v ? \"TRUE\" : \"FALSE\";\n        case 'number':\n            return (v | 0) === v ? general_fmt_int(v) : general_fmt_num(v);\n        case 'undefined':\n            return \"\";\n        case 'object':\n            if (v == null) return \"\";\n            if (v instanceof Date) return format(14, datenum_local(v, opts && opts.date1904), opts);\n    }\n    throw new Error(\"unsupported value in General format: \" + v);\n}\n\nSSF._general = general_fmt;\n\nfunction fix_hijri() {\n    return 0;\n}\n\n/*jshint -W086 */\nfunction write_date(type, fmt, val, ss0) {\n    let o = \"\", ss = 0, tt = 0, y = val.y, out, outl = 0;\n    switch (type) {\n        case 98: /* 'b' buddhist year */\n            y = val.y + 543;\n        /* falls through */\n        case 121: /* 'y' year */\n            switch (fmt.length) {\n                case 1:\n                case 2:\n                    out = y % 100;\n                    outl = 2;\n                    break;\n                default:\n                    out = y % 10000;\n                    outl = 4;\n                    break;\n            }\n            break;\n        case 109: /* 'm' month */\n            switch (fmt.length) {\n                case 1:\n                case 2:\n                    out = val.m;\n                    outl = fmt.length;\n                    break;\n                case 3:\n                    return months[val.m - 1][1];\n                case 5:\n                    return months[val.m - 1][0];\n                default:\n                    return months[val.m - 1][2];\n            }\n            break;\n        case 100: /* 'd' day */\n            switch (fmt.length) {\n                case 1:\n                case 2:\n                    out = val.d;\n                    outl = fmt.length;\n                    break;\n                case 3:\n                    return days[val.q][0];\n                default:\n                    return days[val.q][1];\n            }\n            break;\n        case 104: /* 'h' 12-hour */\n            switch (fmt.length) {\n                case 1:\n                case 2:\n                    out = 1 + (val.H + 11) % 12;\n                    outl = fmt.length;\n                    break;\n                default:\n                    throw 'bad hour format: ' + fmt;\n            }\n            break;\n        case 72: /* 'H' 24-hour */\n            switch (fmt.length) {\n                case 1:\n                case 2:\n                    out = val.H;\n                    outl = fmt.length;\n                    break;\n                default:\n                    throw 'bad hour format: ' + fmt;\n            }\n            break;\n        case 77: /* 'M' minutes */\n            switch (fmt.length) {\n                case 1:\n                case 2:\n                    out = val.M;\n                    outl = fmt.length;\n                    break;\n                default:\n                    throw 'bad minute format: ' + fmt;\n            }\n            break;\n        case 115: /* 's' seconds */\n            if (fmt !== 's' && fmt !== 'ss' && fmt !== '.0' && fmt !== '.00' && fmt !== '.000') throw 'bad second format: ' + fmt;\n            if (val.u === 0 && (fmt === \"s\" || fmt === \"ss\")) return pad0(val.S, fmt.length);\n            if (ss0 >= 2) tt = ss0 === 3 ? 1000 : 100;\n            else tt = ss0 === 1 ? 10 : 1;\n            ss = Math.round((tt) * (val.S + val.u));\n            if (ss >= 60 * tt) ss = 0;\n            if (fmt === 's') return ss === 0 ? \"0\" : \"\" + ss / tt;\n            o = pad0(ss, 2 + ss0);\n            if (fmt === 'ss') return o.substr(0, 2);\n            return \".\" + o.substr(2, fmt.length - 1);\n        case 90: /* 'Z' absolute time */\n            switch (fmt) {\n                case '[h]':\n                case '[hh]':\n                    out = val.D * 24 + val.H;\n                    break;\n                case '[m]':\n                case '[mm]':\n                    out = (val.D * 24 + val.H) * 60 + val.M;\n                    break;\n                case '[s]':\n                case '[ss]':\n                    out = ((val.D * 24 + val.H) * 60 + val.M) * 60 + Math.round(val.S + val.u);\n                    break;\n                default:\n                    throw 'bad abstime format: ' + fmt;\n            }\n            outl = fmt.length === 3 ? 1 : 2;\n            break;\n        case 101: /* 'e' era */\n            out = y;\n            outl = 1;\n    }\n    if (outl > 0) return pad0(out, outl); else return \"\";\n}\n\n/*jshint +W086 */\nfunction commaify(s) {\n    const w = 3;\n    if (s.length <= w) return s;\n    let j = (s.length % w), o = s.substr(0, j);\n    for (; j !== s.length; j += w) o += (o.length > 0 ? \",\" : \"\") + s.substr(j, w);\n    return o;\n}\n\nconst write_num = (function make_write_num() {\n    const pct1 = /%/g;\n\n    function write_num_pct(type, fmt, val) {\n        const sfmt = fmt.replace(pct1, \"\"), mul = fmt.length - sfmt.length;\n        return write_num(type, sfmt, val * Math.pow(10, 2 * mul)) + fill(\"%\", mul);\n    }\n\n    function write_num_cm(type, fmt, val) {\n        let idx = fmt.length - 1;\n        while (fmt.charCodeAt(idx - 1) === 44) --idx;\n        return write_num(type, fmt.substr(0, idx), val / Math.pow(10, 3 * (fmt.length - idx)));\n    }\n\n    function write_num_exp(fmt, val) {\n        let o;\n        let idx = fmt.indexOf(\"E\") - fmt.indexOf(\".\") - 1;\n        if (fmt.match(/^#+0.0E\\+0$/)) {\n            if (val === 0) return \"0.0E+0\";\n            else if (val < 0) return \"-\" + write_num_exp(fmt, -val);\n            let period = fmt.indexOf(\".\");\n            if (period === -1) period = fmt.indexOf('E');\n            let ee = Math.floor(Math.log(val) * Math.LOG10E) % period;\n            if (ee < 0) ee += period;\n            o = (val / Math.pow(10, ee)).toPrecision(idx + 1 + (period + ee) % period);\n            if (o.indexOf(\"e\") === -1) {\n                const fakee = Math.floor(Math.log(val) * Math.LOG10E);\n                if (o.indexOf(\".\") === -1) o = o.charAt(0) + \".\" + o.substr(1) + \"E+\" + (fakee - o.length + ee);\n                else o += \"E+\" + (fakee - ee);\n                while (o.substr(0, 2) === \"0.\") {\n                    o = o.charAt(0) + o.substr(2, period) + \".\" + o.substr(2 + period);\n                    o = o.replace(/^0+([1-9])/, \"$1\").replace(/^0+\\./, \"0.\");\n                }\n                o = o.replace(/\\+-/, \"-\");\n            }\n            o = o.replace(/^([+-]?)(\\d*)\\.(\\d*)[Ee]/, function ($$, $1, $2, $3) {\n                return $1 + $2 + $3.substr(0, (period + ee) % period) + \".\" + $3.substr(ee) + \"E\";\n            });\n        } else o = val.toExponential(idx);\n        if (fmt.match(/E\\+00$/) && o.match(/e[+-]\\d$/)) o = o.substr(0, o.length - 1) + \"0\" + o.charAt(o.length - 1);\n        if (fmt.match(/E\\-/) && o.match(/e\\+/)) o = o.replace(/e\\+/, \"e\");\n        return o.replace(\"e\", \"E\");\n    }\n\n    const frac1 = /# (\\?+)( ?)\\/( ?)(\\d+)/;\n\n    function write_num_f1(r, aval, sign) {\n        const den = parseInt(r[4], 10), rr = Math.round(aval * den), base = Math.floor(rr / den);\n        let myn = (rr - base * den), myd = den;\n        return sign + (base === 0 ? \"\" : \"\" + base) + \" \" + (myn === 0 ? fill(\" \", r[1].length + 1 + r[4].length) : pad_(myn, r[1].length) + r[2] + \"/\" + r[3] + pad0(myd, r[4].length));\n    }\n\n    function write_num_f2(r, aval, sign) {\n        return sign + (aval === 0 ? \"\" : \"\" + aval) + fill(\" \", r[1].length + 2 + r[4].length);\n    }\n\n    const dec1 = /^#*0*\\.([0#]+)/;\n    const closeparen = /\\).*[0#]/;\n    const phone = /\\(###\\) ###\\\\?-####/;\n\n    function hashq(str) {\n        let o = \"\", cc;\n        for (let i = 0; i !== str.length; ++i) switch ((cc = str.charCodeAt(i))) {\n            case 35:\n                break;\n            case 63:\n                o += \" \";\n                break;\n            case 48:\n                o += \"0\";\n                break;\n            default:\n                o += String.fromCharCode(cc);\n        }\n        return o;\n    }\n\n    function rnd(val, d) {\n        const dd = Math.pow(10, d);\n        return \"\" + (Math.round(val * dd) / dd);\n    }\n\n    function dec(val, d) {\n        if (d < ('' + Math.round((val - Math.floor(val)) * Math.pow(10, d))).length) {\n            return 0;\n        }\n        return Math.round((val - Math.floor(val)) * Math.pow(10, d));\n    }\n\n    function carry(val, d) {\n        if (d < ('' + Math.round((val - Math.floor(val)) * Math.pow(10, d))).length) {\n            return 1;\n        }\n        return 0;\n    }\n\n    function flr(val) {\n        if (val < 2147483647 && val > -2147483648) return \"\" + (val >= 0 ? (val | 0) : (val - 1 | 0));\n        return \"\" + Math.floor(val);\n    }\n\n    function write_num_flt(type, fmt, val) {\n        if (type.charCodeAt(0) === 40 && !fmt.match(closeparen)) {\n            const ffmt = fmt.replace(/\\( */, \"\").replace(/ \\)/, \"\").replace(/\\)/, \"\");\n            if (val >= 0) return write_num_flt('n', ffmt, val);\n            return '(' + write_num_flt('n', ffmt, -val) + ')';\n        }\n        if (fmt.charCodeAt(fmt.length - 1) === 44) return write_num_cm(type, fmt, val);\n        if (fmt.indexOf('%') !== -1) return write_num_pct(type, fmt, val);\n        if (fmt.indexOf('E') !== -1) return write_num_exp(fmt, val);\n        if (fmt.charCodeAt(0) === 36) return \"$\" + write_num_flt(type, fmt.substr(fmt.charAt(1) == ' ' ? 2 : 1), val);\n        let o;\n        let r, ri, ff, aval = Math.abs(val), sign = val < 0 ? \"-\" : \"\";\n        if (fmt.match(/^00+$/)) return sign + pad0r(aval, fmt.length);\n        if (fmt.match(/^[#?]+$/)) {\n            o = pad0r(val, 0);\n            if (o === \"0\") o = \"\";\n            return o.length > fmt.length ? o : hashq(fmt.substr(0, fmt.length - o.length)) + o;\n        }\n        if ((r = fmt.match(frac1))) return write_num_f1(r, aval, sign);\n        if (fmt.match(/^#+0+$/)) return sign + pad0r(aval, fmt.length - fmt.indexOf(\"0\"));\n        if ((r = fmt.match(dec1))) {\n            o = rnd(val, r[1].length).replace(/^([^\\.]+)$/, \"$1.\" + hashq(r[1])).replace(/\\.$/, \".\" + hashq(r[1])).replace(/\\.(\\d*)$/, function ($$, $1) {\n                return \".\" + $1 + fill(\"0\", hashq(r[1]).length - $1.length);\n            });\n            return fmt.indexOf(\"0.\") !== -1 ? o : o.replace(/^0\\./, \".\");\n        }\n        fmt = fmt.replace(/^#+([0.])/, \"$1\");\n        if ((r = fmt.match(/^(0*)\\.(#*)$/))) {\n            return sign + rnd(aval, r[2].length).replace(/\\.(\\d*[1-9])0*$/, \".$1\").replace(/^(-?\\d*)$/, \"$1.\").replace(/^0\\./, r[1].length ? \"0.\" : \".\");\n        }\n        if ((r = fmt.match(/^#{1,3},##0(\\.?)$/))) return sign + commaify(pad0r(aval, 0));\n        if ((r = fmt.match(/^#,##0\\.([#0]*0)$/))) {\n            return val < 0 ? \"-\" + write_num_flt(type, fmt, -val) : commaify(\"\" + (Math.floor(val) + carry(val, r[1].length))) + \".\" + pad0(dec(val, r[1].length), r[1].length);\n        }\n        if ((r = fmt.match(/^#,#*,#0/))) return write_num_flt(type, fmt.replace(/^#,#*,/, \"\"), val);\n        if ((r = fmt.match(/^([0#]+)(\\\\?-([0#]+))+$/))) {\n            o = _strrev(write_num_flt(type, fmt.replace(/[\\\\-]/g, \"\"), val));\n            ri = 0;\n            return _strrev(_strrev(fmt.replace(/\\\\/g, \"\")).replace(/[0#]/g, function (x) {\n                return ri < o.length ? o.charAt(ri++) : x === '0' ? '0' : \"\";\n            }));\n        }\n        if (fmt.match(phone)) {\n            o = write_num_flt(type, \"##########\", val);\n            return \"(\" + o.substr(0, 3) + \") \" + o.substr(3, 3) + \"-\" + o.substr(6);\n        }\n        let oa = \"\";\n        if ((r = fmt.match(/^([#0?]+)( ?)\\/( ?)([#0?]+)/))) {\n            ri = Math.min(r[4].length, 7);\n            ff = frac(aval, Math.pow(10, ri) - 1, false);\n            o = \"\" + sign;\n            oa = write_num(\"n\", r[1], ff[1]);\n            if (oa.charAt(oa.length - 1) === \" \") oa = oa.substr(0, oa.length - 1) + \"0\";\n            o += oa + r[2] + \"/\" + r[3];\n            oa = rpad_(ff[2], ri);\n            if (oa.length < r[4].length) oa = hashq(r[4].substr(r[4].length - oa.length)) + oa;\n            o += oa;\n            return o;\n        }\n        if ((r = fmt.match(/^# ([#0?]+)( ?)\\/( ?)([#0?]+)/))) {\n            ri = Math.min(Math.max(r[1].length, r[4].length), 7);\n            ff = frac(aval, Math.pow(10, ri) - 1, true);\n            return sign + (ff[0] || (ff[1] ? \"\" : \"0\")) + \" \" + (ff[1] ? pad_(ff[1], ri) + r[2] + \"/\" + r[3] + rpad_(ff[2], ri) : fill(\" \", 2 * ri + 1 + r[2].length + r[3].length));\n        }\n        if ((r = fmt.match(/^[#0?]+$/))) {\n            o = pad0r(val, 0);\n            if (fmt.length <= o.length) return o;\n            return hashq(fmt.substr(0, fmt.length - o.length)) + o;\n        }\n        if ((r = fmt.match(/^([#0?]+)\\.([#0]+)$/))) {\n            o = \"\" + val.toFixed(Math.min(r[2].length, 10)).replace(/([^0])0+$/, \"$1\");\n            ri = o.indexOf(\".\");\n            const lres = fmt.indexOf(\".\") - ri, rres = fmt.length - o.length - lres;\n            return hashq(fmt.substr(0, lres) + o + fmt.substr(fmt.length - rres));\n        }\n        if ((r = fmt.match(/^00,000\\.([#0]*0)$/))) {\n            ri = dec(val, r[1].length);\n            return val < 0 ? \"-\" + write_num_flt(type, fmt, -val) : commaify(flr(val)).replace(/^\\d,\\d{3}$/, \"0$&\").replace(/^\\d*$/, function ($$) {\n                return \"00,\" + ($$.length < 3 ? pad0(0, 3 - $$.length) : \"\") + $$;\n            }) + \".\" + pad0(ri, r[1].length);\n        }\n        switch (fmt) {\n            case \"###,##0.00\":\n                return write_num_flt(type, \"#,##0.00\", val);\n            case \"###,###\":\n            case \"##,###\":\n            case \"#,###\":\n                const x = commaify(pad0r(aval, 0));\n                return x !== \"0\" ? sign + x : \"\";\n            case \"###,###.00\":\n                return write_num_flt(type, \"###,##0.00\", val).replace(/^0\\./, \".\");\n            case \"#,###.00\":\n                return write_num_flt(type, \"#,##0.00\", val).replace(/^0\\./, \".\");\n            default:\n        }\n        throw new Error(\"unsupported format |\" + fmt + \"|\");\n    }\n\n    function write_num_cm2(type, fmt, val) {\n        let idx = fmt.length - 1;\n        while (fmt.charCodeAt(idx - 1) === 44) --idx;\n        return write_num(type, fmt.substr(0, idx), val / Math.pow(10, 3 * (fmt.length - idx)));\n    }\n\n    function write_num_pct2(type, fmt, val) {\n        const sfmt = fmt.replace(pct1, \"\"), mul = fmt.length - sfmt.length;\n        return write_num(type, sfmt, val * Math.pow(10, 2 * mul)) + fill(\"%\", mul);\n    }\n\n    function write_num_exp2(fmt, val) {\n        let o;\n        let idx = fmt.indexOf(\"E\") - fmt.indexOf(\".\") - 1;\n        if (fmt.match(/^#+0.0E\\+0$/)) {\n            if (val === 0) return \"0.0E+0\";\n            else if (val < 0) return \"-\" + write_num_exp2(fmt, -val);\n            let period = fmt.indexOf(\".\");\n            if (period === -1) period = fmt.indexOf('E');\n            let ee = Math.floor(Math.log(val) * Math.LOG10E) % period;\n            if (ee < 0) ee += period;\n            o = (val / Math.pow(10, ee)).toPrecision(idx + 1 + (period + ee) % period);\n            if (!o.match(/[Ee]/)) {\n                const fakee = Math.floor(Math.log(val) * Math.LOG10E);\n                if (o.indexOf(\".\") === -1) o = o.charAt(0) + \".\" + o.substr(1) + \"E+\" + (fakee - o.length + ee);\n                else o += \"E+\" + (fakee - ee);\n                o = o.replace(/\\+-/, \"-\");\n            }\n            o = o.replace(/^([+-]?)(\\d*)\\.(\\d*)[Ee]/, function ($$, $1, $2, $3) {\n                return $1 + $2 + $3.substr(0, (period + ee) % period) + \".\" + $3.substr(ee) + \"E\";\n            });\n        } else o = val.toExponential(idx);\n        if (fmt.match(/E\\+00$/) && o.match(/e[+-]\\d$/)) o = o.substr(0, o.length - 1) + \"0\" + o.charAt(o.length - 1);\n        if (fmt.match(/E\\-/) && o.match(/e\\+/)) o = o.replace(/e\\+/, \"e\");\n        return o.replace(\"e\", \"E\");\n    }\n\n    function write_num_int(type, fmt, val) {\n        if (type.charCodeAt(0) === 40 && !fmt.match(closeparen)) {\n            const ffmt = fmt.replace(/\\( */, \"\").replace(/ \\)/, \"\").replace(/\\)/, \"\");\n            if (val >= 0) return write_num_int('n', ffmt, val);\n            return '(' + write_num_int('n', ffmt, -val) + ')';\n        }\n        if (fmt.charCodeAt(fmt.length - 1) === 44) return write_num_cm2(type, fmt, val);\n        if (fmt.indexOf('%') !== -1) return write_num_pct2(type, fmt, val);\n        if (fmt.indexOf('E') !== -1) return write_num_exp2(fmt, val);\n        if (fmt.charCodeAt(0) === 36) return \"$\" + write_num_int(type, fmt.substr(fmt.charAt(1) == ' ' ? 2 : 1), val);\n        let o;\n        let r, ri, ff, aval = Math.abs(val), sign = val < 0 ? \"-\" : \"\";\n        if (fmt.match(/^00+$/)) return sign + pad0(aval, fmt.length);\n        if (fmt.match(/^[#?]+$/)) {\n            o = (\"\" + val);\n            if (val === 0) o = \"\";\n            return o.length > fmt.length ? o : hashq(fmt.substr(0, fmt.length - o.length)) + o;\n        }\n        if ((r = fmt.match(frac1))) return write_num_f2(r, aval, sign);\n        if (fmt.match(/^#+0+$/)) return sign + pad0(aval, fmt.length - fmt.indexOf(\"0\"));\n        if ((r = fmt.match(dec1))) {\n            o = (\"\" + val).replace(/^([^\\.]+)$/, \"$1.\" + hashq(r[1])).replace(/\\.$/, \".\" + hashq(r[1]));\n            o = o.replace(/\\.(\\d*)$/, function ($$, $1) {\n                return \".\" + $1 + fill(\"0\", hashq(r[1]).length - $1.length);\n            });\n            return fmt.indexOf(\"0.\") !== -1 ? o : o.replace(/^0\\./, \".\");\n        }\n        fmt = fmt.replace(/^#+([0.])/, \"$1\");\n        if ((r = fmt.match(/^(0*)\\.(#*)$/))) {\n            return sign + (\"\" + aval).replace(/\\.(\\d*[1-9])0*$/, \".$1\").replace(/^(-?\\d*)$/, \"$1.\").replace(/^0\\./, r[1].length ? \"0.\" : \".\");\n        }\n        if ((r = fmt.match(/^#{1,3},##0(\\.?)$/))) return sign + commaify((\"\" + aval));\n        if ((r = fmt.match(/^#,##0\\.([#0]*0)$/))) {\n            return val < 0 ? \"-\" + write_num_int(type, fmt, -val) : commaify((\"\" + val)) + \".\" + fill('0', r[1].length);\n        }\n        if ((r = fmt.match(/^#,#*,#0/))) return write_num_int(type, fmt.replace(/^#,#*,/, \"\"), val);\n        if ((r = fmt.match(/^([0#]+)(\\\\?-([0#]+))+$/))) {\n            o = _strrev(write_num_int(type, fmt.replace(/[\\\\-]/g, \"\"), val));\n            ri = 0;\n            return _strrev(_strrev(fmt.replace(/\\\\/g, \"\")).replace(/[0#]/g, function (x) {\n                return ri < o.length ? o.charAt(ri++) : x === '0' ? '0' : \"\";\n            }));\n        }\n        if (fmt.match(phone)) {\n            o = write_num_int(type, \"##########\", val);\n            return \"(\" + o.substr(0, 3) + \") \" + o.substr(3, 3) + \"-\" + o.substr(6);\n        }\n        let oa = \"\";\n        if ((r = fmt.match(/^([#0?]+)( ?)\\/( ?)([#0?]+)/))) {\n            ri = Math.min(r[4].length, 7);\n            ff = frac(aval, Math.pow(10, ri) - 1, false);\n            o = \"\" + sign;\n            oa = write_num(\"n\", r[1], ff[1]);\n            if (oa.charAt(oa.length - 1) == \" \") oa = oa.substr(0, oa.length - 1) + \"0\";\n            o += oa + r[2] + \"/\" + r[3];\n            oa = rpad_(ff[2], ri);\n            if (oa.length < r[4].length) oa = hashq(r[4].substr(r[4].length - oa.length)) + oa;\n            o += oa;\n            return o;\n        }\n        if ((r = fmt.match(/^# ([#0?]+)( ?)\\/( ?)([#0?]+)/))) {\n            ri = Math.min(Math.max(r[1].length, r[4].length), 7);\n            ff = frac(aval, Math.pow(10, ri) - 1, true);\n            return sign + (ff[0] || (ff[1] ? \"\" : \"0\")) + \" \" + (ff[1] ? pad_(ff[1], ri) + r[2] + \"/\" + r[3] + rpad_(ff[2], ri) : fill(\" \", 2 * ri + 1 + r[2].length + r[3].length));\n        }\n        if ((r = fmt.match(/^[#0?]+$/))) {\n            o = \"\" + val;\n            if (fmt.length <= o.length) return o;\n            return hashq(fmt.substr(0, fmt.length - o.length)) + o;\n        }\n        if ((r = fmt.match(/^([#0]+)\\.([#0]+)$/))) {\n            o = \"\" + val.toFixed(Math.min(r[2].length, 10)).replace(/([^0])0+$/, \"$1\");\n            ri = o.indexOf(\".\");\n            let lres = fmt.indexOf(\".\") - ri, rres = fmt.length - o.length - lres;\n            return hashq(fmt.substr(0, lres) + o + fmt.substr(fmt.length - rres));\n        }\n        if ((r = fmt.match(/^00,000\\.([#0]*0)$/))) {\n            return val < 0 ? \"-\" + write_num_int(type, fmt, -val) : commaify(\"\" + val).replace(/^\\d,\\d{3}$/, \"0$&\").replace(/^\\d*$/, function ($$) {\n                return \"00,\" + ($$.length < 3 ? pad0(0, 3 - $$.length) : \"\") + $$;\n            }) + \".\" + pad0(0, r[1].length);\n        }\n        switch (fmt) {\n            case \"###,###\":\n            case \"##,###\":\n            case \"#,###\":\n                const x = commaify(\"\" + aval);\n                return x !== \"0\" ? sign + x : \"\";\n            default:\n                if (fmt.match(/\\.[0#?]*$/)) return write_num_int(type, fmt.slice(0, fmt.lastIndexOf(\".\")), val) + hashq(fmt.slice(fmt.lastIndexOf(\".\")));\n        }\n        throw new Error(\"unsupported format |\" + fmt + \"|\");\n    }\n\n    return function write_num(type, fmt, val) {\n        return (val | 0) === val ? write_num_int(type, fmt, val) : write_num_flt(type, fmt, val);\n    };\n})();\n\nfunction split_fmt(fmt) {\n    const out = [];\n    let in_str = false, j = 0;\n    for (let i = 0; i < fmt.length; ++i) switch ((/*cc=*/fmt.charCodeAt(i))) {\n        case 34: /* '\"' */\n            in_str = !in_str;\n            break;\n        case 95:\n        case 42:\n        case 92: /* '_' '*' '\\\\' */\n            ++i;\n            break;\n        case 59: /* ';' */\n            out[out.length] = fmt.substr(j, i - j);\n            j = i + 1;\n    }\n    out[out.length] = fmt.substr(j);\n    if (in_str === true) throw new Error(\"Format |\" + fmt + \"| unterminated string \");\n    return out;\n}\n\nSSF._split = split_fmt;\nconst abstime = /\\[[HhMmSs]*\\]/;\n\nfunction fmt_is_date(fmt) {\n    let i = 0, /*cc = 0,*/ c = \"\", o = \"\";\n    while (i < fmt.length) {\n        switch ((c = fmt.charAt(i))) {\n            case 'G':\n                if (isgeneral(fmt, i)) i += 6;\n                i++;\n                break;\n            case '\"':\n                for (; (/*cc=*/fmt.charCodeAt(++i)) !== 34 && i < fmt.length;) ++i;\n                ++i;\n                break;\n            case '\\\\':\n                i += 2;\n                break;\n            case '_':\n                i += 2;\n                break;\n            case '@':\n                ++i;\n                break;\n            case 'B':\n            case 'b':\n                if (fmt.charAt(i + 1) === \"1\" || fmt.charAt(i + 1) === \"2\") return true;\n            /* falls through */\n            case 'M':\n            case 'D':\n            case 'Y':\n            case 'H':\n            case 'S':\n            case 'E':\n            /* falls through */\n            case 'm':\n            case 'd':\n            case 'y':\n            case 'h':\n            case 's':\n            case 'e':\n            case 'g':\n                return true;\n            case 'A':\n            case 'a':\n                if (fmt.substr(i, 3).toUpperCase() === \"A/P\") return true;\n                if (fmt.substr(i, 5).toUpperCase() === \"AM/PM\") return true;\n                ++i;\n                break;\n            case '[':\n                o = c;\n                while (fmt.charAt(i++) !== ']' && i < fmt.length) o += fmt.charAt(i);\n                if (o.match(abstime)) return true;\n                break;\n            case '.':\n            /* falls through */\n            case '0':\n            case '#':\n                while (i < fmt.length && (\"0#?.,E+-%\".indexOf(c = fmt.charAt(++i)) > -1 || (c == '\\\\' && fmt.charAt(i + 1) == \"-\" && \"0#\".indexOf(fmt.charAt(i + 2)) > -1))) {/* empty */\n                }\n                break;\n            case '?':\n                while (fmt.charAt(++i) === c) {/* empty */\n                }\n                break;\n            case '*':\n                ++i;\n                if (fmt.charAt(i) === ' ' || fmt.charAt(i) === '*') ++i;\n                break;\n            case '(':\n            case ')':\n                ++i;\n                break;\n            case '1':\n            case '2':\n            case '3':\n            case '4':\n            case '5':\n            case '6':\n            case '7':\n            case '8':\n            case '9':\n                while (i < fmt.length && \"0123456789\".indexOf(fmt.charAt(++i)) > -1) {/* empty */\n                }\n                break;\n            case ' ':\n                ++i;\n                break;\n            default:\n                ++i;\n                break;\n        }\n    }\n    return false;\n}\n\nSSF.is_date = fmt_is_date;\n\nfunction eval_fmt(fmt, v, opts, flen) {\n    let out = [], o = \"\", i = 0, c = \"\", lst = 't', dt, j, cc;\n    let hr = 'H';\n    /* Tokenize */\n    while (i < fmt.length) {\n        switch ((c = fmt.charAt(i))) {\n            case 'G': /* General */\n                if (!isgeneral(fmt, i)) throw new Error('unrecognized character ' + c + ' in ' + fmt);\n                out[out.length] = {t: 'G', v: 'General'};\n                i += 7;\n                break;\n            case '\"': /* Literal text */\n                for (o = \"\"; (cc = fmt.charCodeAt(++i)) !== 34 && i < fmt.length;) o += String.fromCharCode(cc);\n                out[out.length] = {t: 't', v: o};\n                ++i;\n                break;\n            case '\\\\':\n                const w = fmt.charAt(++i), t = (w === \"(\" || w === \")\") ? w : 't';\n                out[out.length] = {t: t, v: w};\n                ++i;\n                break;\n            case '_':\n                out[out.length] = {t: 't', v: \" \"};\n                i += 2;\n                break;\n            case '@': /* Text Placeholder */\n                out[out.length] = {t: 'T', v: v};\n                ++i;\n                break;\n            case 'B':\n            case 'b':\n                if (fmt.charAt(i + 1) === \"1\" || fmt.charAt(i + 1) === \"2\") {\n                    if (dt == null) {\n                        dt = parse_date_code(v, opts, fmt.charAt(i + 1) === \"2\");\n                        if (dt == null) return \"\";\n                    }\n                    out[out.length] = {t: 'X', v: fmt.substr(i, 2)};\n                    lst = c;\n                    i += 2;\n                    break;\n                }\n            /* falls through */\n            case 'M':\n            case 'D':\n            case 'Y':\n            case 'H':\n            case 'S':\n            case 'E':\n                c = c.toLowerCase();\n            /* falls through */\n            case 'm':\n            case 'd':\n            case 'y':\n            case 'h':\n            case 's':\n            case 'e':\n            case 'g':\n                if (v < 0) return \"\";\n                if (dt == null) {\n                    dt = parse_date_code(v, opts);\n                    if (dt == null) return \"\";\n                }\n                o = c;\n                while (++i < fmt.length && fmt.charAt(i).toLowerCase() === c) o += c;\n                if (c === 'm' && lst.toLowerCase() === 'h') c = 'M';\n                if (c === 'h') c = hr;\n                out[out.length] = {t: c, v: o};\n                lst = c;\n                break;\n            case 'A':\n            case 'a':\n                const q = {t: c, v: c};\n                if (dt == null) dt = parse_date_code(v, opts);\n                if (fmt.substr(i, 3).toUpperCase() === \"A/P\") {\n                    if (dt != null) q.v = dt.H >= 12 ? \"P\" : \"A\";\n                    q.t = 'T';\n                    hr = 'h';\n                    i += 3;\n                } else if (fmt.substr(i, 5).toUpperCase() === \"AM/PM\") {\n                    if (dt != null) q.v = dt.H >= 12 ? \"PM\" : \"AM\";\n                    q.t = 'T';\n                    i += 5;\n                    hr = 'h';\n                } else {\n                    q.t = \"t\";\n                    ++i;\n                }\n                if (dt == null && q.t === 'T') return \"\";\n                out[out.length] = q;\n                lst = c;\n                break;\n            case '[':\n                o = c;\n                while (fmt.charAt(i++) !== ']' && i < fmt.length) o += fmt.charAt(i);\n                if (o.slice(-1) !== ']') throw 'unterminated \"[\" block: |' + o + '|';\n                if (o.match(abstime)) {\n                    if (dt == null) {\n                        dt = parse_date_code(v, opts);\n                        if (dt == null) return \"\";\n                    }\n                    out[out.length] = {t: 'Z', v: o.toLowerCase()};\n                    lst = o.charAt(1);\n                } else if (o.indexOf(\"$\") > -1) {\n                    o = (o.match(/\\$([^-\\[\\]]*)/) || [])[1] || \"$\";\n                    if (!fmt_is_date(fmt)) out[out.length] = {t: 't', v: o};\n                }\n                break;\n            /* Numbers */\n            case '.':\n                if (dt != null) {\n                    o = c;\n                    while (++i < fmt.length && (c = fmt.charAt(i)) === \"0\") o += c;\n                    out[out.length] = {t: 's', v: o};\n                    break;\n                }\n            /* falls through */\n            case '0':\n            case '#':\n                o = c;\n                while ((++i < fmt.length && \"0#?.,E+-%\".indexOf(c = fmt.charAt(i)) > -1) || (c == '\\\\' && fmt.charAt(i + 1) == \"-\" && i < fmt.length - 2 && \"0#\".indexOf(fmt.charAt(i + 2)) > -1)) o += c;\n                out[out.length] = {t: 'n', v: o};\n                break;\n            case '?':\n                o = c;\n                while (fmt.charAt(++i) === c) o += c;\n                out[out.length] = {t: c, v: o};\n                lst = c;\n                break;\n            case '*':\n                ++i;\n                if (fmt.charAt(i) === ' ' || fmt.charAt(i) === '*') ++i;\n                break; // **\n            case '(':\n            case ')':\n                out[out.length] = {t: (flen === 1 || (typeof v === 'number' && v < 0) ? 't' : c), v: c};\n                ++i;\n                break;\n            case '1':\n            case '2':\n            case '3':\n            case '4':\n            case '5':\n            case '6':\n            case '7':\n            case '8':\n            case '9':\n                o = c;\n                while (i < fmt.length && \"0123456789\".indexOf(fmt.charAt(++i)) > -1) o += fmt.charAt(i);\n                out[out.length] = {t: 'D', v: o};\n                break;\n            case ' ':\n                out[out.length] = {t: c, v: c};\n                ++i;\n                break;\n            default:\n                if (\",$-+/():!^&'~{}<>=\u20ACacfijklopqrtuvwxzP\".indexOf(c) === -1) throw new Error('unrecognized character ' + c + ' in ' + fmt);\n                out[out.length] = {t: 't', v: c};\n                ++i;\n                break;\n        }\n    }\n    let bt = 0, ss0 = 0, ssm;\n    for (i = out.length - 1, lst = 't'; i >= 0; --i) {\n        switch (out[i].t) {\n            case 'h':\n            case 'H':\n                out[i].t = hr;\n                lst = 'h';\n                if (bt < 1) bt = 1;\n                break;\n            case 's':\n                if ((ssm = out[i].v.match(/\\.0+$/))) ss0 = Math.max(ss0, ssm[0].length - 1);\n                if (bt < 3) bt = 3;\n            /* falls through */\n            case 'd':\n            case 'y':\n            case 'M':\n            case 'e':\n                lst = out[i].t;\n                break;\n            case 'm':\n                if (lst === 's') {\n                    out[i].t = 'M';\n                    if (bt < 2) bt = 2;\n                }\n                break;\n            case 'X': /*if(out[i].v === \"B2\");*/\n                break;\n            case 'Z':\n                if (bt < 1 && out[i].v.match(/[Hh]/)) bt = 1;\n                if (bt < 2 && out[i].v.match(/[Mm]/)) bt = 2;\n                if (bt < 3 && out[i].v.match(/[Ss]/)) bt = 3;\n        }\n    }\n    switch (bt) {\n        case 0:\n            break;\n        case 1:\n            if (dt.u >= 0.5) {\n                dt.u = 0;\n                ++dt.S;\n            }\n            if (dt.S >= 60) {\n                dt.S = 0;\n                ++dt.M;\n            }\n            if (dt.M >= 60) {\n                dt.M = 0;\n                ++dt.H;\n            }\n            break;\n        case 2:\n            if (dt.u >= 0.5) {\n                dt.u = 0;\n                ++dt.S;\n            }\n            if (dt.S >= 60) {\n                dt.S = 0;\n                ++dt.M;\n            }\n            break;\n    }\n    /* replace fields */\n    let nstr = \"\", jj;\n    for (i = 0; i < out.length; ++i) {\n        switch (out[i].t) {\n            case 't':\n            case 'T':\n            case ' ':\n            case 'D':\n                break;\n            case 'X':\n                out[i].v = \"\";\n                out[i].t = \";\";\n                break;\n            case 'd':\n            case 'm':\n            case 'y':\n            case 'h':\n            case 'H':\n            case 'M':\n            case 's':\n            case 'e':\n            case 'b':\n            case 'Z':\n                out[i].v = write_date(out[i].t.charCodeAt(0), out[i].v, dt, ss0);\n                out[i].t = 't';\n                break;\n            case 'n':\n            case '(':\n            case '?':\n                jj = i + 1;\n                while (out[jj] != null && (\n                    (c = out[jj].t) === \"?\" || c === \"D\" ||\n                    ((c === \" \" || c === \"t\") && out[jj + 1] != null && (out[jj + 1].t === '?' || out[jj + 1].t === \"t\" && out[jj + 1].v === '/')) ||\n                    (out[i].t === '(' && (c === ' ' || c === 'n' || c === ')')) ||\n                    (c === 't' && (out[jj].v === '/' || out[jj].v === ' ' && out[jj + 1] != null && out[jj + 1].t === '?'))\n                )) {\n                    out[i].v += out[jj].v;\n                    out[jj] = {v: \"\", t: \";\"};\n                    ++jj;\n                }\n                nstr += out[i].v;\n                i = jj - 1;\n                break;\n            case 'G':\n                out[i].t = 't';\n                out[i].v = general_fmt(v, opts);\n                break;\n        }\n    }\n    let vv = \"\", myv, ostr;\n    if (nstr.length > 0) {\n        if (nstr.charCodeAt(0) === 40) /* '(' */ {\n            myv = (v < 0 && nstr.charCodeAt(0) === 45 ? -v : v);\n            ostr = write_num('(', nstr, myv);\n        } else {\n            myv = (v < 0 && flen > 1 ? -v : v);\n            ostr = write_num('n', nstr, myv);\n            if (myv < 0 && out[0] && out[0].t === 't') {\n                ostr = ostr.substr(1);\n                out[0].v = \"-\" + out[0].v;\n            }\n        }\n        jj = ostr.length - 1;\n        let decpt = out.length;\n        for (i = 0; i < out.length; ++i) if (out[i] != null && out[i].t !== 't' && out[i].v.indexOf(\".\") > -1) {\n            decpt = i;\n            break;\n        }\n        let lasti = out.length;\n        if (decpt === out.length && ostr.indexOf(\"E\") === -1) {\n            for (i = out.length - 1; i >= 0; --i) {\n                if (out[i] == null || 'n?('.indexOf(out[i].t) === -1) continue;\n                if (jj >= out[i].v.length - 1) {\n                    jj -= out[i].v.length;\n                    out[i].v = ostr.substr(jj + 1, out[i].v.length);\n                } else if (jj < 0) out[i].v = \"\";\n                else {\n                    out[i].v = ostr.substr(0, jj + 1);\n                    jj = -1;\n                }\n                out[i].t = 't';\n                lasti = i;\n            }\n            if (jj >= 0 && lasti < out.length) out[lasti].v = ostr.substr(0, jj + 1) + out[lasti].v;\n        } else if (decpt !== out.length && ostr.indexOf(\"E\") === -1) {\n            jj = ostr.indexOf(\".\") - 1;\n            for (i = decpt; i >= 0; --i) {\n                if (out[i] == null || 'n?('.indexOf(out[i].t) === -1) continue;\n                j = out[i].v.indexOf(\".\") > -1 && i === decpt ? out[i].v.indexOf(\".\") - 1 : out[i].v.length - 1;\n                vv = out[i].v.substr(j + 1);\n                for (; j >= 0; --j) {\n                    if (jj >= 0 && (out[i].v.charAt(j) === \"0\" || out[i].v.charAt(j) === \"#\")) vv = ostr.charAt(jj--) + vv;\n                }\n                out[i].v = vv;\n                out[i].t = 't';\n                lasti = i;\n            }\n            if (jj >= 0 && lasti < out.length) out[lasti].v = ostr.substr(0, jj + 1) + out[lasti].v;\n            jj = ostr.indexOf(\".\") + 1;\n            for (i = decpt; i < out.length; ++i) {\n                if (out[i] == null || ('n?('.indexOf(out[i].t) === -1 && i !== decpt)) continue;\n                j = out[i].v.indexOf(\".\") > -1 && i === decpt ? out[i].v.indexOf(\".\") + 1 : 0;\n                vv = out[i].v.substr(0, j);\n                for (; j < out[i].v.length; ++j) {\n                    if (jj < ostr.length) vv += ostr.charAt(jj++);\n                }\n                out[i].v = vv;\n                out[i].t = 't';\n                lasti = i;\n            }\n        }\n    }\n    for (i = 0; i < out.length; ++i) if (out[i] != null && 'n(?'.indexOf(out[i].t) > -1) {\n        myv = (flen > 1 && v < 0 && i > 0 && out[i - 1].v === \"-\" ? -v : v);\n        out[i].v = write_num(out[i].t, out[i].v, myv);\n        out[i].t = 't';\n    }\n    let retval = \"\";\n    for (i = 0; i !== out.length; ++i) if (out[i] != null) retval += out[i].v;\n    return retval;\n}\n\nSSF._eval = eval_fmt;\nconst cfregex = /\\[[=<>]/;\nconst cfregex2 = /\\[([=<>]*)(-?\\d+\\.?\\d*)\\]/;\n\nfunction chkcond(v, rr) {\n    if (rr == null) return false;\n    const thresh = parseFloat(rr[2]);\n    switch (rr[1]) {\n        case \"=\":\n            if (v === thresh) return true;\n            break;\n        case \">\":\n            if (v > thresh) return true;\n            break;\n        case \"<\":\n            if (v < thresh) return true;\n            break;\n        case \"<>\":\n            if (v !== thresh) return true;\n            break;\n        case \">=\":\n            if (v >= thresh) return true;\n            break;\n        case \"<=\":\n            if (v <= thresh) return true;\n            break;\n    }\n    return false;\n}\n\nfunction choose_fmt(f, v) {\n    let fmt = split_fmt(f);\n    let l = fmt.length, lat = fmt[l - 1].indexOf(\"@\");\n    if (l < 4 && lat > -1) --l;\n    if (fmt.length > 4) throw new Error(\"cannot find right format for |\" + fmt.join(\"|\") + \"|\");\n    if (typeof v !== \"number\") return [4, fmt.length === 4 || lat > -1 ? fmt[fmt.length - 1] : \"@\"];\n    switch (fmt.length) {\n        case 1:\n            fmt = lat > -1 ? [\"General\", \"General\", \"General\", fmt[0]] : [fmt[0], fmt[0], fmt[0], \"@\"];\n            break;\n        case 2:\n            fmt = lat > -1 ? [fmt[0], fmt[0], fmt[0], fmt[1]] : [fmt[0], fmt[1], fmt[0], \"@\"];\n            break;\n        case 3:\n            fmt = lat > -1 ? [fmt[0], fmt[1], fmt[0], fmt[2]] : [fmt[0], fmt[1], fmt[2], \"@\"];\n            break;\n        case 4:\n            break;\n    }\n    const ff = v > 0 ? fmt[0] : v < 0 ? fmt[1] : fmt[2];\n    if (fmt[0].indexOf(\"[\") === -1 && fmt[1].indexOf(\"[\") === -1) return [l, ff];\n    if (fmt[0].match(cfregex) != null || fmt[1].match(cfregex) != null) {\n        const m1 = fmt[0].match(cfregex2);\n        const m2 = fmt[1].match(cfregex2);\n        return chkcond(v, m1) ? [l, fmt[0]] : chkcond(v, m2) ? [l, fmt[1]] : [l, fmt[m1 != null && m2 != null ? 2 : 1]];\n    }\n    return [l, ff];\n}\n\nfunction format(fmt, v, o) {\n    if (o == null) o = {};\n    let sfmt = \"\";\n    switch (typeof fmt) {\n        case \"string\":\n            if (fmt === \"m/d/yy\" && o.dateNF) sfmt = o.dateNF;\n            else sfmt = fmt;\n            break;\n        case \"number\":\n            if (fmt === 14 && o.dateNF) sfmt = o.dateNF;\n            else sfmt = (o.table != null ? (o.table) : table_fmt)[fmt];\n            break;\n    }\n    if (isgeneral(sfmt, 0)) return general_fmt(v, o);\n    if (v instanceof Date) v = datenum_local(v, o.date1904);\n    const f = choose_fmt(sfmt, v);\n    if (isgeneral(f[1])) return general_fmt(v, o);\n    if (v === true) v = \"TRUE\"; else if (v === false) v = \"FALSE\";\n    else if (v === \"\" || v == null) return \"\";\n    return eval_fmt(f[1], v, o, f[0]);\n}\n\nfunction load_entry(fmt, idx) {\n    if (typeof idx !== 'number') {\n        idx = +idx || -1;\n        for (let i = 0; i < 0x0188; ++i) {\n            if (table_fmt[i] === undefined) {\n                if (idx < 0) idx = i;\n                continue;\n            }\n            if (table_fmt[i] === fmt) {\n                idx = i;\n                break;\n            }\n        }\n        if (idx < 0) idx = 0x187;\n    }\n    table_fmt[idx] = fmt;\n    return idx;\n}\n\n/**\n * Load format string\n * @param fmt - format\n * @param [idx] - index\n * @returns {number}\n */\nSSF.load = load_entry;\n\n/**\n * The underlying object, mapping numeric keys to format strings.\n * return {{}}\n */\nSSF._table = table_fmt;\n\n/**\n * Gets the internal format table (number to format mapping).\n * @return {{}}\n */\nSSF.get_table = function get_table() {\n    return table_fmt;\n};\nSSF.load_table = function load_table(tbl) {\n    for (let i = 0; i !== 0x0188; ++i)\n        if (tbl[i] !== undefined) load_entry(tbl[i], i);\n};\nSSF.init_table = init_table;\n\n/**\n * Render value using format string or code.\n * If fmt is a string, it will be parsed and evaluated. If fmt is a number, the actual format will be the\n * corresponding entry in the internal format table. For a raw numeric format like 000, the value should be\n * passed as a string.\n *\n * Date arguments are interpreted in the local time of the JS client.\n *\n * @param {string|number} fmt - format\n * @param {any} v - values\n * @param {{date1904: boolean}|undefined} [o] - options\n * @returns {string|*|string|undefined}\n */\nSSF.format = format;\n\nmodule.exports = SSF;\n", "/*\nstep:\n1. validate\n2. sanitize\n3. split\n4. proceed\n5. grammar\n6. combine\n*/\n\nconst defaultResult = '\u0E28\u0E39\u0E19\u0E22\u0E4C\u0E1A\u0E32\u0E17\u0E16\u0E49\u0E27\u0E19'\nconst singleUnitStrs = [\n  '',\n  '\u0E2B\u0E19\u0E36\u0E48\u0E07',\n  '\u0E2A\u0E2D\u0E07',\n  '\u0E2A\u0E32\u0E21',\n  '\u0E2A\u0E35\u0E48',\n  '\u0E2B\u0E49\u0E32',\n  '\u0E2B\u0E01',\n  '\u0E40\u0E08\u0E47\u0E14',\n  '\u0E41\u0E1B\u0E14',\n  '\u0E40\u0E01\u0E49\u0E32'\n]\nconst placeNameStrs = [\n  '',\n  '\u0E2A\u0E34\u0E1A',\n  '\u0E23\u0E49\u0E2D\u0E22',\n  '\u0E1E\u0E31\u0E19',\n  '\u0E2B\u0E21\u0E37\u0E48\u0E19',\n  '\u0E41\u0E2A\u0E19',\n  '\u0E25\u0E49\u0E32\u0E19'\n]\n\n/**\n * @param {number[]} nums\n * @returns {string}\n */\nfunction num2Word (nums) {\n  let result = ''\n  const len = nums.length\n  const maxLen = 7\n\n  if (len > maxLen) {\n    // more than million\n    const overflowIndex = len - maxLen + 1\n    const overflowNums = nums.slice(0, overflowIndex)\n    const remainingNumbs = nums.slice(overflowIndex)\n    return num2Word(overflowNums) + '\u0E25\u0E49\u0E32\u0E19' + num2Word(remainingNumbs)\n  } else {\n    for (let i = 0; i < len; i++) {\n      const digit = nums[i]\n      if (digit > 0) {\n        result += singleUnitStrs[digit] + placeNameStrs[len - i - 1]\n      }\n    }\n  }\n\n  return result\n}\n\n/**\n * @param {string} str\n * @returns {string}\n */\nfunction grammarFix (str) {\n  let result = str\n\n  // \"\u0E2A\u0E34\u0E1A\"\n  result = result.replace('\u0E2B\u0E19\u0E36\u0E48\u0E07\u0E2A\u0E34\u0E1A', '\u0E2A\u0E34\u0E1A')\n  // \"\u0E22\u0E35\u0E48\u0E2A\u0E34\u0E1A\"\n  result = result.replace('\u0E2A\u0E2D\u0E07\u0E2A\u0E34\u0E1A', '\u0E22\u0E35\u0E48\u0E2A\u0E34\u0E1A')\n  // \"\u0E40\u0E2D\u0E47\u0E14\"\n  const neungLen = 5\n  if (result.length > neungLen &&\n    result.length - result.lastIndexOf('\u0E2B\u0E19\u0E36\u0E48\u0E07') === neungLen) {\n    result = result.substr(0, result.length - neungLen) + '\u0E40\u0E2D\u0E47\u0E14'\n  }\n\n  return result\n}\n\n/**\n * Combine baht and satang\n * and also adding unit\n *\n * @param {string} baht\n * @param {string} satang\n * @returns {string}\n */\nfunction combine (baht, satang) {\n  let result = ''\n\n  if (baht === '' && satang === '') {\n    result = defaultResult\n  } else if (baht !== '' && satang === '') {\n    result = baht + '\u0E1A\u0E32\u0E17' + '\u0E16\u0E49\u0E27\u0E19'\n  } else if (baht === '' && satang !== '') {\n    result = satang + '\u0E2A\u0E15\u0E32\u0E07\u0E04\u0E4C'\n  } else {\n    result = baht + '\u0E1A\u0E32\u0E17' + satang + '\u0E2A\u0E15\u0E32\u0E07\u0E04\u0E4C'\n  }\n\n  return result\n}\n\n/**\n * Change number to Thai pronunciation string\n *\n * @param {number} num\n * @returns {string}\n */\nfunction bahttext (num) {\n  let result = defaultResult\n\n  // 1. validate: invalid number\n  if (isNaN(num)) return result\n  // 1. validate: more than\n  if (num >= Number.MAX_SAFE_INTEGER) return result\n\n  // 2. sanitize: ????\n\n  // 3. split: baht and satang\n  // e.g. 432.21 >> 432, 21\n  // @todo optimize\n  /** @type {string} */\n  const bahtStr = Math.floor(num).toString()\n  /** @type {string} */\n  const satangStr = Math.round(num % 1 * 100).toString()\n\n  // 3. split: convert number array\n  // @todo optimize it\n  /** @type {number[]} */\n  const bahtArr = Array.from(bahtStr).map(Number)\n  /** @type {number[]} */\n  const satangArr = Array.from(satangStr).map(Number)\n\n  // 4. proceed\n  let baht = num2Word(bahtArr)\n  let satang = num2Word(satangArr)\n\n  // 5. grammar\n  baht = grammarFix(baht)\n  satang = grammarFix(satang)\n\n  // 6. combine\n  result = combine(baht, satang)\n\n  return result\n}\n\nif (typeof module !== 'undefined' &&\n  module.exports != null) {\n  module.exports = bahttext\n}\n", "const FormulaError = require('../error');\r\nconst {FormulaHelpers, Types, WildCard} = require('../helpers');\r\nconst H = FormulaHelpers;\r\n\r\n// Spreadsheet number format\r\nconst ssf = require('../../ssf/ssf');\r\n\r\n// Change number to Thai pronunciation string\r\nconst bahttext = require('bahttext');\r\n\r\n// full-width and half-width converter\r\nconst charsets = {\r\n    latin: {halfRE: /[!-~]/g, fullRE: /[\uFF01-\uFF5E]/g, delta: 0xFEE0},\r\n    hangul1: {halfRE: /[\uFFA1-\uFFBE]/g, fullRE: /[\u11A8-\u11C2]/g, delta: -0xEDF9},\r\n    hangul2: {halfRE: /[\uFFC2-\uFFDC]/g, fullRE: /[\u1161-\u1175]/g, delta: -0xEE61},\r\n    kana: {\r\n        delta: 0,\r\n        half: \"\uFF61\uFF62\uFF63\uFF64\uFF65\uFF66\uFF67\uFF68\uFF69\uFF6A\uFF6B\uFF6C\uFF6D\uFF6E\uFF6F\uFF70\uFF71\uFF72\uFF73\uFF74\uFF75\uFF76\uFF77\uFF78\uFF79\uFF7A\uFF7B\uFF7C\uFF7D\uFF7E\uFF7F\uFF80\uFF81\uFF82\uFF83\uFF84\uFF85\uFF86\uFF87\uFF88\uFF89\uFF8A\uFF8B\uFF8C\uFF8D\uFF8E\uFF8F\uFF90\uFF91\uFF92\uFF93\uFF94\uFF95\uFF96\uFF97\uFF98\uFF99\uFF9A\uFF9B\uFF9C\uFF9D\uFF9E\uFF9F\",\r\n        full: \"\u3002\u300C\u300D\u3001\u30FB\u30F2\u30A1\u30A3\u30A5\u30A7\u30A9\u30E3\u30E5\u30E7\u30C3\u30FC\u30A2\u30A4\u30A6\u30A8\u30AA\u30AB\u30AD\u30AF\u30B1\u30B3\u30B5\u30B7\" +\r\n            \"\u30B9\u30BB\u30BD\u30BF\u30C1\u30C4\u30C6\u30C8\u30CA\u30CB\u30CC\u30CD\u30CE\u30CF\u30D2\u30D5\u30D8\u30DB\u30DE\u30DF\u30E0\u30E1\u30E2\u30E4\u30E6\u30E8\u30E9\u30EA\u30EB\u30EC\u30ED\u30EF\u30F3\u309B\u309C\"\r\n    },\r\n    extras: {\r\n        delta: 0,\r\n        half: \"\u00A2\u00A3\u00AC\u00AF\u00A6\u00A5\u20A9\\u0020|\u2190\u2191\u2192\u2193\u25A0\u00B0\",\r\n        full: \"\uFFE0\uFFE1\uFFE2\uFFE3\uFFE4\uFFE5\uFFE6\\u3000\uFFE8\uFFE9\uFFEA\uFFEB\uFFEC\uFFED\uFFEE\"\r\n    }\r\n};\r\nconst toFull = set => c => set.delta ?\r\n    String.fromCharCode(c.charCodeAt(0) + set.delta) :\r\n    [...set.full][[...set.half].indexOf(c)];\r\nconst toHalf = set => c => set.delta ?\r\n    String.fromCharCode(c.charCodeAt(0) - set.delta) :\r\n    [...set.half][[...set.full].indexOf(c)];\r\nconst re = (set, way) => set[way + \"RE\"] || new RegExp(\"[\" + set[way] + \"]\", \"g\");\r\nconst sets = Object.keys(charsets).map(i => charsets[i]);\r\nconst toFullWidth = str0 =>\r\n    sets.reduce((str, set) => str.replace(re(set, \"half\"), toFull(set)), str0);\r\nconst toHalfWidth = str0 =>\r\n    sets.reduce((str, set) => str.replace(re(set, \"full\"), toHalf(set)), str0);\r\n\r\nconst TextFunctions = {\r\n    ASC: (text) => {\r\n        text = H.accept(text, Types.STRING);\r\n        return toHalfWidth(text);\r\n    },\r\n\r\n    BAHTTEXT: (number) => {\r\n        number = H.accept(number, Types.NUMBER);\r\n        try {\r\n            return bahttext(number);\r\n        } catch (e) {\r\n            throw Error(`Error in https://github.com/jojoee/bahttext \\n${e.toString()}`)\r\n        }\r\n    },\r\n\r\n    CHAR: (number) => {\r\n        number = H.accept(number, Types.NUMBER);\r\n        if (number > 255 || number < 1)\r\n            throw FormulaError.VALUE;\r\n        return String.fromCharCode(number);\r\n    },\r\n\r\n    CLEAN: (text) => {\r\n        text = H.accept(text, Types.STRING);\r\n        return text.replace(/[\\x00-\\x1F]/g, '');\r\n    },\r\n\r\n    CODE: (text) => {\r\n        text = H.accept(text, Types.STRING);\r\n        if (text.length === 0)\r\n            throw FormulaError.VALUE;\r\n        return text.charCodeAt(0);\r\n    },\r\n\r\n    CONCAT: (...params) => {\r\n        let text = '';\r\n        // does not allow union\r\n        H.flattenParams(params, Types.STRING, false, item => {\r\n            item = H.accept(item, Types.STRING);\r\n            text += item;\r\n        });\r\n        return text\r\n    },\r\n\r\n    CONCATENATE: (...params) => {\r\n        let text = '';\r\n        if (params.length === 0)\r\n            throw Error('CONCATENATE need at least one argument.');\r\n        params.forEach(param => {\r\n            // does not allow range reference, array, union\r\n            param = H.accept(param, Types.STRING);\r\n            text += param;\r\n        });\r\n\r\n        return text;\r\n    },\r\n\r\n    DBCS: (text) => {\r\n        text = H.accept(text, Types.STRING);\r\n        return toFullWidth(text);\r\n    },\r\n\r\n    DOLLAR: (number, decimals) => {\r\n        number = H.accept(number, Types.NUMBER);\r\n        decimals = H.accept(decimals, Types.NUMBER, 2);\r\n        const decimalString = Array(decimals).fill('0').join('');\r\n        // Note: does not support locales\r\n        // TODO: change currency based on user locale or settings from this library\r\n        return ssf.format(`$#,##0.${decimalString}_);($#,##0.${decimalString})`, number).trim();\r\n    },\r\n\r\n    EXACT: (text1, text2) => {\r\n        text1 = H.accept(text1, [Types.STRING]);\r\n        text2 = H.accept(text2, [Types.STRING]);\r\n\r\n        return text1 === text2;\r\n    },\r\n\r\n    FIND: (findText, withinText, startNum) => {\r\n        findText = H.accept(findText, Types.STRING);\r\n        withinText = H.accept(withinText, Types.STRING);\r\n        startNum = H.accept(startNum, Types.NUMBER, 1);\r\n        if (startNum < 1 || startNum > withinText.length)\r\n            throw FormulaError.VALUE;\r\n        const res = withinText.indexOf(findText, startNum - 1);\r\n        if (res === -1)\r\n            throw FormulaError.VALUE;\r\n        return res + 1;\r\n    },\r\n\r\n    FINDB: (...params) => {\r\n        return TextFunctions.FIND(...params);\r\n    },\r\n\r\n    FIXED: (number, decimals, noCommas) => {\r\n        number = H.accept(number, Types.NUMBER);\r\n        decimals = H.accept(decimals, Types.NUMBER, 2);\r\n        noCommas = H.accept(noCommas, Types.BOOLEAN, false);\r\n\r\n        const decimalString = Array(decimals).fill('0').join('');\r\n        const comma = noCommas ? '' : '#,';\r\n        return ssf.format(`${comma}##0.${decimalString}_);(${comma}##0.${decimalString})`, number).trim();\r\n    },\r\n\r\n    LEFT: (text, numChars) => {\r\n        text = H.accept(text, Types.STRING);\r\n        numChars = H.accept(numChars, Types.NUMBER, 1);\r\n\r\n        if (numChars < 0)\r\n            throw FormulaError.VALUE;\r\n        if (numChars > text.length)\r\n            return text;\r\n        return text.slice(0, numChars);\r\n    },\r\n\r\n    LEFTB: (...params) => {\r\n        return TextFunctions.LEFT(...params);\r\n    },\r\n\r\n    LEN: (text) => {\r\n        text = H.accept(text, Types.STRING);\r\n        return text.length;\r\n    },\r\n\r\n    LENB: (...params) => {\r\n        return TextFunctions.LEN(...params);\r\n    },\r\n\r\n    LOWER: (text) => {\r\n        text = H.accept(text, Types.STRING);\r\n        return text.toLowerCase();\r\n    },\r\n\r\n    MID: (text, startNum, numChars) => {\r\n        text = H.accept(text, Types.STRING);\r\n        startNum = H.accept(startNum, Types.NUMBER);\r\n        numChars = H.accept(numChars, Types.NUMBER);\r\n        if (startNum > text.length)\r\n            return '';\r\n        if (startNum < 1 || numChars < 1)\r\n            throw FormulaError.VALUE;\r\n        return text.slice(startNum - 1, startNum + numChars - 1);\r\n    },\r\n\r\n    MIDB: (...params) => {\r\n        return TextFunctions.MID(...params);\r\n    },\r\n\r\n    NUMBERVALUE: (text, decimalSeparator, groupSeparator) => {\r\n        text = H.accept(text, Types.STRING);\r\n        // TODO: support reading system locale and set separators\r\n        decimalSeparator = H.accept(decimalSeparator, Types.STRING, '.');\r\n        groupSeparator = H.accept(groupSeparator, Types.STRING, ',');\r\n\r\n        if (text.length === 0)\r\n            return 0;\r\n        if (decimalSeparator.length === 0 || groupSeparator.length === 0)\r\n            throw FormulaError.VALUE;\r\n        decimalSeparator = decimalSeparator[0];\r\n        groupSeparator = groupSeparator[0];\r\n        if (decimalSeparator === groupSeparator\r\n            || text.indexOf(decimalSeparator) < text.lastIndexOf(groupSeparator))\r\n            throw FormulaError.VALUE;\r\n\r\n        const res = text.replace(groupSeparator, '')\r\n            .replace(decimalSeparator, '.')\r\n            // remove chars that not related to number\r\n            .replace(/[^\\-0-9.%()]/g, '')\r\n            .match(/([(-]*)([0-9]*[.]*[0-9]+)([)]?)([%]*)/);\r\n        if (!res)\r\n            throw FormulaError.VALUE;\r\n        // [\"-123456.78%%\", \"(-\", \"123456.78\", \")\", \"%%\"]\r\n        const leftParenOrMinus = res[1].length, rightParen = res[3].length, percent = res[4].length;\r\n        let number = Number(res[2]);\r\n        if (leftParenOrMinus > 1 || leftParenOrMinus && !rightParen\r\n            || !leftParenOrMinus && rightParen || isNaN(number))\r\n            throw FormulaError.VALUE;\r\n        number = number / 100 ** percent;\r\n        return leftParenOrMinus ? -number : number;\r\n    },\r\n\r\n    PHONETIC: () => {\r\n    },\r\n\r\n    PROPER: (text) => {\r\n        text = H.accept(text, [Types.STRING]);\r\n        text = text.toLowerCase();\r\n        text = text.charAt(0).toUpperCase() + text.slice(1);\r\n        return text.replace(/(?:[^a-zA-Z])([a-zA-Z])/g,\r\n            letter => letter.toUpperCase());\r\n    },\r\n\r\n    REPLACE: (old_text, start_num, num_chars, new_text) => {\r\n        old_text = H.accept(old_text, [Types.STRING]);\r\n        start_num = H.accept(start_num, [Types.NUMBER]);\r\n        num_chars = H.accept(num_chars, [Types.NUMBER]);\r\n        new_text = H.accept(new_text, [Types.STRING]);\r\n\r\n        let arr = old_text.split(\"\");\r\n        arr.splice(start_num - 1, num_chars, new_text);\r\n\r\n        return arr.join(\"\");\r\n    },\r\n\r\n    REPLACEB: (...params) => {\r\n        return TextFunctions.REPLACE(...params)\r\n    },\r\n\r\n    REPT: (text, number_times) => {\r\n        text = H.accept(text, Types.STRING);\r\n        number_times = H.accept(number_times, Types.NUMBER);\r\n        let str = \"\";\r\n\r\n        for (let i = 0; i < number_times; i++) {\r\n            str += text;\r\n        }\r\n        return str;\r\n    },\r\n\r\n    RIGHT: (text, numChars) => {\r\n        text = H.accept(text, Types.STRING);\r\n        numChars = H.accept(numChars, Types.NUMBER, 1);\r\n\r\n        if (numChars < 0)\r\n            throw FormulaError.VALUE;\r\n        const len = text.length;\r\n        if (numChars > len)\r\n            return text;\r\n        return text.slice(len - numChars);\r\n    },\r\n\r\n    RIGHTB: (...params) => {\r\n        return TextFunctions.RIGHT(...params);\r\n    },\r\n\r\n    SEARCH: (findText, withinText, startNum) => {\r\n        findText = H.accept(findText, Types.STRING);\r\n        withinText = H.accept(withinText, Types.STRING);\r\n        startNum = H.accept(startNum, Types.NUMBER, 1);\r\n        if (startNum < 1 || startNum > withinText.length)\r\n            throw FormulaError.VALUE;\r\n\r\n        // transform to js regex expression\r\n        let findTextRegex = WildCard.isWildCard(findText) ? WildCard.toRegex(findText, 'i') : findText;\r\n        const res = withinText.slice(startNum - 1).search(findTextRegex);\r\n        if (res === -1)\r\n            throw FormulaError.VALUE;\r\n        return res + startNum;\r\n    },\r\n\r\n    SEARCHB: (...params) => {\r\n        return TextFunctions.SEARCH(...params)\r\n    },\r\n\r\n    SUBSTITUTE: (...params) => {\r\n\r\n    },\r\n\r\n    T: (value) => {\r\n        // extract the real parameter\r\n        value = H.accept(value);\r\n        if (typeof value === \"string\")\r\n            return value;\r\n        return '';\r\n    },\r\n\r\n    TEXT: (value, formatText) => {\r\n        value = H.accept(value, Types.NUMBER);\r\n        formatText = H.accept(formatText, Types.STRING);\r\n        // I know ssf contains bugs...\r\n        try {\r\n            return ssf.format(formatText, value);\r\n        } catch (e) {\r\n            console.error(e)\r\n            throw FormulaError.VALUE;\r\n        }\r\n    },\r\n\r\n    TEXTJOIN: (...params) => {\r\n\r\n    },\r\n\r\n    TRIM: (text) => {\r\n        text = H.accept(text, [Types.STRING]);\r\n        return text.replace(/^\\s+|\\s+$/g, '')\r\n    },\r\n\r\n    UNICHAR: (number) => {\r\n        number = H.accept(number, [Types.NUMBER]);\r\n        if (number <= 0)\r\n            throw FormulaError.VALUE;\r\n        return String.fromCharCode(number);\r\n    },\r\n\r\n    UNICODE: (text) => {\r\n        return TextFunctions.CODE(text);\r\n    },\r\n};\r\n\r\nmodule.exports = TextFunctions;\r\n", "const FormulaError = require('../formulas/error');\r\nconst {FormulaHelpers} = require('../formulas/helpers');\r\n\r\nconst Prefix = {\r\n    unaryOp: (prefixes, value, isArray) => {\r\n        let sign = 1;\r\n        prefixes.forEach(prefix => {\r\n            if (prefix === '+') {\r\n            } else if (prefix === '-') {\r\n                sign = -sign;\r\n            } else {\r\n                throw new Error(`Unrecognized prefix: ${prefix}`);\r\n            }\r\n        });\r\n\r\n        if (value == null) {\r\n            value = 0;\r\n        }\r\n        // positive means no changes\r\n        if (sign === 1) {\r\n            return value;\r\n        }\r\n        // negative\r\n        try {\r\n            value = FormulaHelpers.acceptNumber(value, isArray);\r\n        } catch (e) {\r\n            if (e instanceof FormulaError) {\r\n                // parse number fails\r\n                if (Array.isArray(value))\r\n                    value = value[0][0]\r\n            } else\r\n                throw e;\r\n        }\r\n\r\n        if (typeof value === \"number\" && isNaN(value)) return FormulaError.VALUE;\r\n        return -value;\r\n    }\r\n};\r\n\r\nconst Postfix = {\r\n    percentOp: (value, postfix, isArray) => {\r\n        try {\r\n            value = FormulaHelpers.acceptNumber(value, isArray);\r\n        } catch (e) {\r\n            if (e instanceof FormulaError)\r\n                return e;\r\n            throw e;\r\n        }\r\n        if (postfix === '%') {\r\n            return value / 100;\r\n        }\r\n        throw new Error(`Unrecognized postfix: ${postfix}`);\r\n    }\r\n};\r\n\r\nconst type2Number = {'boolean': 3, 'string': 2, 'number': 1};\r\n\r\nconst Infix = {\r\n    compareOp: (value1, infix, value2, isArray1, isArray2) => {\r\n        if (value1 == null) value1 = 0;\r\n        if (value2 == null) value2 = 0;\r\n        // for array: {1,2,3}, get the first element to compare\r\n        if (isArray1) {\r\n            value1 = value1[0][0];\r\n        }\r\n        if (isArray2) {\r\n            value2 = value2[0][0];\r\n        }\r\n\r\n        const type1 = typeof value1, type2 = typeof value2;\r\n\r\n        if (type1 === type2) {\r\n            // same type comparison\r\n            switch (infix) {\r\n                case '=':\r\n                    return value1 === value2;\r\n                case '>':\r\n                    return value1 > value2;\r\n                case '<':\r\n                    return value1 < value2;\r\n                case '<>':\r\n                    return value1 !== value2;\r\n                case '<=':\r\n                    return value1 <= value2;\r\n                case '>=':\r\n                    return value1 >= value2;\r\n            }\r\n        } else {\r\n            switch (infix) {\r\n                case '=':\r\n                    return false;\r\n                case '>':\r\n                    return type2Number[type1] > type2Number[type2];\r\n                case '<':\r\n                    return type2Number[type1] < type2Number[type2];\r\n                case '<>':\r\n                    return true;\r\n                case '<=':\r\n                    return type2Number[type1] <= type2Number[type2];\r\n                case '>=':\r\n                    return type2Number[type1] >= type2Number[type2];\r\n            }\r\n\r\n        }\r\n        throw Error('Infix.compareOp: Should not reach here.');\r\n    },\r\n\r\n    concatOp: (value1, infix, value2, isArray1, isArray2) => {\r\n        if (value1 == null) value1 = '';\r\n        if (value2 == null) value2 = '';\r\n        // for array: {1,2,3}, get the first element to concat\r\n        if (isArray1) {\r\n            value1 = value1[0][0];\r\n        }\r\n        if (isArray2) {\r\n            value2 = value2[0][0];\r\n        }\r\n\r\n        const type1 = typeof value1, type2 = typeof value2;\r\n        // convert boolean to string\r\n        if (type1 === 'boolean')\r\n            value1 = value1 ? 'TRUE' : 'FALSE';\r\n        if (type2 === 'boolean')\r\n            value2 = value2 ? 'TRUE' : 'FALSE';\r\n        return '' + value1 + value2;\r\n    },\r\n\r\n    mathOp: (value1, infix, value2, isArray1, isArray2) => {\r\n        if (value1 == null) value1 = 0;\r\n        if (value2 == null) value2 = 0;\r\n\r\n        try {\r\n            value1 = FormulaHelpers.acceptNumber(value1, isArray1);\r\n            value2 = FormulaHelpers.acceptNumber(value2, isArray2);\r\n        } catch (e) {\r\n            if (e instanceof FormulaError)\r\n                return e;\r\n            throw e;\r\n        }\r\n\r\n        switch (infix) {\r\n            case '+':\r\n                return value1 + value2;\r\n            case '-':\r\n                return value1 - value2;\r\n            case '*':\r\n                return value1 * value2;\r\n            case '/':\r\n                if (value2 === 0)\r\n                    return FormulaError.DIV0;\r\n                return value1 / value2;\r\n            case '^':\r\n                return value1 ** value2;\r\n        }\r\n\r\n        throw Error('Infix.mathOp: Should not reach here.');\r\n    },\r\n\r\n};\r\n\r\nmodule.exports = {\r\n    Prefix,\r\n    Postfix,\r\n    Infix,\r\n    Operators: {\r\n        compareOp: ['<', '>', '=', '<>', '<=', '>='],\r\n        concatOp: ['&'],\r\n        mathOp: ['+', '-', '*', '/', '^'],\r\n    }\r\n};\r\n", "const FormulaError = require('../error');\r\nconst {FormulaHelpers, Types, Factorials, Criteria} = require('../helpers');\r\nconst {Infix} = require('../operators');\r\nconst H = FormulaHelpers;\r\n\r\n// Max number in excel is 2^1024-1, same as javascript, thus I will not check if number is valid in some functions.\r\n\r\n// factorials\r\nconst f = [], fd = [];\r\n\r\nfunction factorial(n) {\r\n    if (n <= 100)\r\n        return Factorials[n];\r\n    if (f[n] > 0)\r\n        return f[n];\r\n    return f[n] = factorial(n - 1) * n;\r\n}\r\n\r\nfunction factorialDouble(n) {\r\n    if (n === 1 || n === 0)\r\n        return 1;\r\n    if (n === 2)\r\n        return 2;\r\n    if (fd[n] > 0)\r\n        return fd[n];\r\n    return fd[n] = factorialDouble(n - 2) * n;\r\n}\r\n\r\n// https://support.office.com/en-us/article/excel-functions-by-category-5f91f4e9-7b42-46d2-9bd1-63f26a86c0eb\r\nconst MathFunctions = {\r\n    ABS: number => {\r\n        number = H.accept(number, Types.NUMBER);\r\n        return Math.abs(number);\r\n    },\r\n\r\n    AGGREGATE: (functionNum, options, ref1, ...refs) => {\r\n        // functionNum = H.accept(functionNum, Types.NUMBER);\r\n        // throw FormulaError.NOT_IMPLEMENTED('AGGREGATE');\r\n    },\r\n\r\n    ARABIC: text => {\r\n        text = H.accept(text, Types.STRING).toUpperCase();\r\n        // Credits: Rafa? Kukawski\r\n        if (!/^M*(?:D?C{0,3}|C[MD])(?:L?X{0,3}|X[CL])(?:V?I{0,3}|I[XV])$/.test(text)) {\r\n            throw new FormulaError('#VALUE!', 'Invalid roman numeral in ARABIC evaluation.');\r\n        }\r\n        let r = 0;\r\n        text.replace(/[MDLV]|C[MD]?|X[CL]?|I[XV]?/g, function (i) {\r\n            r += {\r\n                M: 1000,\r\n                CM: 900,\r\n                D: 500,\r\n                CD: 400,\r\n                C: 100,\r\n                XC: 90,\r\n                L: 50,\r\n                XL: 40,\r\n                X: 10,\r\n                IX: 9,\r\n                V: 5,\r\n                IV: 4,\r\n                I: 1\r\n            }[i];\r\n        });\r\n        return r;\r\n    },\r\n\r\n    BASE: (number, radix, minLength) => {\r\n        number = H.accept(number, Types.NUMBER);\r\n        if (number < 0 || number >= 2 ** 53)\r\n            throw FormulaError.NUM;\r\n        radix = H.accept(radix, Types.NUMBER);\r\n        if (radix < 2 || radix > 36)\r\n            throw FormulaError.NUM;\r\n        minLength = H.accept(minLength, Types.NUMBER, 0);\r\n        if (minLength < 0) {\r\n            throw FormulaError.NUM;\r\n        }\r\n\r\n        const result = number.toString(radix).toUpperCase();\r\n        return new Array(Math.max(minLength + 1 - result.length, 0)).join('0') + result;\r\n    },\r\n\r\n    CEILING: (number, significance) => {\r\n        number = H.accept(number, Types.NUMBER);\r\n        significance = H.accept(significance, Types.NUMBER);\r\n        if (significance === 0)\r\n            return 0;\r\n        if (number / significance % 1 === 0)\r\n            return number;\r\n        const absSignificance = Math.abs(significance);\r\n        const times = Math.floor(Math.abs(number) / absSignificance);\r\n        if (number < 0) {\r\n            // round down, away from zero\r\n            const roundDown = significance < 0;\r\n            return roundDown ? -absSignificance * (times + 1) : -absSignificance * (times);\r\n        } else {\r\n            return (times + 1) * absSignificance;\r\n        }\r\n    },\r\n\r\n    'CEILING.MATH': (number, significance, mode) => {\r\n        number = H.accept(number, Types.NUMBER);\r\n        significance = H.accept(significance, Types.NUMBER, number > 0 ? 1 : -1);\r\n        // mode can be any number\r\n        mode = H.accept(mode, Types.NUMBER, 0);\r\n        // The Mode argument does not affect positive numbers.\r\n        if (number >= 0) {\r\n            return MathFunctions.CEILING(number, significance);\r\n        }\r\n        // if round down, away from zero, then significance\r\n        const offset = mode ? significance : 0;\r\n        return MathFunctions.CEILING(number, significance) - offset;\r\n    },\r\n\r\n    'CEILING.PRECISE': (number, significance) => {\r\n        number = H.accept(number, Types.NUMBER);\r\n        significance = H.accept(significance, Types.NUMBER, 1);\r\n        // always round up\r\n        return MathFunctions.CEILING(number, Math.abs(significance));\r\n    },\r\n\r\n    COMBIN: (number, numberChosen) => {\r\n        number = H.accept(number, Types.NUMBER);\r\n        numberChosen = H.accept(numberChosen, Types.NUMBER);\r\n        if (number < 0 || numberChosen < 0 || number < numberChosen)\r\n            throw FormulaError.NUM;\r\n        const nFactorial = MathFunctions.FACT(number), kFactorial = MathFunctions.FACT(numberChosen);\r\n        return nFactorial / kFactorial / MathFunctions.FACT(number - numberChosen);\r\n    },\r\n\r\n    COMBINA: (number, numberChosen) => {\r\n        number = H.accept(number, Types.NUMBER);\r\n        numberChosen = H.accept(numberChosen, Types.NUMBER);\r\n        // special case\r\n        if ((number === 0 || number === 1) && numberChosen === 0)\r\n            return 1;\r\n        if (number < 0 || numberChosen < 0)\r\n            throw FormulaError.NUM;\r\n        return MathFunctions.COMBIN(number + numberChosen - 1, number - 1);\r\n    },\r\n\r\n    DECIMAL: (text, radix) => {\r\n        text = H.accept(text, Types.STRING);\r\n        radix = H.accept(radix, Types.NUMBER);\r\n        radix = Math.trunc(radix);\r\n        if (radix < 2 || radix > 36)\r\n            throw FormulaError.NUM;\r\n        const res = parseInt(text, radix);\r\n        if (isNaN(res))\r\n            throw FormulaError.NUM;\r\n        return res;\r\n    },\r\n\r\n    DEGREES: (radians) => {\r\n        radians = H.accept(radians, Types.NUMBER);\r\n        return radians * (180 / Math.PI);\r\n    },\r\n\r\n    EVEN: (number) => {\r\n        return MathFunctions.CEILING(number, -2);\r\n    },\r\n\r\n    EXP: (number) => {\r\n        number = H.accept(number, Types.NUMBER);\r\n        return Math.exp(number)\r\n    },\r\n\r\n    FACT: (number) => {\r\n        number = H.accept(number, Types.NUMBER);\r\n        number = Math.trunc(number);\r\n        // max number = 170\r\n        if (number > 170 || number < 0)\r\n            throw FormulaError.NUM;\r\n        if (number <= 100)\r\n            return Factorials[number];\r\n        return factorial(number);\r\n    },\r\n\r\n    FACTDOUBLE: (number) => {\r\n        number = H.accept(number, Types.NUMBER);\r\n        number = Math.trunc(number);\r\n        // max number = 170\r\n        if (number < -1)\r\n            throw FormulaError.NUM;\r\n        if (number === -1)\r\n            return 1;\r\n        return factorialDouble(number);\r\n    },\r\n\r\n    FLOOR: (number, significance) => {\r\n        number = H.accept(number, Types.NUMBER);\r\n        significance = H.accept(significance, Types.NUMBER);\r\n        if (significance === 0)\r\n            return 0;\r\n        if (number > 0 && significance < 0)\r\n            throw FormulaError.NUM;\r\n        if (number / significance % 1 === 0)\r\n            return number;\r\n        const absSignificance = Math.abs(significance);\r\n        const times = Math.floor(Math.abs(number) / absSignificance);\r\n        if (number < 0) {\r\n            // round down, away from zero\r\n            const roundDown = significance < 0;\r\n            return roundDown ? -absSignificance * times : -absSignificance * (times + 1);\r\n        } else {\r\n            // toward zero\r\n            return times * absSignificance;\r\n        }\r\n    },\r\n\r\n    'FLOOR.MATH': (number, significance, mode) => {\r\n        number = H.accept(number, Types.NUMBER);\r\n        significance = H.accept(significance, Types.NUMBER, number > 0 ? 1 : -1);\r\n\r\n        // mode can be 0 or any other number, 0 means away from zero\r\n        // the official documentation seems wrong\r\n        mode = H.accept(mode, Types.NUMBER, 0);\r\n        // The Mode argument does not affect positive numbers.\r\n        if (mode === 0 || number >= 0) {\r\n            // away from zero\r\n            return MathFunctions.FLOOR(number, Math.abs(significance));\r\n        }\r\n        // towards zero, add a significance\r\n        return MathFunctions.FLOOR(number, significance) + significance;\r\n    },\r\n\r\n    'FLOOR.PRECISE': (number, significance) => {\r\n        number = H.accept(number, Types.NUMBER);\r\n        significance = H.accept(significance, Types.NUMBER, 1);\r\n        // always round up\r\n        return MathFunctions.FLOOR(number, Math.abs(significance));\r\n    },\r\n\r\n    GCD: (...params) => {\r\n        const arr = [];\r\n        H.flattenParams(params, null, false,\r\n            (param) => {\r\n                // allow array, range ref\r\n                param = typeof param === 'boolean' ? NaN : Number(param);\r\n                if (!isNaN(param)) {\r\n                    if (param < 0 || param > 9007199254740990) // 2^53\r\n                        throw FormulaError.NUM;\r\n                    arr.push(Math.trunc(param))\r\n                } else\r\n                    throw FormulaError.VALUE;\r\n            }, 0);\r\n        // http://rosettacode.org/wiki/Greatest_common_divisor#JavaScript\r\n        let i, y,\r\n            n = params.length,\r\n            x = Math.abs(arr[0]);\r\n\r\n        for (i = 1; i < n; i++) {\r\n            y = Math.abs(arr[i]);\r\n\r\n            while (x && y) {\r\n                (x > y) ? x %= y : y %= x;\r\n            }\r\n            x += y;\r\n        }\r\n        return x;\r\n    },\r\n\r\n    INT: (number) => {\r\n        number = H.accept(number, Types.NUMBER);\r\n        return Math.floor(number);\r\n    },\r\n\r\n    'ISO.CEILING': (...params) => {\r\n        return MathFunctions['CEILING.PRECISE'](...params);\r\n    },\r\n\r\n    LCM: (...params) => {\r\n        const arr = [];\r\n        // always parse string to number if possible\r\n        H.flattenParams(params, null, false,\r\n            param => {\r\n                param = typeof param === 'boolean' ? NaN : Number(param);\r\n                if (!isNaN(param)) {\r\n                    if (param < 0 || param > 9007199254740990) // 2^53\r\n                        throw FormulaError.NUM;\r\n                    arr.push(Math.trunc(param))\r\n                }\r\n                // throw value error if can't parse to string\r\n                else\r\n                    throw FormulaError.VALUE;\r\n            }, 1);\r\n        // http://rosettacode.org/wiki/Least_common_multiple#JavaScript\r\n        let n = arr.length, a = Math.abs(arr[0]);\r\n        for (let i = 1; i < n; i++) {\r\n            let b = Math.abs(arr[i]), c = a;\r\n            while (a && b) {\r\n                a > b ? a %= b : b %= a;\r\n            }\r\n            a = Math.abs(c * arr[i]) / (a + b);\r\n        }\r\n        return a;\r\n    },\r\n\r\n    LN: number => {\r\n        number = H.accept(number, Types.NUMBER);\r\n        return Math.log(number);\r\n    },\r\n\r\n    LOG: (number, base) => {\r\n        number = H.accept(number, Types.NUMBER);\r\n        base = H.accept(base, Types.NUMBER, 10);\r\n\r\n        return Math.log(number) / Math.log(base);\r\n    },\r\n\r\n    LOG10: number => {\r\n        number = H.accept(number, Types.NUMBER);\r\n        return Math.log10(number);\r\n    },\r\n\r\n    MDETERM: (array) => {\r\n        array = H.accept(array, Types.ARRAY, undefined, false, true);\r\n        if (array[0].length !== array.length)\r\n            throw FormulaError.VALUE;\r\n        // adopted from https://github.com/numbers/numbers.js/blob/master/lib/numbers/matrix.js#L261\r\n        const numRow = array.length, numCol = array[0].length;\r\n        let det = 0, diagLeft, diagRight;\r\n\r\n        if (numRow === 1) {\r\n            return array[0][0];\r\n        } else if (numRow === 2) {\r\n            return array[0][0] * array[1][1] - array[0][1] * array[1][0];\r\n        }\r\n\r\n        for (let col = 0; col < numCol; col++) {\r\n            diagLeft = array[0][col];\r\n            diagRight = array[0][col];\r\n\r\n            for (let row = 1; row < numRow; row++) {\r\n                diagRight *= array[row][(((col + row) % numCol) + numCol) % numCol];\r\n                diagLeft *= array[row][(((col - row) % numCol) + numCol) % numCol];\r\n            }\r\n\r\n            det += diagRight - diagLeft;\r\n        }\r\n\r\n        return det;\r\n    },\r\n\r\n    MINVERSE: (array) => {\r\n        // TODO\r\n        // array = H.accept(array, Types.ARRAY, null, false);\r\n        // if (array[0].length !== array.length)\r\n        //     throw FormulaError.VALUE;\r\n        // throw FormulaError.NOT_IMPLEMENTED('MINVERSE');\r\n    },\r\n\r\n    MMULT: (array1, array2) => {\r\n        array1 = H.accept(array1, Types.ARRAY, undefined, false, true);\r\n        array2 = H.accept(array2, Types.ARRAY, undefined, false, true);\r\n\r\n        const aNumRows = array1.length, aNumCols = array1[0].length,\r\n            bNumRows = array2.length, bNumCols = array2[0].length,\r\n            m = new Array(aNumRows);  // initialize array of rows\r\n\r\n        if (aNumCols !== bNumRows)\r\n            throw FormulaError.VALUE;\r\n\r\n        for (let r = 0; r < aNumRows; r++) {\r\n            m[r] = new Array(bNumCols); // initialize the current row\r\n            for (let c = 0; c < bNumCols; c++) {\r\n                m[r][c] = 0;             // initialize the current cell\r\n                for (let i = 0; i < aNumCols; i++) {\r\n                    const v1 = array1[r][i], v2 = array2[i][c];\r\n                    if (typeof v1 !== \"number\" || typeof v2 !== \"number\") throw FormulaError.VALUE;\r\n                    m[r][c] += array1[r][i] * array2[i][c];\r\n                }\r\n            }\r\n        }\r\n        return m;\r\n    },\r\n\r\n    MOD: (number, divisor) => {\r\n        number = H.accept(number, Types.NUMBER);\r\n        divisor = H.accept(divisor, Types.NUMBER);\r\n        if (divisor === 0)\r\n            throw FormulaError.DIV0;\r\n        return number - divisor * MathFunctions.INT(number / divisor);\r\n\r\n    },\r\n\r\n    MROUND: (number, multiple) => {\r\n        number = H.accept(number, Types.NUMBER);\r\n        multiple = H.accept(multiple, Types.NUMBER);\r\n        if (multiple === 0)\r\n            return 0;\r\n        if (number > 0 && multiple < 0 || number < 0 && multiple > 0)\r\n            throw FormulaError.NUM;\r\n        if (number / multiple % 1 === 0)\r\n            return number;\r\n        return Math.round(number / multiple) * multiple;\r\n    },\r\n\r\n    MULTINOMIAL: (...numbers) => {\r\n        let numerator = 0, denominator = 1;\r\n        H.flattenParams(numbers, Types.NUMBER, false, number => {\r\n            if (number < 0)\r\n                throw FormulaError.NUM;\r\n            numerator += number;\r\n            denominator *= factorial(number);\r\n        });\r\n        return factorial(numerator) / denominator;\r\n    },\r\n\r\n    MUNIT: (dimension) => {\r\n        dimension = H.accept(dimension, Types.NUMBER);\r\n        const matrix = [];\r\n        for (let row = 0; row < dimension; row++) {\r\n            const rowArr = [];\r\n            for (let col = 0; col < dimension; col++) {\r\n                if (row === col)\r\n                    rowArr.push(1);\r\n                else\r\n                    rowArr.push(0);\r\n            }\r\n            matrix.push(rowArr);\r\n        }\r\n        return matrix;\r\n    },\r\n\r\n    ODD: (number) => {\r\n        number = H.accept(number, Types.NUMBER);\r\n        if (number === 0)\r\n            return 1;\r\n        let temp = Math.ceil(Math.abs(number));\r\n        temp = (temp & 1) ? temp : temp + 1;\r\n        return (number > 0) ? temp : -temp;\r\n    },\r\n\r\n    PI: () => {\r\n        return Math.PI;\r\n    },\r\n\r\n    POWER: (number, power) => {\r\n        number = H.accept(number, Types.NUMBER);\r\n        power = H.accept(power, Types.NUMBER);\r\n        return number ** power;\r\n    },\r\n\r\n    PRODUCT: (...numbers) => {\r\n        let product = 1;\r\n        H.flattenParams(numbers, null, true, (number, info) => {\r\n            const parsedNumber = Number(number);\r\n            if (info.isLiteral && !isNaN(parsedNumber)) {\r\n                product *= parsedNumber;\r\n            } else {\r\n                if (typeof number === \"number\")\r\n                    product *= number;\r\n            }\r\n        }, 1);\r\n        return product;\r\n    },\r\n\r\n    QUOTIENT: (numerator, denominator) => {\r\n        numerator = H.accept(numerator, Types.NUMBER);\r\n        denominator = H.accept(denominator, Types.NUMBER);\r\n        return Math.trunc(numerator / denominator);\r\n    },\r\n\r\n    RADIANS: (degrees) => {\r\n        degrees = H.accept(degrees, Types.NUMBER);\r\n        return degrees / 180 * Math.PI;\r\n    },\r\n\r\n    RAND: () => {\r\n        return Math.random();\r\n    },\r\n\r\n    RANDBETWEEN: (bottom, top) => {\r\n        bottom = H.accept(bottom, Types.NUMBER);\r\n        top = H.accept(top, Types.NUMBER);\r\n        return Math.floor(Math.random() * (top - bottom + 1) + bottom);\r\n    },\r\n\r\n    ROMAN: (number, form) => {\r\n        number = H.accept(number, Types.NUMBER);\r\n        form = H.accept(form, Types.NUMBER, 0);\r\n        if (form !== 0)\r\n            throw Error('ROMAN: only allows form=0 (classic form).');\r\n        // The MIT License\r\n        // Copyright (c) 2008 Steven Levithan\r\n        const digits = String(number).split('');\r\n        const key = ['', 'C', 'CC', 'CCC', 'CD', 'D', 'DC', 'DCC', 'DCCC', 'CM', '', 'X', 'XX', 'XXX', 'XL', 'L', 'LX', 'LXX', 'LXXX', 'XC', '', 'I', 'II', 'III', 'IV', 'V', 'VI', 'VII', 'VIII', 'IX'];\r\n        let roman = '', i = 3;\r\n        while (i--) {\r\n            roman = (key[+digits.pop() + (i * 10)] || '') + roman;\r\n        }\r\n        return new Array(+digits.join('') + 1).join('M') + roman;\r\n    },\r\n\r\n    ROUND: (number, digits) => {\r\n        number = H.accept(number, Types.NUMBER);\r\n        digits = H.accept(digits, Types.NUMBER);\r\n\r\n        const multiplier = Math.pow(10, Math.abs(digits));\r\n        const sign = number > 0 ? 1 : -1;\r\n        if (digits > 0) {\r\n            return sign * Math.round(Math.abs(number) * multiplier) / multiplier;\r\n        } else if (digits === 0) {\r\n            return sign * Math.round(Math.abs(number));\r\n        } else {\r\n            return sign * Math.round(Math.abs(number) / multiplier) * multiplier;\r\n        }\r\n    },\r\n\r\n    ROUNDDOWN: (number, digits) => {\r\n        number = H.accept(number, Types.NUMBER);\r\n        digits = H.accept(digits, Types.NUMBER);\r\n\r\n        const multiplier = Math.pow(10, Math.abs(digits));\r\n        const sign = number > 0 ? 1 : -1;\r\n        if (digits > 0) {\r\n            const offset = 1 / multiplier * 0.5;\r\n            return sign * Math.round((Math.abs(number) - offset) * multiplier) / multiplier;\r\n        } else if (digits === 0) {\r\n            const offset = 0.5;\r\n            return sign * Math.round((Math.abs(number) - offset));\r\n        } else {\r\n            const offset = multiplier * 0.5;\r\n            return sign * Math.round((Math.abs(number) - offset) / multiplier) * multiplier;\r\n        }\r\n    },\r\n\r\n    ROUNDUP: (number, digits) => {\r\n        number = H.accept(number, Types.NUMBER);\r\n        digits = H.accept(digits, Types.NUMBER);\r\n\r\n        const multiplier = Math.pow(10, Math.abs(digits));\r\n        const sign = number > 0 ? 1 : -1;\r\n        if (digits > 0) {\r\n            const offset = 1 / multiplier * 0.5;\r\n            return sign * Math.round((Math.abs(number) + offset) * multiplier) / multiplier;\r\n        } else if (digits === 0) {\r\n            const offset = 0.5;\r\n            return sign * Math.round((Math.abs(number) + offset));\r\n        } else {\r\n            const offset = multiplier * 0.5;\r\n            return sign * Math.round((Math.abs(number) + offset) / multiplier) * multiplier;\r\n        }\r\n    },\r\n\r\n    SERIESSUM: (x, n, m, coefficients) => {\r\n        x = H.accept(x, Types.NUMBER);\r\n        n = H.accept(n, Types.NUMBER);\r\n        m = H.accept(m, Types.NUMBER);\r\n        let i = 0, result;\r\n        H.flattenParams([coefficients], Types.NUMBER, false, (coefficient) => {\r\n            if (typeof coefficient !== \"number\") {\r\n                throw FormulaError.VALUE;\r\n            }\r\n            if (i === 0) {\r\n                result = coefficient * Math.pow(x, n);\r\n            } else {\r\n                result += coefficient * Math.pow(x, n + i * m);\r\n            }\r\n            i++;\r\n        });\r\n        return result;\r\n    },\r\n\r\n    SIGN: number => {\r\n        number = H.accept(number, Types.NUMBER);\r\n        return number > 0 ? 1 : number === 0 ? 0 : -1;\r\n    },\r\n\r\n    SQRT: number => {\r\n        number = H.accept(number, Types.NUMBER);\r\n        if (number < 0)\r\n            throw FormulaError.NUM;\r\n        return Math.sqrt(number);\r\n    },\r\n\r\n    SQRTPI: number => {\r\n        number = H.accept(number, Types.NUMBER);\r\n        if (number < 0)\r\n            throw FormulaError.NUM;\r\n        return Math.sqrt(number * Math.PI);\r\n    },\r\n\r\n    SUBTOTAL: () => {\r\n        // TODO: Finish this after statistical functions are implemented.\r\n    },\r\n\r\n    SUM: (...params) => {\r\n        // parse string to number only when it is a literal. (not a reference)\r\n        let result = 0;\r\n        H.flattenParams(params, Types.NUMBER, true,\r\n            (item, info) => {\r\n                // literal will be parsed to given type (Type.NUMBER)\r\n                if (info.isLiteral) {\r\n                    result += item;\r\n                } else {\r\n                    if (typeof item === \"number\")\r\n                        result += item;\r\n                }\r\n            });\r\n        return result\r\n    },\r\n\r\n    /**\r\n     * This functions requires instance of {@link FormulaParser}.\r\n     */\r\n    SUMIF: (context, range, criteria, sumRange) => {\r\n        const ranges = H.retrieveRanges(context, range, sumRange);\r\n        range = ranges[0];\r\n        sumRange = ranges[1];\r\n\r\n        criteria = H.retrieveArg(context, criteria);\r\n        const isCriteriaArray = criteria.isArray;\r\n        // parse criteria\r\n        criteria = Criteria.parse(H.accept(criteria));\r\n        let sum = 0;\r\n\r\n        range.forEach((row, rowNum) => {\r\n            row.forEach((value, colNum) => {\r\n                const valueToAdd = sumRange[rowNum][colNum];\r\n                if (typeof valueToAdd !== \"number\")\r\n                    return;\r\n                // wildcard\r\n                if (criteria.op === 'wc') {\r\n                    if (criteria.match === criteria.value.test(value)) {\r\n                        sum += valueToAdd;\r\n                    }\r\n\r\n                } else if (Infix.compareOp(value, criteria.op, criteria.value, Array.isArray(value), isCriteriaArray)) {\r\n                    sum += valueToAdd;\r\n                }\r\n            })\r\n        });\r\n        return sum;\r\n    },\r\n\r\n    SUMIFS: () => {\r\n\r\n    },\r\n\r\n    SUMPRODUCT: (array1, ...arrays) => {\r\n        array1 = H.accept(array1, Types.ARRAY, undefined, false, true);\r\n        arrays.forEach(array => {\r\n            array = H.accept(array, Types.ARRAY, undefined, false, true);\r\n            if (array1[0].length !== array[0].length || array1.length !== array.length)\r\n                throw FormulaError.VALUE;\r\n            for (let i = 0; i < array1.length; i++) {\r\n                for (let j = 0; j < array1[0].length; j++) {\r\n                    if (typeof array1[i][j] !== \"number\")\r\n                        array1[i][j] = 0;\r\n                    if (typeof array[i][j] !== \"number\")\r\n                        array[i][j] = 0;\r\n                    array1[i][j] *= array[i][j];\r\n                }\r\n            }\r\n        });\r\n        let result = 0;\r\n\r\n        array1.forEach(row => {\r\n            row.forEach(value => {\r\n                result += value;\r\n            })\r\n        });\r\n\r\n        return result;\r\n    },\r\n\r\n    SUMSQ: (...params) => {\r\n        // parse string to number only when it is a literal. (not a reference)\r\n        let result = 0;\r\n        H.flattenParams(params, Types.NUMBER, true,\r\n            (item, info) => {\r\n                // literal will be parsed to given type (Type.NUMBER)\r\n                if (info.isLiteral) {\r\n                    result += item ** 2;\r\n                } else {\r\n                    if (typeof item === \"number\")\r\n                        result += item ** 2;\r\n                }\r\n            });\r\n        return result\r\n    },\r\n\r\n    SUMX2MY2: (arrayX, arrayY) => {\r\n        const x = [], y = [];\r\n        let sum = 0;\r\n        H.flattenParams([arrayX], null, false, (item, info) => {\r\n            x.push(item);\r\n        });\r\n        H.flattenParams([arrayY], null, false, (item, info) => {\r\n            y.push(item);\r\n        });\r\n        if (x.length !== y.length)\r\n            throw FormulaError.NA;\r\n        for (let i = 0; i < x.length; i++) {\r\n            if (typeof x[i] === \"number\" && typeof y[i] === \"number\")\r\n                sum += x[i] ** 2 - y[i] ** 2\r\n        }\r\n        return sum;\r\n    },\r\n\r\n    SUMX2PY2: (arrayX, arrayY) => {\r\n        const x = [], y = [];\r\n        let sum = 0;\r\n        H.flattenParams([arrayX], null, false, (item, info) => {\r\n            x.push(item);\r\n        });\r\n        H.flattenParams([arrayY], null, false, (item, info) => {\r\n            y.push(item);\r\n        });\r\n        if (x.length !== y.length)\r\n            throw FormulaError.NA;\r\n        for (let i = 0; i < x.length; i++) {\r\n            if (typeof x[i] === \"number\" && typeof y[i] === \"number\")\r\n                sum += x[i] ** 2 + y[i] ** 2\r\n        }\r\n        return sum;\r\n    },\r\n\r\n    SUMXMY2: (arrayX, arrayY) => {\r\n        const x = [], y = [];\r\n        let sum = 0;\r\n        H.flattenParams([arrayX], null, false, (item, info) => {\r\n            x.push(item);\r\n        });\r\n        H.flattenParams([arrayY], null, false, (item, info) => {\r\n            y.push(item);\r\n        });\r\n        if (x.length !== y.length)\r\n            throw FormulaError.NA;\r\n        for (let i = 0; i < x.length; i++) {\r\n            if (typeof x[i] === \"number\" && typeof y[i] === \"number\")\r\n                sum += (x[i] - y[i]) ** 2;\r\n        }\r\n        return sum;\r\n    },\r\n\r\n    TRUNC: (number) => {\r\n        number = H.accept(number, Types.NUMBER);\r\n        return Math.trunc(number);\r\n    },\r\n};\r\n\r\n\r\nmodule.exports = MathFunctions;\r\n", "const FormulaError = require('../error');\r\nconst {FormulaHelpers, Types} = require('../helpers');\r\nconst H = FormulaHelpers;\r\nconst MAX_NUMBER = 2 ** 27 - 1;\r\n\r\n// https://support.office.com/en-us/article/excel-functions-by-category-5f91f4e9-7b42-46d2-9bd1-63f26a86c0eb\r\nconst TrigFunctions = {\r\n    ACOS: number => {\r\n        number = H.accept(number, Types.NUMBER);\r\n        if (number > 1 || number < -1)\r\n            throw FormulaError.NUM;\r\n        return Math.acos(number);\r\n    },\r\n\r\n    ACOSH: number => {\r\n        number = H.accept(number, Types.NUMBER);\r\n        if (number < 1)\r\n            throw FormulaError.NUM;\r\n        return Math.acosh(number);\r\n    },\r\n\r\n    ACOT: number => {\r\n        number = H.accept(number, Types.NUMBER);\r\n        return Math.PI / 2 - Math.atan(number);\r\n    },\r\n\r\n    ACOTH: number => {\r\n        number = H.accept(number, Types.NUMBER);\r\n        if (Math.abs(number) <= 1)\r\n            throw FormulaError.NUM;\r\n        return Math.atanh(1 / number);\r\n    },\r\n\r\n    ASIN: number => {\r\n        number = H.accept(number, Types.NUMBER);\r\n        if (number > 1 || number < -1)\r\n            throw FormulaError.NUM;\r\n        return Math.asin(number);\r\n    },\r\n\r\n    ASINH: number => {\r\n        number = H.accept(number, Types.NUMBER);\r\n        return Math.asinh(number);\r\n    },\r\n\r\n    ATAN: number => {\r\n        number = H.accept(number, Types.NUMBER);\r\n        return Math.atan(number);\r\n    },\r\n\r\n    ATAN2: (x, y) => {\r\n        x = H.accept(x, Types.NUMBER);\r\n        y = H.accept(y, Types.NUMBER);\r\n        if (y === 0 && x === 0)\r\n            throw FormulaError.DIV0;\r\n        return Math.atan2(y, x);\r\n    },\r\n\r\n    ATANH: number => {\r\n        number = H.accept(number, Types.NUMBER);\r\n        if (Math.abs(number) > 1)\r\n            throw FormulaError.NUM;\r\n        return Math.atanh(number);\r\n    },\r\n\r\n    COS: number => {\r\n        number = H.accept(number, Types.NUMBER);\r\n        if (Math.abs(number) > MAX_NUMBER)\r\n            throw FormulaError.NUM;\r\n        return Math.cos(number);\r\n    },\r\n\r\n    COSH: number => {\r\n        number = H.accept(number, Types.NUMBER);\r\n        return Math.cosh(number);\r\n    },\r\n\r\n    COT: number => {\r\n        number = H.accept(number, Types.NUMBER);\r\n        if (Math.abs(number) > MAX_NUMBER)\r\n            throw FormulaError.NUM;\r\n        if (number === 0)\r\n            throw FormulaError.DIV0;\r\n        return 1 / Math.tan(number);\r\n    },\r\n\r\n    COTH: number => {\r\n        number = H.accept(number, Types.NUMBER);\r\n        if (number === 0)\r\n            throw FormulaError.DIV0;\r\n        return 1 / Math.tanh(number);\r\n    },\r\n\r\n    CSC: number => {\r\n        number = H.accept(number, Types.NUMBER);\r\n        if (Math.abs(number) > MAX_NUMBER)\r\n            throw FormulaError.NUM;\r\n        return 1 / Math.sin(number);\r\n    },\r\n\r\n    CSCH: number => {\r\n        number = H.accept(number, Types.NUMBER);\r\n        if (number === 0)\r\n            throw FormulaError.DIV0;\r\n        return 1 / Math.sinh(number);\r\n    },\r\n\r\n    SEC: number => {\r\n        number = H.accept(number, Types.NUMBER);\r\n        if (Math.abs(number) > MAX_NUMBER)\r\n            throw FormulaError.NUM;\r\n        return 1 / Math.cos(number);\r\n    },\r\n\r\n    SECH: number => {\r\n        number = H.accept(number, Types.NUMBER);\r\n        return 1 / Math.cosh(number);\r\n    },\r\n\r\n    SIN: number => {\r\n        number = H.accept(number, Types.NUMBER);\r\n        if (Math.abs(number) > MAX_NUMBER)\r\n            throw FormulaError.NUM;\r\n        return Math.sin(number);\r\n    },\r\n\r\n    SINH: number => {\r\n        number = H.accept(number, Types.NUMBER);\r\n        return Math.sinh(number);\r\n    },\r\n\r\n    TAN: number => {\r\n        number = H.accept(number, Types.NUMBER);\r\n        if (Math.abs(number) > MAX_NUMBER)\r\n            throw FormulaError.NUM;\r\n        return Math.tan(number);\r\n    },\r\n\r\n    TANH: number => {\r\n        number = H.accept(number, Types.NUMBER);\r\n        return Math.tanh(number);\r\n    },\r\n};\r\n\r\nmodule.exports = TrigFunctions;\r\n", "const FormulaError = require('../error');\r\nconst {FormulaHelpers, Types,} = require('../helpers');\r\nconst H = FormulaHelpers;\r\n\r\n/**\r\n * Get the number of values that evaluate to true and false.\r\n * Cast Number and \"TRUE\", \"FALSE\" to boolean.\r\n * Ignore unrelated values.\r\n * @ignore\r\n * @param {any[]} params\r\n * @return {number[]}\r\n */\r\nfunction getNumLogicalValue(params) {\r\n    let numTrue = 0, numFalse = 0;\r\n    H.flattenParams(params, null, true, val => {\r\n        const type = typeof val;\r\n        if (type === \"string\") {\r\n            if (val === 'TRUE')\r\n                val = true;\r\n            else if (val === 'FALSE')\r\n                val = false;\r\n        } else if (type === \"number\")\r\n            val = Boolean(val);\r\n\r\n        if (typeof val === \"boolean\") {\r\n            if (val === true)\r\n                numTrue++;\r\n            else\r\n                numFalse++;\r\n        }\r\n    });\r\n    return [numTrue, numFalse];\r\n}\r\n\r\nconst LogicalFunctions = {\r\n    AND: (...params) => {\r\n        const [numTrue, numFalse] = getNumLogicalValue(params);\r\n\r\n        // OR returns #VALUE! if no logical values are found.\r\n        if (numTrue === 0 && numFalse === 0)\r\n            return FormulaError.VALUE;\r\n\r\n        return numTrue > 0 && numFalse === 0;\r\n    },\r\n\r\n    FALSE: () => {\r\n        return false;\r\n    },\r\n\r\n    // Special\r\n    IF: (context, logicalTest, valueIfTrue, valueIfFalse) => {\r\n        logicalTest = H.accept(logicalTest, Types.BOOLEAN);\r\n        valueIfTrue = H.accept(valueIfTrue); // do not parse type\r\n        valueIfFalse = H.accept(valueIfFalse, null, false); // do not parse type\r\n\r\n        return logicalTest ? valueIfTrue : valueIfFalse;\r\n    },\r\n\r\n    IFERROR: (value, valueIfError) => {\r\n        return value.value instanceof FormulaError ? H.accept(valueIfError) : H.accept(value);\r\n    },\r\n\r\n    IFNA: function (value, valueIfNa) {\r\n        if (arguments.length > 2)\r\n            throw FormulaError.TOO_MANY_ARGS('IFNA');\r\n        return FormulaError.NA.equals(value.value) ? H.accept(valueIfNa) : H.accept(value);\r\n    },\r\n\r\n    IFS: (...params) => {\r\n        if (params.length % 2 !== 0)\r\n            return new FormulaError('#N/A', 'IFS expects all arguments after position 0 to be in pairs.');\r\n\r\n        for (let i = 0; i < params.length / 2; i++) {\r\n            const logicalTest = H.accept(params[i * 2], Types.BOOLEAN);\r\n            const valueIfTrue = H.accept(params[i * 2 + 1]);\r\n            if (logicalTest)\r\n                return valueIfTrue;\r\n        }\r\n\r\n        return FormulaError.NA;\r\n    },\r\n\r\n    NOT: (logical) => {\r\n        logical = H.accept(logical, Types.BOOLEAN);\r\n        return !logical;\r\n    },\r\n\r\n    OR: (...params) => {\r\n        const [numTrue, numFalse] = getNumLogicalValue(params);\r\n\r\n        // OR returns #VALUE! if no logical values are found.\r\n        if (numTrue === 0 && numFalse === 0)\r\n            return FormulaError.VALUE;\r\n\r\n        return numTrue > 0;\r\n    },\r\n\r\n    SWITCH: (...params) => {\r\n\r\n    },\r\n\r\n    TRUE: () => {\r\n        return true;\r\n    },\r\n\r\n    XOR: (...params) => {\r\n        const [numTrue, numFalse] = getNumLogicalValue(params);\r\n\r\n        // XOR returns #VALUE! if no logical values are found.\r\n        if (numTrue === 0 && numFalse === 0)\r\n            return FormulaError.VALUE;\r\n\r\n        return numTrue % 2 === 1;\r\n    },\r\n};\r\n\r\nmodule.exports = LogicalFunctions;\r\n", "/* bessel.js (C) 2013-present SheetJS -- http://sheetjs.com */\n/* vim: set ts=2: */\n/*exported BESSEL */\nvar BESSEL;\n(function (factory) {\n  /*jshint ignore:start */\n  if(typeof DO_NOT_EXPORT_BESSEL === 'undefined') {\n    if('object' === typeof exports) {\n      factory(exports);\n    } else if ('function' === typeof define && define.amd) {\n      define(function () {\n        var module = {};\n        factory(module);\n        return module;\n      });\n    } else {\n      factory(BESSEL = {});\n    }\n  } else {\n    factory(BESSEL = {});\n  }\n  /*jshint ignore:end */\n}(function(BESSEL) {\nBESSEL.version = '1.0.2';\nvar M = Math;\n\nfunction _horner(arr, v) { for(var i = 0, z = 0; i < arr.length; ++i) z = v * z + arr[i]; return z; }\nfunction _bessel_iter(x, n, f0, f1, sign) {\n  if(n === 0) return f0;\n  if(n === 1) return f1;\n  var tdx = 2 / x, f2 = f1;\n  for(var o = 1; o < n; ++o) {\n    f2 = f1 * o * tdx + sign * f0;\n    f0 = f1; f1 = f2;\n  }\n  return f2;\n}\nfunction _bessel_wrap(bessel0, bessel1, name, nonzero, sign) {\n  return function bessel(x,n) {\n    if(nonzero) {\n      if(x === 0) return (nonzero == 1 ? -Infinity : Infinity);\n      else if(x < 0) return NaN;\n    }\n    if(n === 0) return bessel0(x);\n    if(n === 1) return bessel1(x);\n    if(n < 0) return NaN;\n    n|=0;\n    var b0 = bessel0(x), b1 = bessel1(x);\n    return _bessel_iter(x, n, b0, b1, sign);\n  };\n}\nvar besselj = (function() {\n  var W = 0.636619772; // 2 / Math.PI\n\n  var b0_a1a = [57568490574.0, -13362590354.0, 651619640.7, -11214424.18, 77392.33017, -184.9052456].reverse();\n  var b0_a2a = [57568490411.0, 1029532985.0, 9494680.718, 59272.64853, 267.8532712, 1.0].reverse();\n  var b0_a1b = [1.0, -0.1098628627e-2, 0.2734510407e-4, -0.2073370639e-5, 0.2093887211e-6].reverse();\n  var b0_a2b = [-0.1562499995e-1, 0.1430488765e-3, -0.6911147651e-5, 0.7621095161e-6, -0.934935152e-7].reverse();\n\n  function bessel0(x) {\n    var a=0, a1=0, a2=0, y = x * x;\n    if(x < 8) {\n      a1 = _horner(b0_a1a, y);\n      a2 = _horner(b0_a2a, y);\n      a = a1 / a2;\n    } else {\n      var xx = x - 0.785398164;\n      y = 64 / y;\n      a1 = _horner(b0_a1b, y);\n      a2 = _horner(b0_a2b, y);\n      a = M.sqrt(W/x)*(M.cos(xx)*a1-M.sin(xx)*a2*8/x);\n    }\n    return a;\n  }\n\n  var b1_a1a = [72362614232.0, -7895059235.0, 242396853.1, -2972611.439, 15704.48260, -30.16036606].reverse();\n  var b1_a2a = [144725228442.0, 2300535178.0, 18583304.74, 99447.43394, 376.9991397, 1.0].reverse();\n  var b1_a1b = [1.0, 0.183105e-2, -0.3516396496e-4, 0.2457520174e-5, -0.240337019e-6].reverse();\n  var b1_a2b = [0.04687499995, -0.2002690873e-3, 0.8449199096e-5, -0.88228987e-6, 0.105787412e-6].reverse();\n\n  function bessel1(x) {\n    var a=0, a1=0, a2=0, y = x*x, xx = M.abs(x) - 2.356194491;\n    if(Math.abs(x)< 8) {\n      a1 = x*_horner(b1_a1a, y);\n      a2 = _horner(b1_a2a, y);\n      a = a1 / a2;\n    } else {\n      y = 64 / y;\n      a1=_horner(b1_a1b, y);\n      a2=_horner(b1_a2b, y);\n      a=M.sqrt(W/M.abs(x))*(M.cos(xx)*a1-M.sin(xx)*a2*8/M.abs(x));\n      if(x < 0) a = -a;\n    }\n    return a;\n  }\n\n  return function besselj(x, n) {\n    n = Math.round(n);\n    if(!isFinite(x)) return isNaN(x) ? x : 0;\n    if(n < 0) return ((n%2)?-1:1)*besselj(x, -n);\n    if(x < 0) return ((n%2)?-1:1)*besselj(-x, n);\n    if(n === 0) return bessel0(x);\n    if(n === 1) return bessel1(x);\n    if(x === 0) return 0;\n\n    var ret=0.0;\n    if(x > n) {\n      ret = _bessel_iter(x, n, bessel0(x), bessel1(x),-1);\n    } else {\n      var m=2*M.floor((n+M.floor(M.sqrt(40*n)))/2);\n      var jsum=false;\n      var bjp=0.0, sum=0.0;\n      var bj=1.0, bjm = 0.0;\n      var tox = 2 / x;\n      for (var j=m;j>0;j--) {\n        bjm=j*tox*bj-bjp;\n        bjp=bj;\n        bj=bjm;\n        if (M.abs(bj) > 1E10) {\n          bj *= 1E-10;\n          bjp *= 1E-10;\n          ret *= 1E-10;\n          sum *= 1E-10;\n        }\n        if (jsum) sum += bj;\n        jsum=!jsum;\n        if (j == n) ret=bjp;\n      }\n      sum=2.0*sum-bj;\n      ret /= sum;\n    }\n    return ret;\n  };\n})();\nvar bessely = (function() {\n  var W = 0.636619772;\n\n  var b0_a1a = [-2957821389.0, 7062834065.0, -512359803.6, 10879881.29, -86327.92757, 228.4622733].reverse();\n  var b0_a2a = [40076544269.0, 745249964.8, 7189466.438, 47447.26470, 226.1030244, 1.0].reverse();\n  var b0_a1b = [1.0, -0.1098628627e-2, 0.2734510407e-4, -0.2073370639e-5, 0.2093887211e-6].reverse();\n  var b0_a2b = [-0.1562499995e-1, 0.1430488765e-3, -0.6911147651e-5, 0.7621095161e-6, -0.934945152e-7].reverse();\n\n  function bessel0(x) {\n    var a=0, a1=0, a2=0, y = x * x, xx = x - 0.785398164;\n    if(x < 8) {\n      a1 = _horner(b0_a1a, y);\n      a2 = _horner(b0_a2a, y);\n      a = a1/a2 + W * besselj(x,0) * M.log(x);\n    } else {\n      y = 64 / y;\n      a1 = _horner(b0_a1b, y);\n      a2 = _horner(b0_a2b, y);\n      a = M.sqrt(W/x)*(M.sin(xx)*a1+M.cos(xx)*a2*8/x);\n    }\n    return a;\n  }\n\n  var b1_a1a = [-0.4900604943e13, 0.1275274390e13, -0.5153438139e11, 0.7349264551e9, -0.4237922726e7, 0.8511937935e4].reverse();\n  var b1_a2a = [0.2499580570e14, 0.4244419664e12, 0.3733650367e10, 0.2245904002e8, 0.1020426050e6, 0.3549632885e3, 1].reverse();\n  var b1_a1b = [1.0, 0.183105e-2, -0.3516396496e-4, 0.2457520174e-5, -0.240337019e-6].reverse();\n  var b1_a2b = [0.04687499995, -0.2002690873e-3, 0.8449199096e-5, -0.88228987e-6, 0.105787412e-6].reverse();\n\n  function bessel1(x) {\n    var a=0, a1=0, a2=0, y = x*x, xx = x - 2.356194491;\n    if(x < 8) {\n      a1 = x*_horner(b1_a1a, y);\n      a2 = _horner(b1_a2a, y);\n      a = a1/a2 + W * (besselj(x,1) * M.log(x) - 1 / x);\n    } else {\n      y = 64 / y;\n      a1=_horner(b1_a1b, y);\n      a2=_horner(b1_a2b, y);\n      a=M.sqrt(W/x)*(M.sin(xx)*a1+M.cos(xx)*a2*8/x);\n    }\n    return a;\n  }\n\n  return _bessel_wrap(bessel0, bessel1, 'BESSELY', 1, -1);\n})();\nvar besseli = (function() {\n  var b0_a = [1.0, 3.5156229, 3.0899424, 1.2067492, 0.2659732, 0.360768e-1, 0.45813e-2].reverse();\n  var b0_b = [0.39894228, 0.1328592e-1, 0.225319e-2, -0.157565e-2, 0.916281e-2, -0.2057706e-1, 0.2635537e-1, -0.1647633e-1, 0.392377e-2].reverse();\n\n  function bessel0(x) {\n    if(x <= 3.75) return _horner(b0_a, x*x/(3.75*3.75));\n    return M.exp(M.abs(x))/M.sqrt(M.abs(x))*_horner(b0_b, 3.75/M.abs(x));\n  }\n\n  var b1_a = [0.5, 0.87890594, 0.51498869, 0.15084934, 0.2658733e-1, 0.301532e-2, 0.32411e-3].reverse();\n  var b1_b = [0.39894228, -0.3988024e-1, -0.362018e-2, 0.163801e-2, -0.1031555e-1, 0.2282967e-1, -0.2895312e-1, 0.1787654e-1, -0.420059e-2].reverse();\n\n  function bessel1(x) {\n    if(x < 3.75) return x * _horner(b1_a, x*x/(3.75*3.75));\n    return (x < 0 ? -1 : 1) * M.exp(M.abs(x))/M.sqrt(M.abs(x))*_horner(b1_b, 3.75/M.abs(x));\n  }\n\n  return function besseli(x, n) {\n    n = Math.round(n);\n    if(n === 0) return bessel0(x);\n    if(n === 1) return bessel1(x);\n    if(n < 0) return NaN;\n    if(M.abs(x) === 0) return 0;\n    if(x == Infinity) return Infinity;\n\n    var ret = 0.0, j, tox = 2 / M.abs(x), bip = 0.0, bi=1.0, bim=0.0;\n    var m=2*M.round((n+M.round(M.sqrt(40*n)))/2);\n    for (j=m;j>0;j--) {\n      bim=j*tox*bi + bip;\n      bip=bi; bi=bim;\n      if (M.abs(bi) > 1E10) {\n        bi *= 1E-10;\n        bip *= 1E-10;\n        ret *= 1E-10;\n      }\n      if(j == n) ret = bip;\n    }\n    ret *= besseli(x, 0) / bi;\n    return x < 0 && (n%2) ? -ret : ret;\n  };\n\n})();\n\nvar besselk = (function() {\n  var b0_a = [-0.57721566, 0.42278420, 0.23069756, 0.3488590e-1, 0.262698e-2, 0.10750e-3, 0.74e-5].reverse();\n  var b0_b = [1.25331414, -0.7832358e-1, 0.2189568e-1, -0.1062446e-1, 0.587872e-2, -0.251540e-2, 0.53208e-3].reverse();\n\n  function bessel0(x) {\n    if(x <= 2) return -M.log(x/2) * besseli(x,0) + _horner(b0_a, x*x/4);\n    return M.exp(-x) / M.sqrt(x) * _horner(b0_b, 2/x);\n  }\n\n  var b1_a = [1.0, 0.15443144, -0.67278579, -0.18156897, -0.1919402e-1, -0.110404e-2, -0.4686e-4].reverse();\n  var b1_b = [1.25331414, 0.23498619, -0.3655620e-1, 0.1504268e-1, -0.780353e-2, 0.325614e-2, -0.68245e-3].reverse();\n\n  function bessel1(x) {\n    if(x <= 2) return M.log(x/2) * besseli(x,1) + (1/x) * _horner(b1_a, x*x/4);\n    return M.exp(-x)/M.sqrt(x)*_horner(b1_b, 2/x);\n  }\n\n  return _bessel_wrap(bessel0, bessel1, 'BESSELK', 2, 1);\n})();\nBESSEL.besselj = besselj;\nBESSEL.bessely = bessely;\nBESSEL.besseli = besseli;\nBESSEL.besselk = besselk;\n}));\n", "(function (window, factory) {\n    if (typeof exports === 'object') {\n        module.exports = factory();\n    } else if (typeof define === 'function' && define.amd) {\n        define(factory);\n    } else {\n        window.jStat = factory();\n    }\n})(this, function () {\nvar jStat = (function(Math, undefined) {\n\n// For quick reference.\nvar concat = Array.prototype.concat;\nvar slice = Array.prototype.slice;\nvar toString = Object.prototype.toString;\n\n// Calculate correction for IEEE error\n// TODO: This calculation can be improved.\nfunction calcRdx(n, m) {\n  var val = n > m ? n : m;\n  return Math.pow(10,\n                  17 - ~~(Math.log(((val > 0) ? val : -val)) * Math.LOG10E));\n}\n\n\nvar isArray = Array.isArray || function isArray(arg) {\n  return toString.call(arg) === '[object Array]';\n};\n\n\nfunction isFunction(arg) {\n  return toString.call(arg) === '[object Function]';\n}\n\n\nfunction isNumber(num) {\n  return (typeof num === 'number') ? num - num === 0 : false;\n}\n\n\n// Converts the jStat matrix to vector.\nfunction toVector(arr) {\n  return concat.apply([], arr);\n}\n\n\n// The one and only jStat constructor.\nfunction jStat() {\n  return new jStat._init(arguments);\n}\n\n\n// TODO: Remove after all references in src files have been removed.\njStat.fn = jStat.prototype;\n\n\n// By separating the initializer from the constructor it's easier to handle\n// always returning a new instance whether \"new\" was used or not.\njStat._init = function _init(args) {\n  // If first argument is an array, must be vector or matrix.\n  if (isArray(args[0])) {\n    // Check if matrix.\n    if (isArray(args[0][0])) {\n      // See if a mapping function was also passed.\n      if (isFunction(args[1]))\n        args[0] = jStat.map(args[0], args[1]);\n      // Iterate over each is faster than this.push.apply(this, args[0].\n      for (var i = 0; i < args[0].length; i++)\n        this[i] = args[0][i];\n      this.length = args[0].length;\n\n    // Otherwise must be a vector.\n    } else {\n      this[0] = isFunction(args[1]) ? jStat.map(args[0], args[1]) : args[0];\n      this.length = 1;\n    }\n\n  // If first argument is number, assume creation of sequence.\n  } else if (isNumber(args[0])) {\n    this[0] = jStat.seq.apply(null, args);\n    this.length = 1;\n\n  // Handle case when jStat object is passed to jStat.\n  } else if (args[0] instanceof jStat) {\n    // Duplicate the object and pass it back.\n    return jStat(args[0].toArray());\n\n  // Unexpected argument value, return empty jStat object.\n  // TODO: This is strange behavior. Shouldn't this throw or some such to let\n  // the user know they had bad arguments?\n  } else {\n    this[0] = [];\n    this.length = 1;\n  }\n\n  return this;\n};\njStat._init.prototype = jStat.prototype;\njStat._init.constructor = jStat;\n\n\n// Utility functions.\n// TODO: for internal use only?\njStat.utils = {\n  calcRdx: calcRdx,\n  isArray: isArray,\n  isFunction: isFunction,\n  isNumber: isNumber,\n  toVector: toVector\n};\n\n\njStat._random_fn = Math.random;\njStat.setRandom = function setRandom(fn) {\n  if (typeof fn !== 'function')\n    throw new TypeError('fn is not a function');\n  jStat._random_fn = fn;\n};\n\n\n// Easily extend the jStat object.\n// TODO: is this seriously necessary?\njStat.extend = function extend(obj) {\n  var i, j;\n\n  if (arguments.length === 1) {\n    for (j in obj)\n      jStat[j] = obj[j];\n    return this;\n  }\n\n  for (i = 1; i < arguments.length; i++) {\n    for (j in arguments[i])\n      obj[j] = arguments[i][j];\n  }\n\n  return obj;\n};\n\n\n// Returns the number of rows in the matrix.\njStat.rows = function rows(arr) {\n  return arr.length || 1;\n};\n\n\n// Returns the number of columns in the matrix.\njStat.cols = function cols(arr) {\n  return arr[0].length || 1;\n};\n\n\n// Returns the dimensions of the object { rows: i, cols: j }\njStat.dimensions = function dimensions(arr) {\n  return {\n    rows: jStat.rows(arr),\n    cols: jStat.cols(arr)\n  };\n};\n\n\n// Returns a specified row as a vector or return a sub matrix by pick some rows\njStat.row = function row(arr, index) {\n  if (isArray(index)) {\n    return index.map(function(i) {\n      return jStat.row(arr, i);\n    })\n  }\n  return arr[index];\n};\n\n\n// return row as array\n// rowa([[1,2],[3,4]],0) -> [1,2]\njStat.rowa = function rowa(arr, i) {\n  return jStat.row(arr, i);\n};\n\n\n// Returns the specified column as a vector or return a sub matrix by pick some\n// columns\njStat.col = function col(arr, index) {\n  if (isArray(index)) {\n    var submat = jStat.arange(arr.length).map(function() {\n      return new Array(index.length);\n    });\n    index.forEach(function(ind, i){\n      jStat.arange(arr.length).forEach(function(j) {\n        submat[j][i] = arr[j][ind];\n      });\n    });\n    return submat;\n  }\n  var column = new Array(arr.length);\n  for (var i = 0; i < arr.length; i++)\n    column[i] = [arr[i][index]];\n  return column;\n};\n\n\n// return column as array\n// cola([[1,2],[3,4]],0) -> [1,3]\njStat.cola = function cola(arr, i) {\n  return jStat.col(arr, i).map(function(a){ return a[0] });\n};\n\n\n// Returns the diagonal of the matrix\njStat.diag = function diag(arr) {\n  var nrow = jStat.rows(arr);\n  var res = new Array(nrow);\n  for (var row = 0; row < nrow; row++)\n    res[row] = [arr[row][row]];\n  return res;\n};\n\n\n// Returns the anti-diagonal of the matrix\njStat.antidiag = function antidiag(arr) {\n  var nrow = jStat.rows(arr) - 1;\n  var res = new Array(nrow);\n  for (var i = 0; nrow >= 0; nrow--, i++)\n    res[i] = [arr[i][nrow]];\n  return res;\n};\n\n// Transpose a matrix or array.\njStat.transpose = function transpose(arr) {\n  var obj = [];\n  var objArr, rows, cols, j, i;\n\n  // Make sure arr is in matrix format.\n  if (!isArray(arr[0]))\n    arr = [arr];\n\n  rows = arr.length;\n  cols = arr[0].length;\n\n  for (i = 0; i < cols; i++) {\n    objArr = new Array(rows);\n    for (j = 0; j < rows; j++)\n      objArr[j] = arr[j][i];\n    obj.push(objArr);\n  }\n\n  // If obj is vector, return only single array.\n  return obj.length === 1 ? obj[0] : obj;\n};\n\n\n// Map a function to an array or array of arrays.\n// \"toAlter\" is an internal variable.\njStat.map = function map(arr, func, toAlter) {\n  var row, nrow, ncol, res, col;\n\n  if (!isArray(arr[0]))\n    arr = [arr];\n\n  nrow = arr.length;\n  ncol = arr[0].length;\n  res = toAlter ? arr : new Array(nrow);\n\n  for (row = 0; row < nrow; row++) {\n    // if the row doesn't exist, create it\n    if (!res[row])\n      res[row] = new Array(ncol);\n    for (col = 0; col < ncol; col++)\n      res[row][col] = func(arr[row][col], row, col);\n  }\n\n  return res.length === 1 ? res[0] : res;\n};\n\n\n// Cumulatively combine the elements of an array or array of arrays using a function.\njStat.cumreduce = function cumreduce(arr, func, toAlter) {\n  var row, nrow, ncol, res, col;\n\n  if (!isArray(arr[0]))\n    arr = [arr];\n\n  nrow = arr.length;\n  ncol = arr[0].length;\n  res = toAlter ? arr : new Array(nrow);\n\n  for (row = 0; row < nrow; row++) {\n    // if the row doesn't exist, create it\n    if (!res[row])\n      res[row] = new Array(ncol);\n    if (ncol > 0)\n      res[row][0] = arr[row][0];\n    for (col = 1; col < ncol; col++)\n      res[row][col] = func(res[row][col-1], arr[row][col]);\n  }\n  return res.length === 1 ? res[0] : res;\n};\n\n\n// Destructively alter an array.\njStat.alter = function alter(arr, func) {\n  return jStat.map(arr, func, true);\n};\n\n\n// Generate a rows x cols matrix according to the supplied function.\njStat.create = function  create(rows, cols, func) {\n  var res = new Array(rows);\n  var i, j;\n\n  if (isFunction(cols)) {\n    func = cols;\n    cols = rows;\n  }\n\n  for (i = 0; i < rows; i++) {\n    res[i] = new Array(cols);\n    for (j = 0; j < cols; j++)\n      res[i][j] = func(i, j);\n  }\n\n  return res;\n};\n\n\nfunction retZero() { return 0; }\n\n\n// Generate a rows x cols matrix of zeros.\njStat.zeros = function zeros(rows, cols) {\n  if (!isNumber(cols))\n    cols = rows;\n  return jStat.create(rows, cols, retZero);\n};\n\n\nfunction retOne() { return 1; }\n\n\n// Generate a rows x cols matrix of ones.\njStat.ones = function ones(rows, cols) {\n  if (!isNumber(cols))\n    cols = rows;\n  return jStat.create(rows, cols, retOne);\n};\n\n\n// Generate a rows x cols matrix of uniformly random numbers.\njStat.rand = function rand(rows, cols) {\n  if (!isNumber(cols))\n    cols = rows;\n  return jStat.create(rows, cols, jStat._random_fn);\n};\n\n\nfunction retIdent(i, j) { return i === j ? 1 : 0; }\n\n\n// Generate an identity matrix of size row x cols.\njStat.identity = function identity(rows, cols) {\n  if (!isNumber(cols))\n    cols = rows;\n  return jStat.create(rows, cols, retIdent);\n};\n\n\n// Tests whether a matrix is symmetric\njStat.symmetric = function symmetric(arr) {\n  var size = arr.length;\n  var row, col;\n\n  if (arr.length !== arr[0].length)\n    return false;\n\n  for (row = 0; row < size; row++) {\n    for (col = 0; col < size; col++)\n      if (arr[col][row] !== arr[row][col])\n        return false;\n  }\n\n  return true;\n};\n\n\n// Set all values to zero.\njStat.clear = function clear(arr) {\n  return jStat.alter(arr, retZero);\n};\n\n\n// Generate sequence.\njStat.seq = function seq(min, max, length, func) {\n  if (!isFunction(func))\n    func = false;\n\n  var arr = [];\n  var hival = calcRdx(min, max);\n  var step = (max * hival - min * hival) / ((length - 1) * hival);\n  var current = min;\n  var cnt;\n\n  // Current is assigned using a technique to compensate for IEEE error.\n  // TODO: Needs better implementation.\n  for (cnt = 0;\n       current <= max && cnt < length;\n       cnt++, current = (min * hival + step * hival * cnt) / hival) {\n    arr.push((func ? func(current, cnt) : current));\n  }\n\n  return arr;\n};\n\n\n// arange(5) -> [0,1,2,3,4]\n// arange(1,5) -> [1,2,3,4]\n// arange(5,1,-1) -> [5,4,3,2]\njStat.arange = function arange(start, end, step) {\n  var rl = [];\n  var i;\n  step = step || 1;\n  if (end === undefined) {\n    end = start;\n    start = 0;\n  }\n  if (start === end || step === 0) {\n    return [];\n  }\n  if (start < end && step < 0) {\n    return [];\n  }\n  if (start > end && step > 0) {\n    return [];\n  }\n  if (step > 0) {\n    for (i = start; i < end; i += step) {\n      rl.push(i);\n    }\n  } else {\n    for (i = start; i > end; i += step) {\n      rl.push(i);\n    }\n  }\n  return rl;\n};\n\n\n// A=[[1,2,3],[4,5,6],[7,8,9]]\n// slice(A,{row:{end:2},col:{start:1}}) -> [[2,3],[5,6]]\n// slice(A,1,{start:1}) -> [5,6]\n// as numpy code A[:2,1:]\njStat.slice = (function(){\n  function _slice(list, start, end, step) {\n    // note it's not equal to range.map mode it's a bug\n    var i;\n    var rl = [];\n    var length = list.length;\n    if (start === undefined && end === undefined && step === undefined) {\n      return jStat.copy(list);\n    }\n\n    start = start || 0;\n    end = end || list.length;\n    start = start >= 0 ? start : length + start;\n    end = end >= 0 ? end : length + end;\n    step = step || 1;\n    if (start === end || step === 0) {\n      return [];\n    }\n    if (start < end && step < 0) {\n      return [];\n    }\n    if (start > end && step > 0) {\n      return [];\n    }\n    if (step > 0) {\n      for (i = start; i < end; i += step) {\n        rl.push(list[i]);\n      }\n    } else {\n      for (i = start; i > end;i += step) {\n        rl.push(list[i]);\n      }\n    }\n    return rl;\n  }\n\n  function slice(list, rcSlice) {\n    var colSlice, rowSlice;\n    rcSlice = rcSlice || {};\n    if (isNumber(rcSlice.row)) {\n      if (isNumber(rcSlice.col))\n        return list[rcSlice.row][rcSlice.col];\n      var row = jStat.rowa(list, rcSlice.row);\n      colSlice = rcSlice.col || {};\n      return _slice(row, colSlice.start, colSlice.end, colSlice.step);\n    }\n\n    if (isNumber(rcSlice.col)) {\n      var col = jStat.cola(list, rcSlice.col);\n      rowSlice = rcSlice.row || {};\n      return _slice(col, rowSlice.start, rowSlice.end, rowSlice.step);\n    }\n\n    rowSlice = rcSlice.row || {};\n    colSlice = rcSlice.col || {};\n    var rows = _slice(list, rowSlice.start, rowSlice.end, rowSlice.step);\n    return rows.map(function(row) {\n      return _slice(row, colSlice.start, colSlice.end, colSlice.step);\n    });\n  }\n\n  return slice;\n}());\n\n\n// A=[[1,2,3],[4,5,6],[7,8,9]]\n// sliceAssign(A,{row:{start:1},col:{start:1}},[[0,0],[0,0]])\n// A=[[1,2,3],[4,0,0],[7,0,0]]\njStat.sliceAssign = function sliceAssign(A, rcSlice, B) {\n  var nl, ml;\n  if (isNumber(rcSlice.row)) {\n    if (isNumber(rcSlice.col))\n      return A[rcSlice.row][rcSlice.col] = B;\n    rcSlice.col = rcSlice.col || {};\n    rcSlice.col.start = rcSlice.col.start || 0;\n    rcSlice.col.end = rcSlice.col.end || A[0].length;\n    rcSlice.col.step = rcSlice.col.step || 1;\n    nl = jStat.arange(rcSlice.col.start,\n                          Math.min(A.length, rcSlice.col.end),\n                          rcSlice.col.step);\n    var m = rcSlice.row;\n    nl.forEach(function(n, i) {\n      A[m][n] = B[i];\n    });\n    return A;\n  }\n\n  if (isNumber(rcSlice.col)) {\n    rcSlice.row = rcSlice.row || {};\n    rcSlice.row.start = rcSlice.row.start || 0;\n    rcSlice.row.end = rcSlice.row.end || A.length;\n    rcSlice.row.step = rcSlice.row.step || 1;\n    ml = jStat.arange(rcSlice.row.start,\n                          Math.min(A[0].length, rcSlice.row.end),\n                          rcSlice.row.step);\n    var n = rcSlice.col;\n    ml.forEach(function(m, j) {\n      A[m][n] = B[j];\n    });\n    return A;\n  }\n\n  if (B[0].length === undefined) {\n    B = [B];\n  }\n  rcSlice.row.start = rcSlice.row.start || 0;\n  rcSlice.row.end = rcSlice.row.end || A.length;\n  rcSlice.row.step = rcSlice.row.step || 1;\n  rcSlice.col.start = rcSlice.col.start || 0;\n  rcSlice.col.end = rcSlice.col.end || A[0].length;\n  rcSlice.col.step = rcSlice.col.step || 1;\n  ml = jStat.arange(rcSlice.row.start,\n                        Math.min(A.length, rcSlice.row.end),\n                        rcSlice.row.step);\n  nl = jStat.arange(rcSlice.col.start,\n                        Math.min(A[0].length, rcSlice.col.end),\n                        rcSlice.col.step);\n  ml.forEach(function(m, i) {\n    nl.forEach(function(n, j) {\n      A[m][n] = B[i][j];\n    });\n  });\n  return A;\n};\n\n\n// [1,2,3] ->\n// [[1,0,0],[0,2,0],[0,0,3]]\njStat.diagonal = function diagonal(diagArray) {\n  var mat = jStat.zeros(diagArray.length, diagArray.length);\n  diagArray.forEach(function(t, i) {\n    mat[i][i] = t;\n  });\n  return mat;\n};\n\n\n// return copy of A\njStat.copy = function copy(A) {\n  return A.map(function(row) {\n    if (isNumber(row))\n      return row;\n    return row.map(function(t) {\n      return t;\n    });\n  });\n};\n\n\n// TODO: Go over this entire implementation. Seems a tragic waste of resources\n// doing all this work. Instead, and while ugly, use new Function() to generate\n// a custom function for each static method.\n\n// Quick reference.\nvar jProto = jStat.prototype;\n\n// Default length.\njProto.length = 0;\n\n// For internal use only.\n// TODO: Check if they're actually used, and if they are then rename them\n// to _*\njProto.push = Array.prototype.push;\njProto.sort = Array.prototype.sort;\njProto.splice = Array.prototype.splice;\njProto.slice = Array.prototype.slice;\n\n\n// Return a clean array.\njProto.toArray = function toArray() {\n  return this.length > 1 ? slice.call(this) : slice.call(this)[0];\n};\n\n\n// Map a function to a matrix or vector.\njProto.map = function map(func, toAlter) {\n  return jStat(jStat.map(this, func, toAlter));\n};\n\n\n// Cumulatively combine the elements of a matrix or vector using a function.\njProto.cumreduce = function cumreduce(func, toAlter) {\n  return jStat(jStat.cumreduce(this, func, toAlter));\n};\n\n\n// Destructively alter an array.\njProto.alter = function alter(func) {\n  jStat.alter(this, func);\n  return this;\n};\n\n\n// Extend prototype with methods that have no argument.\n(function(funcs) {\n  for (var i = 0; i < funcs.length; i++) (function(passfunc) {\n    jProto[passfunc] = function(func) {\n      var self = this,\n      results;\n      // Check for callback.\n      if (func) {\n        setTimeout(function() {\n          func.call(self, jProto[passfunc].call(self));\n        });\n        return this;\n      }\n      results = jStat[passfunc](this);\n      return isArray(results) ? jStat(results) : results;\n    };\n  })(funcs[i]);\n})('transpose clear symmetric rows cols dimensions diag antidiag'.split(' '));\n\n\n// Extend prototype with methods that have one argument.\n(function(funcs) {\n  for (var i = 0; i < funcs.length; i++) (function(passfunc) {\n    jProto[passfunc] = function(index, func) {\n      var self = this;\n      // check for callback\n      if (func) {\n        setTimeout(function() {\n          func.call(self, jProto[passfunc].call(self, index));\n        });\n        return this;\n      }\n      return jStat(jStat[passfunc](this, index));\n    };\n  })(funcs[i]);\n})('row col'.split(' '));\n\n\n// Extend prototype with simple shortcut methods.\n(function(funcs) {\n  for (var i = 0; i < funcs.length; i++) (function(passfunc) {\n    jProto[passfunc] = function() {\n      return jStat(jStat[passfunc].apply(null, arguments));\n    };\n  })(funcs[i]);\n})('create zeros ones rand identity'.split(' '));\n\n\n// Exposing jStat.\nreturn jStat;\n\n}(Math));\n(function(jStat, Math) {\n\nvar isFunction = jStat.utils.isFunction;\n\n// Ascending functions for sort\nfunction ascNum(a, b) { return a - b; }\n\nfunction clip(arg, min, max) {\n  return Math.max(min, Math.min(arg, max));\n}\n\n\n// sum of an array\njStat.sum = function sum(arr) {\n  var sum = 0;\n  var i = arr.length;\n  while (--i >= 0)\n    sum += arr[i];\n  return sum;\n};\n\n\n// sum squared\njStat.sumsqrd = function sumsqrd(arr) {\n  var sum = 0;\n  var i = arr.length;\n  while (--i >= 0)\n    sum += arr[i] * arr[i];\n  return sum;\n};\n\n\n// sum of squared errors of prediction (SSE)\njStat.sumsqerr = function sumsqerr(arr) {\n  var mean = jStat.mean(arr);\n  var sum = 0;\n  var i = arr.length;\n  var tmp;\n  while (--i >= 0) {\n    tmp = arr[i] - mean;\n    sum += tmp * tmp;\n  }\n  return sum;\n};\n\n// sum of an array in each row\njStat.sumrow = function sumrow(arr) {\n  var sum = 0;\n  var i = arr.length;\n  while (--i >= 0)\n    sum += arr[i];\n  return sum;\n};\n\n// product of an array\njStat.product = function product(arr) {\n  var prod = 1;\n  var i = arr.length;\n  while (--i >= 0)\n    prod *= arr[i];\n  return prod;\n};\n\n\n// minimum value of an array\njStat.min = function min(arr) {\n  var low = arr[0];\n  var i = 0;\n  while (++i < arr.length)\n    if (arr[i] < low)\n      low = arr[i];\n  return low;\n};\n\n\n// maximum value of an array\njStat.max = function max(arr) {\n  var high = arr[0];\n  var i = 0;\n  while (++i < arr.length)\n    if (arr[i] > high)\n      high = arr[i];\n  return high;\n};\n\n\n// unique values of an array\njStat.unique = function unique(arr) {\n  var hash = {}, _arr = [];\n  for(var i = 0; i < arr.length; i++) {\n    if (!hash[arr[i]]) {\n      hash[arr[i]] = true;\n      _arr.push(arr[i]);\n    }\n  }\n  return _arr;\n};\n\n\n// mean value of an array\njStat.mean = function mean(arr) {\n  return jStat.sum(arr) / arr.length;\n};\n\n\n// mean squared error (MSE)\njStat.meansqerr = function meansqerr(arr) {\n  return jStat.sumsqerr(arr) / arr.length;\n};\n\n\n// geometric mean of an array\njStat.geomean = function geomean(arr) {\n  return Math.pow(jStat.product(arr), 1 / arr.length);\n};\n\n\n// median of an array\njStat.median = function median(arr) {\n  var arrlen = arr.length;\n  var _arr = arr.slice().sort(ascNum);\n  // check if array is even or odd, then return the appropriate\n  return !(arrlen & 1)\n    ? (_arr[(arrlen / 2) - 1 ] + _arr[(arrlen / 2)]) / 2\n    : _arr[(arrlen / 2) | 0 ];\n};\n\n\n// cumulative sum of an array\njStat.cumsum = function cumsum(arr) {\n  return jStat.cumreduce(arr, function (a, b) { return a + b; });\n};\n\n\n// cumulative product of an array\njStat.cumprod = function cumprod(arr) {\n  return jStat.cumreduce(arr, function (a, b) { return a * b; });\n};\n\n\n// successive differences of a sequence\njStat.diff = function diff(arr) {\n  var diffs = [];\n  var arrLen = arr.length;\n  var i;\n  for (i = 1; i < arrLen; i++)\n    diffs.push(arr[i] - arr[i - 1]);\n  return diffs;\n};\n\n\n// ranks of an array\njStat.rank = function (arr) {\n  var i;\n  var distinctNumbers = [];\n  var numberCounts = {};\n  for (i = 0; i < arr.length; i++) {\n    var number = arr[i];\n    if (numberCounts[number]) {\n      numberCounts[number]++;\n    } else {\n      numberCounts[number] = 1;\n      distinctNumbers.push(number);\n    }\n  }\n\n  var sortedDistinctNumbers = distinctNumbers.sort(ascNum);\n  var numberRanks = {};\n  var currentRank = 1;\n  for (i = 0; i < sortedDistinctNumbers.length; i++) {\n    var number = sortedDistinctNumbers[i];\n    var count = numberCounts[number];\n    var first = currentRank;\n    var last = currentRank + count - 1;\n    var rank = (first + last) / 2;\n    numberRanks[number] = rank;\n    currentRank += count;\n  }\n\n  return arr.map(function (number) {\n    return numberRanks[number];\n  });\n};\n\n\n// mode of an array\n// if there are multiple modes of an array, return all of them\n// is this the appropriate way of handling it?\njStat.mode = function mode(arr) {\n  var arrLen = arr.length;\n  var _arr = arr.slice().sort(ascNum);\n  var count = 1;\n  var maxCount = 0;\n  var numMaxCount = 0;\n  var mode_arr = [];\n  var i;\n\n  for (i = 0; i < arrLen; i++) {\n    if (_arr[i] === _arr[i + 1]) {\n      count++;\n    } else {\n      if (count > maxCount) {\n        mode_arr = [_arr[i]];\n        maxCount = count;\n        numMaxCount = 0;\n      }\n      // are there multiple max counts\n      else if (count === maxCount) {\n        mode_arr.push(_arr[i]);\n        numMaxCount++;\n      }\n      // resetting count for new value in array\n      count = 1;\n    }\n  }\n\n  return numMaxCount === 0 ? mode_arr[0] : mode_arr;\n};\n\n\n// range of an array\njStat.range = function range(arr) {\n  return jStat.max(arr) - jStat.min(arr);\n};\n\n// variance of an array\n// flag = true indicates sample instead of population\njStat.variance = function variance(arr, flag) {\n  return jStat.sumsqerr(arr) / (arr.length - (flag ? 1 : 0));\n};\n\n// pooled variance of an array of arrays\njStat.pooledvariance = function pooledvariance(arr) {\n  var sumsqerr = arr.reduce(function (a, samples) {return a + jStat.sumsqerr(samples);}, 0);\n  var count = arr.reduce(function (a, samples) {return a + samples.length;}, 0);\n  return sumsqerr / (count - arr.length);\n};\n\n// deviation of an array\njStat.deviation = function (arr) {\n  var mean = jStat.mean(arr);\n  var arrlen = arr.length;\n  var dev = new Array(arrlen);\n  for (var i = 0; i < arrlen; i++) {\n    dev[i] = arr[i] - mean;\n  }\n  return dev;\n};\n\n// standard deviation of an array\n// flag = true indicates sample instead of population\njStat.stdev = function stdev(arr, flag) {\n  return Math.sqrt(jStat.variance(arr, flag));\n};\n\n// pooled standard deviation of an array of arrays\njStat.pooledstdev = function pooledstdev(arr) {\n  return Math.sqrt(jStat.pooledvariance(arr));\n};\n\n// mean deviation (mean absolute deviation) of an array\njStat.meandev = function meandev(arr) {\n  var mean = jStat.mean(arr);\n  var a = [];\n  for (var i = arr.length - 1; i >= 0; i--) {\n    a.push(Math.abs(arr[i] - mean));\n  }\n  return jStat.mean(a);\n};\n\n\n// median deviation (median absolute deviation) of an array\njStat.meddev = function meddev(arr) {\n  var median = jStat.median(arr);\n  var a = [];\n  for (var i = arr.length - 1; i >= 0; i--) {\n    a.push(Math.abs(arr[i] - median));\n  }\n  return jStat.median(a);\n};\n\n\n// coefficient of variation\njStat.coeffvar = function coeffvar(arr) {\n  return jStat.stdev(arr) / jStat.mean(arr);\n};\n\n\n// quartiles of an array\njStat.quartiles = function quartiles(arr) {\n  var arrlen = arr.length;\n  var _arr = arr.slice().sort(ascNum);\n  return [\n    _arr[ Math.round((arrlen) / 4) - 1 ],\n    _arr[ Math.round((arrlen) / 2) - 1 ],\n    _arr[ Math.round((arrlen) * 3 / 4) - 1 ]\n  ];\n};\n\n\n// Arbitary quantiles of an array. Direct port of the scipy.stats\n// implementation by Pierre GF Gerard-Marchant.\njStat.quantiles = function quantiles(arr, quantilesArray, alphap, betap) {\n  var sortedArray = arr.slice().sort(ascNum);\n  var quantileVals = [quantilesArray.length];\n  var n = arr.length;\n  var i, p, m, aleph, k, gamma;\n\n  if (typeof alphap === 'undefined')\n    alphap = 3 / 8;\n  if (typeof betap === 'undefined')\n    betap = 3 / 8;\n\n  for (i = 0; i < quantilesArray.length; i++) {\n    p = quantilesArray[i];\n    m = alphap + p * (1 - alphap - betap);\n    aleph = n * p + m;\n    k = Math.floor(clip(aleph, 1, n - 1));\n    gamma = clip(aleph - k, 0, 1);\n    quantileVals[i] = (1 - gamma) * sortedArray[k - 1] + gamma * sortedArray[k];\n  }\n\n  return quantileVals;\n};\n\n// Return the k-th percentile of values in a range, where k is in the range 0..1, inclusive.\n// Passing true for the exclusive parameter excludes both endpoints of the range.\njStat.percentile = function percentile(arr, k, exclusive) {\n  var _arr = arr.slice().sort(ascNum);\n  var realIndex = k * (_arr.length + (exclusive ? 1 : -1)) + (exclusive ? 0 : 1);\n  var index = parseInt(realIndex);\n  var frac = realIndex - index;\n  if (index + 1 < _arr.length) {\n    return _arr[index - 1] + frac * (_arr[index] - _arr[index - 1]);\n  } else {\n    return _arr[index - 1];\n  }\n}\n\n// The percentile rank of score in a given array. Returns the percentage\n// of all values in the input array that are less than (kind='strict') or\n// less or equal than (kind='weak') score. Default is weak.\njStat.percentileOfScore = function percentileOfScore(arr, score, kind) {\n  var counter = 0;\n  var len = arr.length;\n  var strict = false;\n  var value, i;\n\n  if (kind === 'strict')\n    strict = true;\n\n  for (i = 0; i < len; i++) {\n    value = arr[i];\n    if ((strict && value < score) ||\n        (!strict && value <= score)) {\n      counter++;\n    }\n  }\n\n  return counter / len;\n};\n\n\n// Histogram (bin count) data\njStat.histogram = function histogram(arr, binCnt) {\n  binCnt = binCnt || 4;\n  var first = jStat.min(arr);\n  var binWidth = (jStat.max(arr) - first) / binCnt;\n  var len = arr.length;\n  var bins = [];\n  var i;\n\n  for (i = 0; i < binCnt; i++)\n    bins[i] = 0;\n  for (i = 0; i < len; i++)\n    bins[Math.min(Math.floor(((arr[i] - first) / binWidth)), binCnt - 1)] += 1;\n\n  return bins;\n};\n\n\n// covariance of two arrays\njStat.covariance = function covariance(arr1, arr2) {\n  var u = jStat.mean(arr1);\n  var v = jStat.mean(arr2);\n  var arr1Len = arr1.length;\n  var sq_dev = new Array(arr1Len);\n  var i;\n\n  for (i = 0; i < arr1Len; i++)\n    sq_dev[i] = (arr1[i] - u) * (arr2[i] - v);\n\n  return jStat.sum(sq_dev) / (arr1Len - 1);\n};\n\n\n// (pearson's) population correlation coefficient, rho\njStat.corrcoeff = function corrcoeff(arr1, arr2) {\n  return jStat.covariance(arr1, arr2) /\n      jStat.stdev(arr1, 1) /\n      jStat.stdev(arr2, 1);\n};\n\n  // (spearman's) rank correlation coefficient, sp\njStat.spearmancoeff =  function (arr1, arr2) {\n  arr1 = jStat.rank(arr1);\n  arr2 = jStat.rank(arr2);\n  //return pearson's correlation of the ranks:\n  return jStat.corrcoeff(arr1, arr2);\n}\n\n\n// statistical standardized moments (general form of skew/kurt)\njStat.stanMoment = function stanMoment(arr, n) {\n  var mu = jStat.mean(arr);\n  var sigma = jStat.stdev(arr);\n  var len = arr.length;\n  var skewSum = 0;\n\n  for (var i = 0; i < len; i++)\n    skewSum += Math.pow((arr[i] - mu) / sigma, n);\n\n  return skewSum / arr.length;\n};\n\n// (pearson's) moment coefficient of skewness\njStat.skewness = function skewness(arr) {\n  return jStat.stanMoment(arr, 3);\n};\n\n// (pearson's) (excess) kurtosis\njStat.kurtosis = function kurtosis(arr) {\n  return jStat.stanMoment(arr, 4) - 3;\n};\n\n\nvar jProto = jStat.prototype;\n\n\n// Extend jProto with method for calculating cumulative sums and products.\n// This differs from the similar extension below as cumsum and cumprod should\n// not be run again in the case fullbool === true.\n// If a matrix is passed, automatically assume operation should be done on the\n// columns.\n(function(funcs) {\n  for (var i = 0; i < funcs.length; i++) (function(passfunc) {\n    // If a matrix is passed, automatically assume operation should be done on\n    // the columns.\n    jProto[passfunc] = function(fullbool, func) {\n      var arr = [];\n      var i = 0;\n      var tmpthis = this;\n      // Assignment reassignation depending on how parameters were passed in.\n      if (isFunction(fullbool)) {\n        func = fullbool;\n        fullbool = false;\n      }\n      // Check if a callback was passed with the function.\n      if (func) {\n        setTimeout(function() {\n          func.call(tmpthis, jProto[passfunc].call(tmpthis, fullbool));\n        });\n        return this;\n      }\n      // Check if matrix and run calculations.\n      if (this.length > 1) {\n        tmpthis = fullbool === true ? this : this.transpose();\n        for (; i < tmpthis.length; i++)\n          arr[i] = jStat[passfunc](tmpthis[i]);\n        return arr;\n      }\n      // Pass fullbool if only vector, not a matrix. for variance and stdev.\n      return jStat[passfunc](this[0], fullbool);\n    };\n  })(funcs[i]);\n})(('cumsum cumprod').split(' '));\n\n\n// Extend jProto with methods which don't require arguments and work on columns.\n(function(funcs) {\n  for (var i = 0; i < funcs.length; i++) (function(passfunc) {\n    // If a matrix is passed, automatically assume operation should be done on\n    // the columns.\n    jProto[passfunc] = function(fullbool, func) {\n      var arr = [];\n      var i = 0;\n      var tmpthis = this;\n      // Assignment reassignation depending on how parameters were passed in.\n      if (isFunction(fullbool)) {\n        func = fullbool;\n        fullbool = false;\n      }\n      // Check if a callback was passed with the function.\n      if (func) {\n        setTimeout(function() {\n          func.call(tmpthis, jProto[passfunc].call(tmpthis, fullbool));\n        });\n        return this;\n      }\n      // Check if matrix and run calculations.\n      if (this.length > 1) {\n        if (passfunc !== 'sumrow')\n          tmpthis = fullbool === true ? this : this.transpose();\n        for (; i < tmpthis.length; i++)\n          arr[i] = jStat[passfunc](tmpthis[i]);\n        return fullbool === true\n            ? jStat[passfunc](jStat.utils.toVector(arr))\n            : arr;\n      }\n      // Pass fullbool if only vector, not a matrix. for variance and stdev.\n      return jStat[passfunc](this[0], fullbool);\n    };\n  })(funcs[i]);\n})(('sum sumsqrd sumsqerr sumrow product min max unique mean meansqerr ' +\n    'geomean median diff rank mode range variance deviation stdev meandev ' +\n    'meddev coeffvar quartiles histogram skewness kurtosis').split(' '));\n\n\n// Extend jProto with functions that take arguments. Operations on matrices are\n// done on columns.\n(function(funcs) {\n  for (var i = 0; i < funcs.length; i++) (function(passfunc) {\n    jProto[passfunc] = function() {\n      var arr = [];\n      var i = 0;\n      var tmpthis = this;\n      var args = Array.prototype.slice.call(arguments);\n      var callbackFunction;\n\n      // If the last argument is a function, we assume it's a callback; we\n      // strip the callback out and call the function again.\n      if (isFunction(args[args.length - 1])) {\n        callbackFunction = args[args.length - 1];\n        var argsToPass = args.slice(0, args.length - 1);\n\n        setTimeout(function() {\n          callbackFunction.call(tmpthis,\n                                jProto[passfunc].apply(tmpthis, argsToPass));\n        });\n        return this;\n\n      // Otherwise we curry the function args and call normally.\n      } else {\n        callbackFunction = undefined;\n        var curriedFunction = function curriedFunction(vector) {\n          return jStat[passfunc].apply(tmpthis, [vector].concat(args));\n        }\n      }\n\n      // If this is a matrix, run column-by-column.\n      if (this.length > 1) {\n        tmpthis = tmpthis.transpose();\n        for (; i < tmpthis.length; i++)\n          arr[i] = curriedFunction(tmpthis[i]);\n        return arr;\n      }\n\n      // Otherwise run on the vector.\n      return curriedFunction(this[0]);\n    };\n  })(funcs[i]);\n})('quantiles percentileOfScore'.split(' '));\n\n}(jStat, Math));\n// Special functions //\n(function(jStat, Math) {\n\n// Log-gamma function\njStat.gammaln = function gammaln(x) {\n  var j = 0;\n  var cof = [\n    76.18009172947146, -86.50532032941677, 24.01409824083091,\n    -1.231739572450155, 0.1208650973866179e-2, -0.5395239384953e-5\n  ];\n  var ser = 1.000000000190015;\n  var xx, y, tmp;\n  tmp = (y = xx = x) + 5.5;\n  tmp -= (xx + 0.5) * Math.log(tmp);\n  for (; j < 6; j++)\n    ser += cof[j] / ++y;\n  return Math.log(2.5066282746310005 * ser / xx) - tmp;\n};\n\n/*\n * log-gamma function to support poisson distribution sampling. The\n * algorithm comes from SPECFUN by Shanjie Zhang and Jianming Jin and their\n * book \"Computation of Special Functions\", 1996, John Wiley & Sons, Inc.\n */\njStat.loggam = function loggam(x) {\n  var x0, x2, xp, gl, gl0;\n  var k, n;\n\n  var a = [8.333333333333333e-02, -2.777777777777778e-03,\n          7.936507936507937e-04, -5.952380952380952e-04,\n          8.417508417508418e-04, -1.917526917526918e-03,\n          6.410256410256410e-03, -2.955065359477124e-02,\n          1.796443723688307e-01, -1.39243221690590e+00];\n  x0 = x;\n  n = 0;\n  if ((x == 1.0) || (x == 2.0)) {\n      return 0.0;\n  }\n  if (x <= 7.0) {\n      n = Math.floor(7 - x);\n      x0 = x + n;\n  }\n  x2 = 1.0 / (x0 * x0);\n  xp = 2 * Math.PI;\n  gl0 = a[9];\n  for (k = 8; k >= 0; k--) {\n      gl0 *= x2;\n      gl0 += a[k];\n  }\n  gl = gl0 / x0 + 0.5 * Math.log(xp) + (x0 - 0.5) * Math.log(x0) - x0;\n  if (x <= 7.0) {\n      for (k = 1; k <= n; k++) {\n          gl -= Math.log(x0 - 1.0);\n          x0 -= 1.0;\n      }\n  }\n  return gl;\n}\n\n// gamma of x\njStat.gammafn = function gammafn(x) {\n  var p = [-1.716185138865495, 24.76565080557592, -379.80425647094563,\n           629.3311553128184, 866.9662027904133, -31451.272968848367,\n           -36144.413418691176, 66456.14382024054\n  ];\n  var q = [-30.8402300119739, 315.35062697960416, -1015.1563674902192,\n           -3107.771671572311, 22538.118420980151, 4755.8462775278811,\n           -134659.9598649693, -115132.2596755535];\n  var fact = false;\n  var n = 0;\n  var xden = 0;\n  var xnum = 0;\n  var y = x;\n  var i, z, yi, res;\n  if (x > 171.6243769536076) {\n    return Infinity;\n  }\n  if (y <= 0) {\n    res = y % 1 + 3.6e-16;\n    if (res) {\n      fact = (!(y & 1) ? 1 : -1) * Math.PI / Math.sin(Math.PI * res);\n      y = 1 - y;\n    } else {\n      return Infinity;\n    }\n  }\n  yi = y;\n  if (y < 1) {\n    z = y++;\n  } else {\n    z = (y -= n = (y | 0) - 1) - 1;\n  }\n  for (i = 0; i < 8; ++i) {\n    xnum = (xnum + p[i]) * z;\n    xden = xden * z + q[i];\n  }\n  res = xnum / xden + 1;\n  if (yi < y) {\n    res /= yi;\n  } else if (yi > y) {\n    for (i = 0; i < n; ++i) {\n      res *= y;\n      y++;\n    }\n  }\n  if (fact) {\n    res = fact / res;\n  }\n  return res;\n};\n\n\n// lower incomplete gamma function, which is usually typeset with a\n// lower-case greek gamma as the function symbol\njStat.gammap = function gammap(a, x) {\n  return jStat.lowRegGamma(a, x) * jStat.gammafn(a);\n};\n\n\n// The lower regularized incomplete gamma function, usually written P(a,x)\njStat.lowRegGamma = function lowRegGamma(a, x) {\n  var aln = jStat.gammaln(a);\n  var ap = a;\n  var sum = 1 / a;\n  var del = sum;\n  var b = x + 1 - a;\n  var c = 1 / 1.0e-30;\n  var d = 1 / b;\n  var h = d;\n  var i = 1;\n  // calculate maximum number of itterations required for a\n  var ITMAX = -~(Math.log((a >= 1) ? a : 1 / a) * 8.5 + a * 0.4 + 17);\n  var an;\n\n  if (x < 0 || a <= 0) {\n    return NaN;\n  } else if (x < a + 1) {\n    for (; i <= ITMAX; i++) {\n      sum += del *= x / ++ap;\n    }\n    return (sum * Math.exp(-x + a * Math.log(x) - (aln)));\n  }\n\n  for (; i <= ITMAX; i++) {\n    an = -i * (i - a);\n    b += 2;\n    d = an * d + b;\n    c = b + an / c;\n    d = 1 / d;\n    h *= d * c;\n  }\n\n  return (1 - h * Math.exp(-x + a * Math.log(x) - (aln)));\n};\n\n// natural log factorial of n\njStat.factorialln = function factorialln(n) {\n  return n < 0 ? NaN : jStat.gammaln(n + 1);\n};\n\n// factorial of n\njStat.factorial = function factorial(n) {\n  return n < 0 ? NaN : jStat.gammafn(n + 1);\n};\n\n// combinations of n, m\njStat.combination = function combination(n, m) {\n  // make sure n or m don't exceed the upper limit of usable values\n  return (n > 170 || m > 170)\n      ? Math.exp(jStat.combinationln(n, m))\n      : (jStat.factorial(n) / jStat.factorial(m)) / jStat.factorial(n - m);\n};\n\n\njStat.combinationln = function combinationln(n, m){\n  return jStat.factorialln(n) - jStat.factorialln(m) - jStat.factorialln(n - m);\n};\n\n\n// permutations of n, m\njStat.permutation = function permutation(n, m) {\n  return jStat.factorial(n) / jStat.factorial(n - m);\n};\n\n\n// beta function\njStat.betafn = function betafn(x, y) {\n  // ensure arguments are positive\n  if (x <= 0 || y <= 0)\n    return undefined;\n  // make sure x + y doesn't exceed the upper limit of usable values\n  return (x + y > 170)\n      ? Math.exp(jStat.betaln(x, y))\n      : jStat.gammafn(x) * jStat.gammafn(y) / jStat.gammafn(x + y);\n};\n\n\n// natural logarithm of beta function\njStat.betaln = function betaln(x, y) {\n  return jStat.gammaln(x) + jStat.gammaln(y) - jStat.gammaln(x + y);\n};\n\n\n// Evaluates the continued fraction for incomplete beta function by modified\n// Lentz's method.\njStat.betacf = function betacf(x, a, b) {\n  var fpmin = 1e-30;\n  var m = 1;\n  var qab = a + b;\n  var qap = a + 1;\n  var qam = a - 1;\n  var c = 1;\n  var d = 1 - qab * x / qap;\n  var m2, aa, del, h;\n\n  // These q's will be used in factors that occur in the coefficients\n  if (Math.abs(d) < fpmin)\n    d = fpmin;\n  d = 1 / d;\n  h = d;\n\n  for (; m <= 100; m++) {\n    m2 = 2 * m;\n    aa = m * (b - m) * x / ((qam + m2) * (a + m2));\n    // One step (the even one) of the recurrence\n    d = 1 + aa * d;\n    if (Math.abs(d) < fpmin)\n      d = fpmin;\n    c = 1 + aa / c;\n    if (Math.abs(c) < fpmin)\n      c = fpmin;\n    d = 1 / d;\n    h *= d * c;\n    aa = -(a + m) * (qab + m) * x / ((a + m2) * (qap + m2));\n    // Next step of the recurrence (the odd one)\n    d = 1 + aa * d;\n    if (Math.abs(d) < fpmin)\n      d = fpmin;\n    c = 1 + aa / c;\n    if (Math.abs(c) < fpmin)\n      c = fpmin;\n    d = 1 / d;\n    del = d * c;\n    h *= del;\n    if (Math.abs(del - 1.0) < 3e-7)\n      break;\n  }\n\n  return h;\n};\n\n\n// Returns the inverse of the lower regularized inomplete gamma function\njStat.gammapinv = function gammapinv(p, a) {\n  var j = 0;\n  var a1 = a - 1;\n  var EPS = 1e-8;\n  var gln = jStat.gammaln(a);\n  var x, err, t, u, pp, lna1, afac;\n\n  if (p >= 1)\n    return Math.max(100, a + 100 * Math.sqrt(a));\n  if (p <= 0)\n    return 0;\n  if (a > 1) {\n    lna1 = Math.log(a1);\n    afac = Math.exp(a1 * (lna1 - 1) - gln);\n    pp = (p < 0.5) ? p : 1 - p;\n    t = Math.sqrt(-2 * Math.log(pp));\n    x = (2.30753 + t * 0.27061) / (1 + t * (0.99229 + t * 0.04481)) - t;\n    if (p < 0.5)\n      x = -x;\n    x = Math.max(1e-3,\n                 a * Math.pow(1 - 1 / (9 * a) - x / (3 * Math.sqrt(a)), 3));\n  } else {\n    t = 1 - a * (0.253 + a * 0.12);\n    if (p < t)\n      x = Math.pow(p / t, 1 / a);\n    else\n      x = 1 - Math.log(1 - (p - t) / (1 - t));\n  }\n\n  for(; j < 12; j++) {\n    if (x <= 0)\n      return 0;\n    err = jStat.lowRegGamma(a, x) - p;\n    if (a > 1)\n      t = afac * Math.exp(-(x - a1) + a1 * (Math.log(x) - lna1));\n    else\n      t = Math.exp(-x + a1 * Math.log(x) - gln);\n    u = err / t;\n    x -= (t = u / (1 - 0.5 * Math.min(1, u * ((a - 1) / x - 1))));\n    if (x <= 0)\n      x = 0.5 * (x + t);\n    if (Math.abs(t) < EPS * x)\n      break;\n  }\n\n  return x;\n};\n\n\n// Returns the error function erf(x)\njStat.erf = function erf(x) {\n  var cof = [-1.3026537197817094, 6.4196979235649026e-1, 1.9476473204185836e-2,\n             -9.561514786808631e-3, -9.46595344482036e-4, 3.66839497852761e-4,\n             4.2523324806907e-5, -2.0278578112534e-5, -1.624290004647e-6,\n             1.303655835580e-6, 1.5626441722e-8, -8.5238095915e-8,\n             6.529054439e-9, 5.059343495e-9, -9.91364156e-10,\n             -2.27365122e-10, 9.6467911e-11, 2.394038e-12,\n             -6.886027e-12, 8.94487e-13, 3.13092e-13,\n             -1.12708e-13, 3.81e-16, 7.106e-15,\n             -1.523e-15, -9.4e-17, 1.21e-16,\n             -2.8e-17];\n  var j = cof.length - 1;\n  var isneg = false;\n  var d = 0;\n  var dd = 0;\n  var t, ty, tmp, res;\n\n  if (x < 0) {\n    x = -x;\n    isneg = true;\n  }\n\n  t = 2 / (2 + x);\n  ty = 4 * t - 2;\n\n  for(; j > 0; j--) {\n    tmp = d;\n    d = ty * d - dd + cof[j];\n    dd = tmp;\n  }\n\n  res = t * Math.exp(-x * x + 0.5 * (cof[0] + ty * d) - dd);\n  return isneg ? res - 1 : 1 - res;\n};\n\n\n// Returns the complmentary error function erfc(x)\njStat.erfc = function erfc(x) {\n  return 1 - jStat.erf(x);\n};\n\n\n// Returns the inverse of the complementary error function\njStat.erfcinv = function erfcinv(p) {\n  var j = 0;\n  var x, err, t, pp;\n  if (p >= 2)\n    return -100;\n  if (p <= 0)\n    return 100;\n  pp = (p < 1) ? p : 2 - p;\n  t = Math.sqrt(-2 * Math.log(pp / 2));\n  x = -0.70711 * ((2.30753 + t * 0.27061) /\n                  (1 + t * (0.99229 + t * 0.04481)) - t);\n  for (; j < 2; j++) {\n    err = jStat.erfc(x) - pp;\n    x += err / (1.12837916709551257 * Math.exp(-x * x) - x * err);\n  }\n  return (p < 1) ? x : -x;\n};\n\n\n// Returns the inverse of the incomplete beta function\njStat.ibetainv = function ibetainv(p, a, b) {\n  var EPS = 1e-8;\n  var a1 = a - 1;\n  var b1 = b - 1;\n  var j = 0;\n  var lna, lnb, pp, t, u, err, x, al, h, w, afac;\n  if (p <= 0)\n    return 0;\n  if (p >= 1)\n    return 1;\n  if (a >= 1 && b >= 1) {\n    pp = (p < 0.5) ? p : 1 - p;\n    t = Math.sqrt(-2 * Math.log(pp));\n    x = (2.30753 + t * 0.27061) / (1 + t* (0.99229 + t * 0.04481)) - t;\n    if (p < 0.5)\n      x = -x;\n    al = (x * x - 3) / 6;\n    h = 2 / (1 / (2 * a - 1)  + 1 / (2 * b - 1));\n    w = (x * Math.sqrt(al + h) / h) - (1 / (2 * b - 1) - 1 / (2 * a - 1)) *\n        (al + 5 / 6 - 2 / (3 * h));\n    x = a / (a + b * Math.exp(2 * w));\n  } else {\n    lna = Math.log(a / (a + b));\n    lnb = Math.log(b / (a + b));\n    t = Math.exp(a * lna) / a;\n    u = Math.exp(b * lnb) / b;\n    w = t + u;\n    if (p < t / w)\n      x = Math.pow(a * w * p, 1 / a);\n    else\n      x = 1 - Math.pow(b * w * (1 - p), 1 / b);\n  }\n  afac = -jStat.gammaln(a) - jStat.gammaln(b) + jStat.gammaln(a + b);\n  for(; j < 10; j++) {\n    if (x === 0 || x === 1)\n      return x;\n    err = jStat.ibeta(x, a, b) - p;\n    t = Math.exp(a1 * Math.log(x) + b1 * Math.log(1 - x) + afac);\n    u = err / t;\n    x -= (t = u / (1 - 0.5 * Math.min(1, u * (a1 / x - b1 / (1 - x)))));\n    if (x <= 0)\n      x = 0.5 * (x + t);\n    if (x >= 1)\n      x = 0.5 * (x + t + 1);\n    if (Math.abs(t) < EPS * x && j > 0)\n      break;\n  }\n  return x;\n};\n\n\n// Returns the incomplete beta function I_x(a,b)\njStat.ibeta = function ibeta(x, a, b) {\n  // Factors in front of the continued fraction.\n  var bt = (x === 0 || x === 1) ?  0 :\n    Math.exp(jStat.gammaln(a + b) - jStat.gammaln(a) -\n             jStat.gammaln(b) + a * Math.log(x) + b *\n             Math.log(1 - x));\n  if (x < 0 || x > 1)\n    return false;\n  if (x < (a + 1) / (a + b + 2))\n    // Use continued fraction directly.\n    return bt * jStat.betacf(x, a, b) / a;\n  // else use continued fraction after making the symmetry transformation.\n  return 1 - bt * jStat.betacf(1 - x, b, a) / b;\n};\n\n\n// Returns a normal deviate (mu=0, sigma=1).\n// If n and m are specified it returns a object of normal deviates.\njStat.randn = function randn(n, m) {\n  var u, v, x, y, q;\n  if (!m)\n    m = n;\n  if (n)\n    return jStat.create(n, m, function() { return jStat.randn(); });\n  do {\n    u = jStat._random_fn();\n    v = 1.7156 * (jStat._random_fn() - 0.5);\n    x = u - 0.449871;\n    y = Math.abs(v) + 0.386595;\n    q = x * x + y * (0.19600 * y - 0.25472 * x);\n  } while (q > 0.27597 && (q > 0.27846 || v * v > -4 * Math.log(u) * u * u));\n  return v / u;\n};\n\n\n// Returns a gamma deviate by the method of Marsaglia and Tsang.\njStat.randg = function randg(shape, n, m) {\n  var oalph = shape;\n  var a1, a2, u, v, x, mat;\n  if (!m)\n    m = n;\n  if (!shape)\n    shape = 1;\n  if (n) {\n    mat = jStat.zeros(n,m);\n    mat.alter(function() { return jStat.randg(shape); });\n    return mat;\n  }\n  if (shape < 1)\n    shape += 1;\n  a1 = shape - 1 / 3;\n  a2 = 1 / Math.sqrt(9 * a1);\n  do {\n    do {\n      x = jStat.randn();\n      v = 1 + a2 * x;\n    } while(v <= 0);\n    v = v * v * v;\n    u = jStat._random_fn();\n  } while(u > 1 - 0.331 * Math.pow(x, 4) &&\n          Math.log(u) > 0.5 * x*x + a1 * (1 - v + Math.log(v)));\n  // alpha > 1\n  if (shape == oalph)\n    return a1 * v;\n  // alpha < 1\n  do {\n    u = jStat._random_fn();\n  } while(u === 0);\n  return Math.pow(u, 1 / oalph) * a1 * v;\n};\n\n\n// making use of static methods on the instance\n(function(funcs) {\n  for (var i = 0; i < funcs.length; i++) (function(passfunc) {\n    jStat.fn[passfunc] = function() {\n      return jStat(\n          jStat.map(this, function(value) { return jStat[passfunc](value); }));\n    }\n  })(funcs[i]);\n})('gammaln gammafn factorial factorialln'.split(' '));\n\n\n(function(funcs) {\n  for (var i = 0; i < funcs.length; i++) (function(passfunc) {\n    jStat.fn[passfunc] = function() {\n      return jStat(jStat[passfunc].apply(null, arguments));\n    };\n  })(funcs[i]);\n})('randn'.split(' '));\n\n}(jStat, Math));\n(function(jStat, Math) {\n\n// generate all distribution instance methods\n(function(list) {\n  for (var i = 0; i < list.length; i++) (function(func) {\n    // distribution instance method\n    jStat[func] = function f(a, b, c) {\n      if (!(this instanceof f))\n        return new f(a, b, c);\n      this._a = a;\n      this._b = b;\n      this._c = c;\n      return this;\n    };\n    // distribution method to be used on a jStat instance\n    jStat.fn[func] = function(a, b, c) {\n      var newthis = jStat[func](a, b, c);\n      newthis.data = this;\n      return newthis;\n    };\n    // sample instance method\n    jStat[func].prototype.sample = function(arr) {\n      var a = this._a;\n      var b = this._b;\n      var c = this._c;\n      if (arr)\n        return jStat.alter(arr, function() {\n          return jStat[func].sample(a, b, c);\n        });\n      else\n        return jStat[func].sample(a, b, c);\n    };\n    // generate the pdf, cdf and inv instance methods\n    (function(vals) {\n      for (var i = 0; i < vals.length; i++) (function(fnfunc) {\n        jStat[func].prototype[fnfunc] = function(x) {\n          var a = this._a;\n          var b = this._b;\n          var c = this._c;\n          if (!x && x !== 0)\n            x = this.data;\n          if (typeof x !== 'number') {\n            return jStat.fn.map.call(x, function(x) {\n              return jStat[func][fnfunc](x, a, b, c);\n            });\n          }\n          return jStat[func][fnfunc](x, a, b, c);\n        };\n      })(vals[i]);\n    })('pdf cdf inv'.split(' '));\n    // generate the mean, median, mode and variance instance methods\n    (function(vals) {\n      for (var i = 0; i < vals.length; i++) (function(fnfunc) {\n        jStat[func].prototype[fnfunc] = function() {\n          return jStat[func][fnfunc](this._a, this._b, this._c);\n        };\n      })(vals[i]);\n    })('mean median mode variance'.split(' '));\n  })(list[i]);\n})((\n  'beta centralF cauchy chisquare exponential gamma invgamma kumaraswamy ' +\n  'laplace lognormal noncentralt normal pareto studentt weibull uniform ' +\n  'binomial negbin hypgeom poisson triangular tukey arcsine'\n).split(' '));\n\n\n\n// extend beta function with static methods\njStat.extend(jStat.beta, {\n  pdf: function pdf(x, alpha, beta) {\n    // PDF is zero outside the support\n    if (x > 1 || x < 0)\n      return 0;\n    // PDF is one for the uniform case\n    if (alpha == 1 && beta == 1)\n      return 1;\n\n    if (alpha < 512 && beta < 512) {\n      return (Math.pow(x, alpha - 1) * Math.pow(1 - x, beta - 1)) /\n          jStat.betafn(alpha, beta);\n    } else {\n      return Math.exp((alpha - 1) * Math.log(x) +\n                      (beta - 1) * Math.log(1 - x) -\n                      jStat.betaln(alpha, beta));\n    }\n  },\n\n  cdf: function cdf(x, alpha, beta) {\n    return (x > 1 || x < 0) ? (x > 1) * 1 : jStat.ibeta(x, alpha, beta);\n  },\n\n  inv: function inv(x, alpha, beta) {\n    return jStat.ibetainv(x, alpha, beta);\n  },\n\n  mean: function mean(alpha, beta) {\n    return alpha / (alpha + beta);\n  },\n\n  median: function median(alpha, beta) {\n    return jStat.ibetainv(0.5, alpha, beta);\n  },\n\n  mode: function mode(alpha, beta) {\n    return (alpha - 1 ) / ( alpha + beta - 2);\n  },\n\n  // return a random sample\n  sample: function sample(alpha, beta) {\n    var u = jStat.randg(alpha);\n    return u / (u + jStat.randg(beta));\n  },\n\n  variance: function variance(alpha, beta) {\n    return (alpha * beta) / (Math.pow(alpha + beta, 2) * (alpha + beta + 1));\n  }\n});\n\n// extend F function with static methods\njStat.extend(jStat.centralF, {\n  // This implementation of the pdf function avoids float overflow\n  // See the way that R calculates this value:\n  // https://svn.r-project.org/R/trunk/src/nmath/df.c\n  pdf: function pdf(x, df1, df2) {\n    var p, q, f;\n\n    if (x < 0)\n      return 0;\n\n    if (df1 <= 2) {\n      if (x === 0 && df1 < 2) {\n        return Infinity;\n      }\n      if (x === 0 && df1 === 2) {\n        return 1;\n      }\n      return (1 / jStat.betafn(df1 / 2, df2 / 2)) *\n              Math.pow(df1 / df2, df1 / 2) *\n              Math.pow(x, (df1/2) - 1) *\n              Math.pow((1 + (df1 / df2) * x), -(df1 + df2) / 2);\n    }\n\n    p = (df1 * x) / (df2 + x * df1);\n    q = df2 / (df2 + x * df1);\n    f = df1 * q / 2.0;\n    return f * jStat.binomial.pdf((df1 - 2) / 2, (df1 + df2 - 2) / 2, p);\n  },\n\n  cdf: function cdf(x, df1, df2) {\n    if (x < 0)\n      return 0;\n    return jStat.ibeta((df1 * x) / (df1 * x + df2), df1 / 2, df2 / 2);\n  },\n\n  inv: function inv(x, df1, df2) {\n    return df2 / (df1 * (1 / jStat.ibetainv(x, df1 / 2, df2 / 2) - 1));\n  },\n\n  mean: function mean(df1, df2) {\n    return (df2 > 2) ? df2 / (df2 - 2) : undefined;\n  },\n\n  mode: function mode(df1, df2) {\n    return (df1 > 2) ? (df2 * (df1 - 2)) / (df1 * (df2 + 2)) : undefined;\n  },\n\n  // return a random sample\n  sample: function sample(df1, df2) {\n    var x1 = jStat.randg(df1 / 2) * 2;\n    var x2 = jStat.randg(df2 / 2) * 2;\n    return (x1 / df1) / (x2 / df2);\n  },\n\n  variance: function variance(df1, df2) {\n    if (df2 <= 4)\n      return undefined;\n    return 2 * df2 * df2 * (df1 + df2 - 2) /\n        (df1 * (df2 - 2) * (df2 - 2) * (df2 - 4));\n  }\n});\n\n\n// extend cauchy function with static methods\njStat.extend(jStat.cauchy, {\n  pdf: function pdf(x, local, scale) {\n    if (scale < 0) { return 0; }\n\n    return (scale / (Math.pow(x - local, 2) + Math.pow(scale, 2))) / Math.PI;\n  },\n\n  cdf: function cdf(x, local, scale) {\n    return Math.atan((x - local) / scale) / Math.PI + 0.5;\n  },\n\n  inv: function(p, local, scale) {\n    return local + scale * Math.tan(Math.PI * (p - 0.5));\n  },\n\n  median: function median(local/*, scale*/) {\n    return local;\n  },\n\n  mode: function mode(local/*, scale*/) {\n    return local;\n  },\n\n  sample: function sample(local, scale) {\n    return jStat.randn() *\n        Math.sqrt(1 / (2 * jStat.randg(0.5))) * scale + local;\n  }\n});\n\n\n\n// extend chisquare function with static methods\njStat.extend(jStat.chisquare, {\n  pdf: function pdf(x, dof) {\n    if (x < 0)\n      return 0;\n    return (x === 0 && dof === 2) ? 0.5 :\n        Math.exp((dof / 2 - 1) * Math.log(x) - x / 2 - (dof / 2) *\n                 Math.log(2) - jStat.gammaln(dof / 2));\n  },\n\n  cdf: function cdf(x, dof) {\n    if (x < 0)\n      return 0;\n    return jStat.lowRegGamma(dof / 2, x / 2);\n  },\n\n  inv: function(p, dof) {\n    return 2 * jStat.gammapinv(p, 0.5 * dof);\n  },\n\n  mean : function(dof) {\n    return dof;\n  },\n\n  // TODO: this is an approximation (is there a better way?)\n  median: function median(dof) {\n    return dof * Math.pow(1 - (2 / (9 * dof)), 3);\n  },\n\n  mode: function mode(dof) {\n    return (dof - 2 > 0) ? dof - 2 : 0;\n  },\n\n  sample: function sample(dof) {\n    return jStat.randg(dof / 2) * 2;\n  },\n\n  variance: function variance(dof) {\n    return 2 * dof;\n  }\n});\n\n\n\n// extend exponential function with static methods\njStat.extend(jStat.exponential, {\n  pdf: function pdf(x, rate) {\n    return x < 0 ? 0 : rate * Math.exp(-rate * x);\n  },\n\n  cdf: function cdf(x, rate) {\n    return x < 0 ? 0 : 1 - Math.exp(-rate * x);\n  },\n\n  inv: function(p, rate) {\n    return -Math.log(1 - p) / rate;\n  },\n\n  mean : function(rate) {\n    return 1 / rate;\n  },\n\n  median: function (rate) {\n    return (1 / rate) * Math.log(2);\n  },\n\n  mode: function mode(/*rate*/) {\n    return 0;\n  },\n\n  sample: function sample(rate) {\n    return -1 / rate * Math.log(jStat._random_fn());\n  },\n\n  variance : function(rate) {\n    return Math.pow(rate, -2);\n  }\n});\n\n\n\n// extend gamma function with static methods\njStat.extend(jStat.gamma, {\n  pdf: function pdf(x, shape, scale) {\n    if (x < 0)\n      return 0;\n    return (x === 0 && shape === 1) ? 1 / scale :\n            Math.exp((shape - 1) * Math.log(x) - x / scale -\n                    jStat.gammaln(shape) - shape * Math.log(scale));\n  },\n\n  cdf: function cdf(x, shape, scale) {\n    if (x < 0)\n      return 0;\n    return jStat.lowRegGamma(shape, x / scale);\n  },\n\n  inv: function(p, shape, scale) {\n    return jStat.gammapinv(p, shape) * scale;\n  },\n\n  mean : function(shape, scale) {\n    return shape * scale;\n  },\n\n  mode: function mode(shape, scale) {\n    if(shape > 1) return (shape - 1) * scale;\n    return undefined;\n  },\n\n  sample: function sample(shape, scale) {\n    return jStat.randg(shape) * scale;\n  },\n\n  variance: function variance(shape, scale) {\n    return shape * scale * scale;\n  }\n});\n\n// extend inverse gamma function with static methods\njStat.extend(jStat.invgamma, {\n  pdf: function pdf(x, shape, scale) {\n    if (x <= 0)\n      return 0;\n    return Math.exp(-(shape + 1) * Math.log(x) - scale / x -\n                    jStat.gammaln(shape) + shape * Math.log(scale));\n  },\n\n  cdf: function cdf(x, shape, scale) {\n    if (x <= 0)\n      return 0;\n    return 1 - jStat.lowRegGamma(shape, scale / x);\n  },\n\n  inv: function(p, shape, scale) {\n    return scale / jStat.gammapinv(1 - p, shape);\n  },\n\n  mean : function(shape, scale) {\n    return (shape > 1) ? scale / (shape - 1) : undefined;\n  },\n\n  mode: function mode(shape, scale) {\n    return scale / (shape + 1);\n  },\n\n  sample: function sample(shape, scale) {\n    return scale / jStat.randg(shape);\n  },\n\n  variance: function variance(shape, scale) {\n    if (shape <= 2)\n      return undefined;\n    return scale * scale / ((shape - 1) * (shape - 1) * (shape - 2));\n  }\n});\n\n\n// extend kumaraswamy function with static methods\njStat.extend(jStat.kumaraswamy, {\n  pdf: function pdf(x, alpha, beta) {\n    if (x === 0 && alpha === 1)\n      return beta;\n    else if (x === 1 && beta === 1)\n      return alpha;\n    return Math.exp(Math.log(alpha) + Math.log(beta) + (alpha - 1) *\n                    Math.log(x) + (beta - 1) *\n                    Math.log(1 - Math.pow(x, alpha)));\n  },\n\n  cdf: function cdf(x, alpha, beta) {\n    if (x < 0)\n      return 0;\n    else if (x > 1)\n      return 1;\n    return (1 - Math.pow(1 - Math.pow(x, alpha), beta));\n  },\n\n  inv: function inv(p, alpha, beta) {\n    return Math.pow(1 - Math.pow(1 - p, 1 / beta), 1 / alpha);\n  },\n\n  mean : function(alpha, beta) {\n    return (beta * jStat.gammafn(1 + 1 / alpha) *\n            jStat.gammafn(beta)) / (jStat.gammafn(1 + 1 / alpha + beta));\n  },\n\n  median: function median(alpha, beta) {\n    return Math.pow(1 - Math.pow(2, -1 / beta), 1 / alpha);\n  },\n\n  mode: function mode(alpha, beta) {\n    if (!(alpha >= 1 && beta >= 1 && (alpha !== 1 && beta !== 1)))\n      return undefined;\n    return Math.pow((alpha - 1) / (alpha * beta - 1), 1 / alpha);\n  },\n\n  variance: function variance(/*alpha, beta*/) {\n    throw new Error('variance not yet implemented');\n    // TODO: complete this\n  }\n});\n\n\n\n// extend lognormal function with static methods\njStat.extend(jStat.lognormal, {\n  pdf: function pdf(x, mu, sigma) {\n    if (x <= 0)\n      return 0;\n    return Math.exp(-Math.log(x) - 0.5 * Math.log(2 * Math.PI) -\n                    Math.log(sigma) - Math.pow(Math.log(x) - mu, 2) /\n                    (2 * sigma * sigma));\n  },\n\n  cdf: function cdf(x, mu, sigma) {\n    if (x < 0)\n      return 0;\n    return 0.5 +\n        (0.5 * jStat.erf((Math.log(x) - mu) / Math.sqrt(2 * sigma * sigma)));\n  },\n\n  inv: function(p, mu, sigma) {\n    return Math.exp(-1.41421356237309505 * sigma * jStat.erfcinv(2 * p) + mu);\n  },\n\n  mean: function mean(mu, sigma) {\n    return Math.exp(mu + sigma * sigma / 2);\n  },\n\n  median: function median(mu/*, sigma*/) {\n    return Math.exp(mu);\n  },\n\n  mode: function mode(mu, sigma) {\n    return Math.exp(mu - sigma * sigma);\n  },\n\n  sample: function sample(mu, sigma) {\n    return Math.exp(jStat.randn() * sigma + mu);\n  },\n\n  variance: function variance(mu, sigma) {\n    return (Math.exp(sigma * sigma) - 1) * Math.exp(2 * mu + sigma * sigma);\n  }\n});\n\n\n\n// extend noncentralt function with static methods\njStat.extend(jStat.noncentralt, {\n  pdf: function pdf(x, dof, ncp) {\n    var tol = 1e-14;\n    if (Math.abs(ncp) < tol)  // ncp approx 0; use student-t\n      return jStat.studentt.pdf(x, dof)\n\n    if (Math.abs(x) < tol) {  // different formula for x == 0\n      return Math.exp(jStat.gammaln((dof + 1) / 2) - ncp * ncp / 2 -\n                      0.5 * Math.log(Math.PI * dof) - jStat.gammaln(dof / 2));\n    }\n\n    // formula for x != 0\n    return dof / x *\n        (jStat.noncentralt.cdf(x * Math.sqrt(1 + 2 / dof), dof+2, ncp) -\n         jStat.noncentralt.cdf(x, dof, ncp));\n  },\n\n  cdf: function cdf(x, dof, ncp) {\n    var tol = 1e-14;\n    var min_iterations = 200;\n\n    if (Math.abs(ncp) < tol)  // ncp approx 0; use student-t\n      return jStat.studentt.cdf(x, dof);\n\n    // turn negative x into positive and flip result afterwards\n    var flip = false;\n    if (x < 0) {\n      flip = true;\n      ncp = -ncp;\n    }\n\n    var prob = jStat.normal.cdf(-ncp, 0, 1);\n    var value = tol + 1;\n    // use value at last two steps to determine convergence\n    var lastvalue = value;\n    var y = x * x / (x * x + dof);\n    var j = 0;\n    var p = Math.exp(-ncp * ncp / 2);\n    var q = Math.exp(-ncp * ncp / 2 - 0.5 * Math.log(2) -\n                     jStat.gammaln(3 / 2)) * ncp;\n    while (j < min_iterations || lastvalue > tol || value > tol) {\n      lastvalue = value;\n      if (j > 0) {\n        p *= (ncp * ncp) / (2 * j);\n        q *= (ncp * ncp) / (2 * (j + 1 / 2));\n      }\n      value = p * jStat.beta.cdf(y, j + 0.5, dof / 2) +\n          q * jStat.beta.cdf(y, j+1, dof/2);\n      prob += 0.5 * value;\n      j++;\n    }\n\n    return flip ? (1 - prob) : prob;\n  }\n});\n\n\n// extend normal function with static methods\njStat.extend(jStat.normal, {\n  pdf: function pdf(x, mean, std) {\n    return Math.exp(-0.5 * Math.log(2 * Math.PI) -\n                    Math.log(std) - Math.pow(x - mean, 2) / (2 * std * std));\n  },\n\n  cdf: function cdf(x, mean, std) {\n    return 0.5 * (1 + jStat.erf((x - mean) / Math.sqrt(2 * std * std)));\n  },\n\n  inv: function(p, mean, std) {\n    return -1.41421356237309505 * std * jStat.erfcinv(2 * p) + mean;\n  },\n\n  mean : function(mean/*, std*/) {\n    return mean;\n  },\n\n  median: function median(mean/*, std*/) {\n    return mean;\n  },\n\n  mode: function (mean/*, std*/) {\n    return mean;\n  },\n\n  sample: function sample(mean, std) {\n    return jStat.randn() * std + mean;\n  },\n\n  variance : function(mean, std) {\n    return std * std;\n  }\n});\n\n\n\n// extend pareto function with static methods\njStat.extend(jStat.pareto, {\n  pdf: function pdf(x, scale, shape) {\n    if (x < scale)\n      return 0;\n    return (shape * Math.pow(scale, shape)) / Math.pow(x, shape + 1);\n  },\n\n  cdf: function cdf(x, scale, shape) {\n    if (x < scale)\n      return 0;\n    return 1 - Math.pow(scale / x, shape);\n  },\n\n  inv: function inv(p, scale, shape) {\n    return scale / Math.pow(1 - p, 1 / shape);\n  },\n\n  mean: function mean(scale, shape) {\n    if (shape <= 1)\n      return undefined;\n    return (shape * Math.pow(scale, shape)) / (shape - 1);\n  },\n\n  median: function median(scale, shape) {\n    return scale * (shape * Math.SQRT2);\n  },\n\n  mode: function mode(scale/*, shape*/) {\n    return scale;\n  },\n\n  variance : function(scale, shape) {\n    if (shape <= 2)\n      return undefined;\n    return (scale*scale * shape) / (Math.pow(shape - 1, 2) * (shape - 2));\n  }\n});\n\n\n\n// extend studentt function with static methods\njStat.extend(jStat.studentt, {\n  pdf: function pdf(x, dof) {\n    dof = dof > 1e100 ? 1e100 : dof;\n    return (1/(Math.sqrt(dof) * jStat.betafn(0.5, dof/2))) *\n        Math.pow(1 + ((x * x) / dof), -((dof + 1) / 2));\n  },\n\n  cdf: function cdf(x, dof) {\n    var dof2 = dof / 2;\n    return jStat.ibeta((x + Math.sqrt(x * x + dof)) /\n                       (2 * Math.sqrt(x * x + dof)), dof2, dof2);\n  },\n\n  inv: function(p, dof) {\n    var x = jStat.ibetainv(2 * Math.min(p, 1 - p), 0.5 * dof, 0.5);\n    x = Math.sqrt(dof * (1 - x) / x);\n    return (p > 0.5) ? x : -x;\n  },\n\n  mean: function mean(dof) {\n    return (dof > 1) ? 0 : undefined;\n  },\n\n  median: function median(/*dof*/) {\n    return 0;\n  },\n\n  mode: function mode(/*dof*/) {\n    return 0;\n  },\n\n  sample: function sample(dof) {\n    return jStat.randn() * Math.sqrt(dof / (2 * jStat.randg(dof / 2)));\n  },\n\n  variance: function variance(dof) {\n    return (dof  > 2) ? dof / (dof - 2) : (dof > 1) ? Infinity : undefined;\n  }\n});\n\n\n\n// extend weibull function with static methods\njStat.extend(jStat.weibull, {\n  pdf: function pdf(x, scale, shape) {\n    if (x < 0 || scale < 0 || shape < 0)\n      return 0;\n    return (shape / scale) * Math.pow((x / scale), (shape - 1)) *\n        Math.exp(-(Math.pow((x / scale), shape)));\n  },\n\n  cdf: function cdf(x, scale, shape) {\n    return x < 0 ? 0 : 1 - Math.exp(-Math.pow((x / scale), shape));\n  },\n\n  inv: function(p, scale, shape) {\n    return scale * Math.pow(-Math.log(1 - p), 1 / shape);\n  },\n\n  mean : function(scale, shape) {\n    return scale * jStat.gammafn(1 + 1 / shape);\n  },\n\n  median: function median(scale, shape) {\n    return scale * Math.pow(Math.log(2), 1 / shape);\n  },\n\n  mode: function mode(scale, shape) {\n    if (shape <= 1)\n      return 0;\n    return scale * Math.pow((shape - 1) / shape, 1 / shape);\n  },\n\n  sample: function sample(scale, shape) {\n    return scale * Math.pow(-Math.log(jStat._random_fn()), 1 / shape);\n  },\n\n  variance: function variance(scale, shape) {\n    return scale * scale * jStat.gammafn(1 + 2 / shape) -\n        Math.pow(jStat.weibull.mean(scale, shape), 2);\n  }\n});\n\n\n\n// extend uniform function with static methods\njStat.extend(jStat.uniform, {\n  pdf: function pdf(x, a, b) {\n    return (x < a || x > b) ? 0 : 1 / (b - a);\n  },\n\n  cdf: function cdf(x, a, b) {\n    if (x < a)\n      return 0;\n    else if (x < b)\n      return (x - a) / (b - a);\n    return 1;\n  },\n\n  inv: function(p, a, b) {\n    return a + (p * (b - a));\n  },\n\n  mean: function mean(a, b) {\n    return 0.5 * (a + b);\n  },\n\n  median: function median(a, b) {\n    return jStat.mean(a, b);\n  },\n\n  mode: function mode(/*a, b*/) {\n    throw new Error('mode is not yet implemented');\n  },\n\n  sample: function sample(a, b) {\n    return (a / 2 + b / 2) + (b / 2 - a / 2) * (2 * jStat._random_fn() - 1);\n  },\n\n  variance: function variance(a, b) {\n    return Math.pow(b - a, 2) / 12;\n  }\n});\n\n\n// Got this from http://www.math.ucla.edu/~tom/distributions/binomial.html\nfunction betinc(x, a, b, eps) {\n  var a0 = 0;\n  var b0 = 1;\n  var a1 = 1;\n  var b1 = 1;\n  var m9 = 0;\n  var a2 = 0;\n  var c9;\n\n  while (Math.abs((a1 - a2) / a1) > eps) {\n    a2 = a1;\n    c9 = -(a + m9) * (a + b + m9) * x / (a + 2 * m9) / (a + 2 * m9 + 1);\n    a0 = a1 + c9 * a0;\n    b0 = b1 + c9 * b0;\n    m9 = m9 + 1;\n    c9 = m9 * (b - m9) * x / (a + 2 * m9 - 1) / (a + 2 * m9);\n    a1 = a0 + c9 * a1;\n    b1 = b0 + c9 * b1;\n    a0 = a0 / b1;\n    b0 = b0 / b1;\n    a1 = a1 / b1;\n    b1 = 1;\n  }\n\n  return a1 / a;\n}\n\n\n// extend uniform function with static methods\njStat.extend(jStat.binomial, {\n  pdf: function pdf(k, n, p) {\n    return (p === 0 || p === 1) ?\n      ((n * p) === k ? 1 : 0) :\n      jStat.combination(n, k) * Math.pow(p, k) * Math.pow(1 - p, n - k);\n  },\n\n  cdf: function cdf(x, n, p) {\n    var betacdf;\n    var eps = 1e-10;\n\n    if (x < 0)\n      return 0;\n    if (x >= n)\n      return 1;\n    if (p < 0 || p > 1 || n <= 0)\n      return NaN;\n\n    x = Math.floor(x);\n    var z = p;\n    var a = x + 1;\n    var b = n - x;\n    var s = a + b;\n    var bt = Math.exp(jStat.gammaln(s) - jStat.gammaln(b) -\n                      jStat.gammaln(a) + a * Math.log(z) + b * Math.log(1 - z));\n\n    if (z < (a + 1) / (s + 2))\n      betacdf = bt * betinc(z, a, b, eps);\n    else\n      betacdf = 1 - bt * betinc(1 - z, b, a, eps);\n\n    return Math.round((1 - betacdf) * (1 / eps)) / (1 / eps);\n  }\n});\n\n\n\n// extend uniform function with static methods\njStat.extend(jStat.negbin, {\n  pdf: function pdf(k, r, p) {\n    if (k !== k >>> 0)\n      return false;\n    if (k < 0)\n      return 0;\n    return jStat.combination(k + r - 1, r - 1) *\n        Math.pow(1 - p, k) * Math.pow(p, r);\n  },\n\n  cdf: function cdf(x, r, p) {\n    var sum = 0,\n    k = 0;\n    if (x < 0) return 0;\n    for (; k <= x; k++) {\n      sum += jStat.negbin.pdf(k, r, p);\n    }\n    return sum;\n  }\n});\n\n\n\n// extend uniform function with static methods\njStat.extend(jStat.hypgeom, {\n  pdf: function pdf(k, N, m, n) {\n    // Hypergeometric PDF.\n\n    // A simplification of the CDF algorithm below.\n\n    // k = number of successes drawn\n    // N = population size\n    // m = number of successes in population\n    // n = number of items drawn from population\n\n    if(k !== k | 0) {\n      return false;\n    } else if(k < 0 || k < m - (N - n)) {\n      // It's impossible to have this few successes drawn.\n      return 0;\n    } else if(k > n || k > m) {\n      // It's impossible to have this many successes drawn.\n      return 0;\n    } else if (m * 2 > N) {\n      // More than half the population is successes.\n\n      if(n * 2 > N) {\n        // More than half the population is sampled.\n\n        return jStat.hypgeom.pdf(N - m - n + k, N, N - m, N - n)\n      } else {\n        // Half or less of the population is sampled.\n\n        return jStat.hypgeom.pdf(n - k, N, N - m, n);\n      }\n\n    } else if(n * 2 > N) {\n      // Half or less is successes.\n\n      return jStat.hypgeom.pdf(m - k, N, m, N - n);\n\n    } else if(m < n) {\n      // We want to have the number of things sampled to be less than the\n      // successes available. So swap the definitions of successful and sampled.\n      return jStat.hypgeom.pdf(k, N, n, m);\n    } else {\n      // If we get here, half or less of the population was sampled, half or\n      // less of it was successes, and we had fewer sampled things than\n      // successes. Now we can do this complicated iterative algorithm in an\n      // efficient way.\n\n      // The basic premise of the algorithm is that we partially normalize our\n      // intermediate product to keep it in a numerically good region, and then\n      // finish the normalization at the end.\n\n      // This variable holds the scaled probability of the current number of\n      // successes.\n      var scaledPDF = 1;\n\n      // This keeps track of how much we have normalized.\n      var samplesDone = 0;\n\n      for(var i = 0; i < k; i++) {\n        // For every possible number of successes up to that observed...\n\n        while(scaledPDF > 1 && samplesDone < n) {\n          // Intermediate result is growing too big. Apply some of the\n          // normalization to shrink everything.\n\n          scaledPDF *= 1 - (m / (N - samplesDone));\n\n          // Say we've normalized by this sample already.\n          samplesDone++;\n        }\n\n        // Work out the partially-normalized hypergeometric PDF for the next\n        // number of successes\n        scaledPDF *= (n - i) * (m - i) / ((i + 1) * (N - m - n + i + 1));\n      }\n\n      for(; samplesDone < n; samplesDone++) {\n        // Apply all the rest of the normalization\n        scaledPDF *= 1 - (m / (N - samplesDone));\n      }\n\n      // Bound answer sanely before returning.\n      return Math.min(1, Math.max(0, scaledPDF));\n    }\n  },\n\n  cdf: function cdf(x, N, m, n) {\n    // Hypergeometric CDF.\n\n    // This algorithm is due to Prof. Thomas S. Ferguson, <tom@math.ucla.edu>,\n    // and comes from his hypergeometric test calculator at\n    // <http://www.math.ucla.edu/~tom/distributions/Hypergeometric.html>.\n\n    // x = number of successes drawn\n    // N = population size\n    // m = number of successes in population\n    // n = number of items drawn from population\n\n    if(x < 0 || x < m - (N - n)) {\n      // It's impossible to have this few successes drawn or fewer.\n      return 0;\n    } else if(x >= n || x >= m) {\n      // We will always have this many successes or fewer.\n      return 1;\n    } else if (m * 2 > N) {\n      // More than half the population is successes.\n\n      if(n * 2 > N) {\n        // More than half the population is sampled.\n\n        return jStat.hypgeom.cdf(N - m - n + x, N, N - m, N - n)\n      } else {\n        // Half or less of the population is sampled.\n\n        return 1 - jStat.hypgeom.cdf(n - x - 1, N, N - m, n);\n      }\n\n    } else if(n * 2 > N) {\n      // Half or less is successes.\n\n      return 1 - jStat.hypgeom.cdf(m - x - 1, N, m, N - n);\n\n    } else if(m < n) {\n      // We want to have the number of things sampled to be less than the\n      // successes available. So swap the definitions of successful and sampled.\n      return jStat.hypgeom.cdf(x, N, n, m);\n    } else {\n      // If we get here, half or less of the population was sampled, half or\n      // less of it was successes, and we had fewer sampled things than\n      // successes. Now we can do this complicated iterative algorithm in an\n      // efficient way.\n\n      // The basic premise of the algorithm is that we partially normalize our\n      // intermediate sum to keep it in a numerically good region, and then\n      // finish the normalization at the end.\n\n      // Holds the intermediate, scaled total CDF.\n      var scaledCDF = 1;\n\n      // This variable holds the scaled probability of the current number of\n      // successes.\n      var scaledPDF = 1;\n\n      // This keeps track of how much we have normalized.\n      var samplesDone = 0;\n\n      for(var i = 0; i < x; i++) {\n        // For every possible number of successes up to that observed...\n\n        while(scaledCDF > 1 && samplesDone < n) {\n          // Intermediate result is growing too big. Apply some of the\n          // normalization to shrink everything.\n\n          var factor = 1 - (m / (N - samplesDone));\n\n          scaledPDF *= factor;\n          scaledCDF *= factor;\n\n          // Say we've normalized by this sample already.\n          samplesDone++;\n        }\n\n        // Work out the partially-normalized hypergeometric PDF for the next\n        // number of successes\n        scaledPDF *= (n - i) * (m - i) / ((i + 1) * (N - m - n + i + 1));\n\n        // Add to the CDF answer.\n        scaledCDF += scaledPDF;\n      }\n\n      for(; samplesDone < n; samplesDone++) {\n        // Apply all the rest of the normalization\n        scaledCDF *= 1 - (m / (N - samplesDone));\n      }\n\n      // Bound answer sanely before returning.\n      return Math.min(1, Math.max(0, scaledCDF));\n    }\n  }\n});\n\n\n\n// extend uniform function with static methods\njStat.extend(jStat.poisson, {\n  pdf: function pdf(k, l) {\n    if (l < 0 || (k % 1) !== 0 || k < 0) {\n      return 0;\n    }\n\n    return Math.pow(l, k) * Math.exp(-l) / jStat.factorial(k);\n  },\n\n  cdf: function cdf(x, l) {\n    var sumarr = [],\n    k = 0;\n    if (x < 0) return 0;\n    for (; k <= x; k++) {\n      sumarr.push(jStat.poisson.pdf(k, l));\n    }\n    return jStat.sum(sumarr);\n  },\n\n  mean : function(l) {\n    return l;\n  },\n\n  variance : function(l) {\n    return l;\n  },\n\n  sampleSmall: function sampleSmall(l) {\n    var p = 1, k = 0, L = Math.exp(-l);\n    do {\n      k++;\n      p *= jStat._random_fn();\n    } while (p > L);\n    return k - 1;\n  },\n\n  sampleLarge: function sampleLarge(l) {\n    var lam = l;\n    var k;\n    var U, V, slam, loglam, a, b, invalpha, vr, us;\n\n    slam = Math.sqrt(lam);\n    loglam = Math.log(lam);\n    b = 0.931 + 2.53 * slam;\n    a = -0.059 + 0.02483 * b;\n    invalpha = 1.1239 + 1.1328 / (b - 3.4);\n    vr = 0.9277 - 3.6224 / (b - 2);\n\n    while (1) {\n      U = Math.random() - 0.5;\n      V = Math.random();\n      us = 0.5 - Math.abs(U);\n      k = Math.floor((2 * a / us + b) * U + lam + 0.43);\n      if ((us >= 0.07) && (V <= vr)) {\n          return k;\n      }\n      if ((k < 0) || ((us < 0.013) && (V > us))) {\n          continue;\n      }\n      /* log(V) == log(0.0) ok here */\n      /* if U==0.0 so that us==0.0, log is ok since always returns */\n      if ((Math.log(V) + Math.log(invalpha) - Math.log(a / (us * us) + b)) <= (-lam + k * loglam - jStat.loggam(k + 1))) {\n          return k;\n      }\n    }\n  },\n\n  sample: function sample(l) {\n    if (l < 10)\n      return this.sampleSmall(l);\n    else\n      return this.sampleLarge(l);\n  }\n});\n\n// extend triangular function with static methods\njStat.extend(jStat.triangular, {\n  pdf: function pdf(x, a, b, c) {\n    if (b <= a || c < a || c > b) {\n      return NaN;\n    } else {\n      if (x < a || x > b) {\n        return 0;\n      } else if (x < c) {\n          return (2 * (x - a)) / ((b - a) * (c - a));\n      } else if (x === c) {\n          return (2 / (b - a));\n      } else { // x > c\n          return (2 * (b - x)) / ((b - a) * (b - c));\n      }\n    }\n  },\n\n  cdf: function cdf(x, a, b, c) {\n    if (b <= a || c < a || c > b)\n      return NaN;\n    if (x <= a)\n      return 0;\n    else if (x >= b)\n      return 1;\n    if (x <= c)\n      return Math.pow(x - a, 2) / ((b - a) * (c - a));\n    else // x > c\n      return 1 - Math.pow(b - x, 2) / ((b - a) * (b - c));\n  },\n\n  inv: function inv(p, a, b, c) {\n    if (b <= a || c < a || c > b) {\n      return NaN;\n    } else {\n      if (p <= ((c - a) / (b - a))) {\n        return a + (b - a) * Math.sqrt(p * ((c - a) / (b - a)));\n      } else { // p > ((c - a) / (b - a))\n        return a + (b - a) * (1 - Math.sqrt((1 - p) * (1 - ((c - a) / (b - a)))));\n      }\n    }\n  },\n\n  mean: function mean(a, b, c) {\n    return (a + b + c) / 3;\n  },\n\n  median: function median(a, b, c) {\n    if (c <= (a + b) / 2) {\n      return b - Math.sqrt((b - a) * (b - c)) / Math.sqrt(2);\n    } else if (c > (a + b) / 2) {\n      return a + Math.sqrt((b - a) * (c - a)) / Math.sqrt(2);\n    }\n  },\n\n  mode: function mode(a, b, c) {\n    return c;\n  },\n\n  sample: function sample(a, b, c) {\n    var u = jStat._random_fn();\n    if (u < ((c - a) / (b - a)))\n      return a + Math.sqrt(u * (b - a) * (c - a))\n    return b - Math.sqrt((1 - u) * (b - a) * (b - c));\n  },\n\n  variance: function variance(a, b, c) {\n    return (a * a + b * b + c * c - a * b - a * c - b * c) / 18;\n  }\n});\n\n\n// extend arcsine function with static methods\njStat.extend(jStat.arcsine, {\n  pdf: function pdf(x, a, b) {\n    if (b <= a) return NaN;\n\n    return (x <= a || x >= b) ? 0 :\n      (2 / Math.PI) *\n        Math.pow(Math.pow(b - a, 2) -\n                  Math.pow(2 * x - a - b, 2), -0.5);\n  },\n\n  cdf: function cdf(x, a, b) {\n    if (x < a)\n      return 0;\n    else if (x < b)\n      return (2 / Math.PI) * Math.asin(Math.sqrt((x - a)/(b - a)));\n    return 1;\n  },\n\n  inv: function(p, a, b) {\n    return a + (0.5 - 0.5 * Math.cos(Math.PI * p)) * (b - a);\n  },\n\n  mean: function mean(a, b) {\n    if (b <= a) return NaN;\n    return (a + b) / 2;\n  },\n\n  median: function median(a, b) {\n    if (b <= a) return NaN;\n    return (a + b) / 2;\n  },\n\n  mode: function mode(/*a, b*/) {\n    throw new Error('mode is not yet implemented');\n  },\n\n  sample: function sample(a, b) {\n    return ((a + b) / 2) + ((b - a) / 2) *\n      Math.sin(2 * Math.PI * jStat.uniform.sample(0, 1));\n  },\n\n  variance: function variance(a, b) {\n    if (b <= a) return NaN;\n    return Math.pow(b - a, 2) / 8;\n  }\n});\n\n\nfunction laplaceSign(x) { return x / Math.abs(x); }\n\njStat.extend(jStat.laplace, {\n  pdf: function pdf(x, mu, b) {\n    return (b <= 0) ? 0 : (Math.exp(-Math.abs(x - mu) / b)) / (2 * b);\n  },\n\n  cdf: function cdf(x, mu, b) {\n    if (b <= 0) { return 0; }\n\n    if(x < mu) {\n      return 0.5 * Math.exp((x - mu) / b);\n    } else {\n      return 1 - 0.5 * Math.exp(- (x - mu) / b);\n    }\n  },\n\n  mean: function(mu/*, b*/) {\n    return mu;\n  },\n\n  median: function(mu/*, b*/) {\n    return mu;\n  },\n\n  mode: function(mu/*, b*/) {\n    return mu;\n  },\n\n  variance: function(mu, b) {\n    return 2 * b * b;\n  },\n\n  sample: function sample(mu, b) {\n    var u = jStat._random_fn() - 0.5;\n\n    return mu - (b * laplaceSign(u) * Math.log(1 - (2 * Math.abs(u))));\n  }\n});\n\nfunction tukeyWprob(w, rr, cc) {\n  var nleg = 12;\n  var ihalf = 6;\n\n  var C1 = -30;\n  var C2 = -50;\n  var C3 = 60;\n  var bb   = 8;\n  var wlar = 3;\n  var wincr1 = 2;\n  var wincr2 = 3;\n  var xleg = [\n    0.981560634246719250690549090149,\n    0.904117256370474856678465866119,\n    0.769902674194304687036893833213,\n    0.587317954286617447296702418941,\n    0.367831498998180193752691536644,\n    0.125233408511468915472441369464\n  ];\n  var aleg = [\n    0.047175336386511827194615961485,\n    0.106939325995318430960254718194,\n    0.160078328543346226334652529543,\n    0.203167426723065921749064455810,\n    0.233492536538354808760849898925,\n    0.249147045813402785000562436043\n  ];\n\n  var qsqz = w * 0.5;\n\n  // if w >= 16 then the integral lower bound (occurs for c=20)\n  // is 0.99999999999995 so return a value of 1.\n\n  if (qsqz >= bb)\n    return 1.0;\n\n  // find (f(w/2) - 1) ^ cc\n  // (first term in integral of hartley's form).\n\n  var pr_w = 2 * jStat.normal.cdf(qsqz, 0, 1, 1, 0) - 1; // erf(qsqz / M_SQRT2)\n  // if pr_w ^ cc < 2e-22 then set pr_w = 0\n  if (pr_w >= Math.exp(C2 / cc))\n    pr_w = Math.pow(pr_w, cc);\n  else\n    pr_w = 0.0;\n\n  // if w is large then the second component of the\n  // integral is small, so fewer intervals are needed.\n\n  var wincr;\n  if (w > wlar)\n    wincr = wincr1;\n  else\n    wincr = wincr2;\n\n  // find the integral of second term of hartley's form\n  // for the integral of the range for equal-length\n  // intervals using legendre quadrature.  limits of\n  // integration are from (w/2, 8).  two or three\n  // equal-length intervals are used.\n\n  // blb and bub are lower and upper limits of integration.\n\n  var blb = qsqz;\n  var binc = (bb - qsqz) / wincr;\n  var bub = blb + binc;\n  var einsum = 0.0;\n\n  // integrate over each interval\n\n  var cc1 = cc - 1.0;\n  for (var wi = 1; wi <= wincr; wi++) {\n    var elsum = 0.0;\n    var a = 0.5 * (bub + blb);\n\n    // legendre quadrature with order = nleg\n\n    var b = 0.5 * (bub - blb);\n\n    for (var jj = 1; jj <= nleg; jj++) {\n      var j, xx;\n      if (ihalf < jj) {\n        j = (nleg - jj) + 1;\n        xx = xleg[j-1];\n      } else {\n        j = jj;\n        xx = -xleg[j-1];\n      }\n      var c = b * xx;\n      var ac = a + c;\n\n      // if exp(-qexpo/2) < 9e-14,\n      // then doesn't contribute to integral\n\n      var qexpo = ac * ac;\n      if (qexpo > C3)\n        break;\n\n      var pplus = 2 * jStat.normal.cdf(ac, 0, 1, 1, 0);\n      var pminus= 2 * jStat.normal.cdf(ac, w, 1, 1, 0);\n\n      // if rinsum ^ (cc-1) < 9e-14,\n      // then doesn't contribute to integral\n\n      var rinsum = (pplus * 0.5) - (pminus * 0.5);\n      if (rinsum >= Math.exp(C1 / cc1)) {\n        rinsum = (aleg[j-1] * Math.exp(-(0.5 * qexpo))) * Math.pow(rinsum, cc1);\n        elsum += rinsum;\n      }\n    }\n    elsum *= (((2.0 * b) * cc) / Math.sqrt(2 * Math.PI));\n    einsum += elsum;\n    blb = bub;\n    bub += binc;\n  }\n\n  // if pr_w ^ rr < 9e-14, then return 0\n  pr_w += einsum;\n  if (pr_w <= Math.exp(C1 / rr))\n    return 0;\n\n  pr_w = Math.pow(pr_w, rr);\n  if (pr_w >= 1) // 1 was iMax was eps\n    return 1;\n  return pr_w;\n}\n\nfunction tukeyQinv(p, c, v) {\n  var p0 = 0.322232421088;\n  var q0 = 0.993484626060e-01;\n  var p1 = -1.0;\n  var q1 = 0.588581570495;\n  var p2 = -0.342242088547;\n  var q2 = 0.531103462366;\n  var p3 = -0.204231210125;\n  var q3 = 0.103537752850;\n  var p4 = -0.453642210148e-04;\n  var q4 = 0.38560700634e-02;\n  var c1 = 0.8832;\n  var c2 = 0.2368;\n  var c3 = 1.214;\n  var c4 = 1.208;\n  var c5 = 1.4142;\n  var vmax = 120.0;\n\n  var ps = 0.5 - 0.5 * p;\n  var yi = Math.sqrt(Math.log(1.0 / (ps * ps)));\n  var t = yi + (((( yi * p4 + p3) * yi + p2) * yi + p1) * yi + p0)\n     / (((( yi * q4 + q3) * yi + q2) * yi + q1) * yi + q0);\n  if (v < vmax) t += (t * t * t + t) / v / 4.0;\n  var q = c1 - c2 * t;\n  if (v < vmax) q += -c3 / v + c4 * t / v;\n  return t * (q * Math.log(c - 1.0) + c5);\n}\n\njStat.extend(jStat.tukey, {\n  cdf: function cdf(q, nmeans, df) {\n    // Identical implementation as the R ptukey() function as of commit 68947\n    var rr = 1;\n    var cc = nmeans;\n\n    var nlegq = 16;\n    var ihalfq = 8;\n\n    var eps1 = -30.0;\n    var eps2 = 1.0e-14;\n    var dhaf  = 100.0;\n    var dquar = 800.0;\n    var deigh = 5000.0;\n    var dlarg = 25000.0;\n    var ulen1 = 1.0;\n    var ulen2 = 0.5;\n    var ulen3 = 0.25;\n    var ulen4 = 0.125;\n    var xlegq = [\n      0.989400934991649932596154173450,\n      0.944575023073232576077988415535,\n      0.865631202387831743880467897712,\n      0.755404408355003033895101194847,\n      0.617876244402643748446671764049,\n      0.458016777657227386342419442984,\n      0.281603550779258913230460501460,\n      0.950125098376374401853193354250e-1\n    ];\n    var alegq = [\n      0.271524594117540948517805724560e-1,\n      0.622535239386478928628438369944e-1,\n      0.951585116824927848099251076022e-1,\n      0.124628971255533872052476282192,\n      0.149595988816576732081501730547,\n      0.169156519395002538189312079030,\n      0.182603415044923588866763667969,\n      0.189450610455068496285396723208\n    ];\n\n    if (q <= 0)\n      return 0;\n\n    // df must be > 1\n    // there must be at least two values\n\n    if (df < 2 || rr < 1 || cc < 2) return NaN;\n\n    if (!Number.isFinite(q))\n      return 1;\n\n    if (df > dlarg)\n      return tukeyWprob(q, rr, cc);\n\n    // calculate leading constant\n\n    var f2 = df * 0.5;\n    var f2lf = ((f2 * Math.log(df)) - (df * Math.log(2))) - jStat.gammaln(f2);\n    var f21 = f2 - 1.0;\n\n    // integral is divided into unit, half-unit, quarter-unit, or\n    // eighth-unit length intervals depending on the value of the\n    // degrees of freedom.\n\n    var ff4 = df * 0.25;\n    var ulen;\n    if      (df <= dhaf)  ulen = ulen1;\n    else if (df <= dquar) ulen = ulen2;\n    else if (df <= deigh) ulen = ulen3;\n    else                  ulen = ulen4;\n\n    f2lf += Math.log(ulen);\n\n    // integrate over each subinterval\n\n    var ans = 0.0;\n\n    for (var i = 1; i <= 50; i++) {\n      var otsum = 0.0;\n\n      // legendre quadrature with order = nlegq\n      // nodes (stored in xlegq) are symmetric around zero.\n\n      var twa1 = (2 * i - 1) * ulen;\n\n      for (var jj = 1; jj <= nlegq; jj++) {\n        var j, t1;\n        if (ihalfq < jj) {\n          j = jj - ihalfq - 1;\n          t1 = (f2lf + (f21 * Math.log(twa1 + (xlegq[j] * ulen))))\n              - (((xlegq[j] * ulen) + twa1) * ff4);\n        } else {\n          j = jj - 1;\n          t1 = (f2lf + (f21 * Math.log(twa1 - (xlegq[j] * ulen))))\n              + (((xlegq[j] * ulen) - twa1) * ff4);\n        }\n\n        // if exp(t1) < 9e-14, then doesn't contribute to integral\n        var qsqz;\n        if (t1 >= eps1) {\n          if (ihalfq < jj) {\n            qsqz = q * Math.sqrt(((xlegq[j] * ulen) + twa1) * 0.5);\n          } else {\n            qsqz = q * Math.sqrt(((-(xlegq[j] * ulen)) + twa1) * 0.5);\n          }\n\n          // call wprob to find integral of range portion\n\n          var wprb = tukeyWprob(qsqz, rr, cc);\n          var rotsum = (wprb * alegq[j]) * Math.exp(t1);\n          otsum += rotsum;\n        }\n        // end legendre integral for interval i\n        // L200:\n      }\n\n      // if integral for interval i < 1e-14, then stop.\n      // However, in order to avoid small area under left tail,\n      // at least  1 / ulen  intervals are calculated.\n      if (i * ulen >= 1.0 && otsum <= eps2)\n        break;\n\n      // end of interval i\n      // L330:\n\n      ans += otsum;\n    }\n\n    if (otsum > eps2) { // not converged\n      throw new Error('tukey.cdf failed to converge');\n    }\n    if (ans > 1)\n      ans = 1;\n    return ans;\n  },\n\n  inv: function(p, nmeans, df) {\n    // Identical implementation as the R qtukey() function as of commit 68947\n    var rr = 1;\n    var cc = nmeans;\n\n    var eps = 0.0001;\n    var maxiter = 50;\n\n    // df must be > 1 ; there must be at least two values\n    if (df < 2 || rr < 1 || cc < 2) return NaN;\n\n    if (p < 0 || p > 1) return NaN;\n    if (p === 0) return 0;\n    if (p === 1) return Infinity;\n\n    // Initial value\n\n    var x0 = tukeyQinv(p, cc, df);\n\n    // Find prob(value < x0)\n\n    var valx0 = jStat.tukey.cdf(x0, nmeans, df) - p;\n\n    // Find the second iterate and prob(value < x1).\n    // If the first iterate has probability value\n    // exceeding p then second iterate is 1 less than\n    // first iterate; otherwise it is 1 greater.\n\n    var x1;\n    if (valx0 > 0.0)\n      x1 = Math.max(0.0, x0 - 1.0);\n    else\n      x1 = x0 + 1.0;\n    var valx1 = jStat.tukey.cdf(x1, nmeans, df) - p;\n\n    // Find new iterate\n\n    var ans;\n    for(var iter = 1; iter < maxiter; iter++) {\n      ans = x1 - ((valx1 * (x1 - x0)) / (valx1 - valx0));\n      valx0 = valx1;\n\n      // New iterate must be >= 0\n\n      x0 = x1;\n      if (ans < 0.0) {\n        ans = 0.0;\n        valx1 = -p;\n      }\n      // Find prob(value < new iterate)\n\n      valx1 = jStat.tukey.cdf(ans, nmeans, df) - p;\n      x1 = ans;\n\n      // If the difference between two successive\n      // iterates is less than eps, stop\n\n      var xabs = Math.abs(x1 - x0);\n      if (xabs < eps)\n        return ans;\n    }\n\n    throw new Error('tukey.inv failed to converge');\n  }\n});\n\n}(jStat, Math));\n/* Provides functions for the solution of linear system of equations, integration, extrapolation,\n * interpolation, eigenvalue problems, differential equations and PCA analysis. */\n\n(function(jStat, Math) {\n\nvar push = Array.prototype.push;\nvar isArray = jStat.utils.isArray;\n\nfunction isUsable(arg) {\n  return isArray(arg) || arg instanceof jStat;\n}\n\njStat.extend({\n\n  // add a vector/matrix to a vector/matrix or scalar\n  add: function add(arr, arg) {\n    // check if arg is a vector or scalar\n    if (isUsable(arg)) {\n      if (!isUsable(arg[0])) arg = [ arg ];\n      return jStat.map(arr, function(value, row, col) {\n        return value + arg[row][col];\n      });\n    }\n    return jStat.map(arr, function(value) { return value + arg; });\n  },\n\n  // subtract a vector or scalar from the vector\n  subtract: function subtract(arr, arg) {\n    // check if arg is a vector or scalar\n    if (isUsable(arg)) {\n      if (!isUsable(arg[0])) arg = [ arg ];\n      return jStat.map(arr, function(value, row, col) {\n        return value - arg[row][col] || 0;\n      });\n    }\n    return jStat.map(arr, function(value) { return value - arg; });\n  },\n\n  // matrix division\n  divide: function divide(arr, arg) {\n    if (isUsable(arg)) {\n      if (!isUsable(arg[0])) arg = [ arg ];\n      return jStat.multiply(arr, jStat.inv(arg));\n    }\n    return jStat.map(arr, function(value) { return value / arg; });\n  },\n\n  // matrix multiplication\n  multiply: function multiply(arr, arg) {\n    var row, col, nrescols, sum, nrow, ncol, res, rescols;\n    // eg: arr = 2 arg = 3 -> 6 for res[0][0] statement closure\n    if (arr.length === undefined && arg.length === undefined) {\n      return arr * arg;\n    }\n    nrow = arr.length,\n    ncol = arr[0].length,\n    res = jStat.zeros(nrow, nrescols = (isUsable(arg)) ? arg[0].length : ncol),\n    rescols = 0;\n    if (isUsable(arg)) {\n      for (; rescols < nrescols; rescols++) {\n        for (row = 0; row < nrow; row++) {\n          sum = 0;\n          for (col = 0; col < ncol; col++)\n          sum += arr[row][col] * arg[col][rescols];\n          res[row][rescols] = sum;\n        }\n      }\n      return (nrow === 1 && rescols === 1) ? res[0][0] : res;\n    }\n    return jStat.map(arr, function(value) { return value * arg; });\n  },\n\n  // outer([1,2,3],[4,5,6])\n  // ===\n  // [[1],[2],[3]] times [[4,5,6]]\n  // ->\n  // [[4,5,6],[8,10,12],[12,15,18]]\n  outer:function outer(A, B) {\n    return jStat.multiply(A.map(function(t){ return [t] }), [B]);\n  },\n\n\n  // Returns the dot product of two matricies\n  dot: function dot(arr, arg) {\n    if (!isUsable(arr[0])) arr = [ arr ];\n    if (!isUsable(arg[0])) arg = [ arg ];\n    // convert column to row vector\n    var left = (arr[0].length === 1 && arr.length !== 1) ? jStat.transpose(arr) : arr,\n    right = (arg[0].length === 1 && arg.length !== 1) ? jStat.transpose(arg) : arg,\n    res = [],\n    row = 0,\n    nrow = left.length,\n    ncol = left[0].length,\n    sum, col;\n    for (; row < nrow; row++) {\n      res[row] = [];\n      sum = 0;\n      for (col = 0; col < ncol; col++)\n      sum += left[row][col] * right[row][col];\n      res[row] = sum;\n    }\n    return (res.length === 1) ? res[0] : res;\n  },\n\n  // raise every element by a scalar\n  pow: function pow(arr, arg) {\n    return jStat.map(arr, function(value) { return Math.pow(value, arg); });\n  },\n\n  // exponentiate every element\n  exp: function exp(arr) {\n    return jStat.map(arr, function(value) { return Math.exp(value); });\n  },\n\n  // generate the natural log of every element\n  log: function exp(arr) {\n    return jStat.map(arr, function(value) { return Math.log(value); });\n  },\n\n  // generate the absolute values of the vector\n  abs: function abs(arr) {\n    return jStat.map(arr, function(value) { return Math.abs(value); });\n  },\n\n  // computes the p-norm of the vector\n  // In the case that a matrix is passed, uses the first row as the vector\n  norm: function norm(arr, p) {\n    var nnorm = 0,\n    i = 0;\n    // check the p-value of the norm, and set for most common case\n    if (isNaN(p)) p = 2;\n    // check if multi-dimensional array, and make vector correction\n    if (isUsable(arr[0])) arr = arr[0];\n    // vector norm\n    for (; i < arr.length; i++) {\n      nnorm += Math.pow(Math.abs(arr[i]), p);\n    }\n    return Math.pow(nnorm, 1 / p);\n  },\n\n  // computes the angle between two vectors in rads\n  // In case a matrix is passed, this uses the first row as the vector\n  angle: function angle(arr, arg) {\n    return Math.acos(jStat.dot(arr, arg) / (jStat.norm(arr) * jStat.norm(arg)));\n  },\n\n  // augment one matrix by another\n  // Note: this function returns a matrix, not a jStat object\n  aug: function aug(a, b) {\n    var newarr = [];\n    var i;\n    for (i = 0; i < a.length; i++) {\n      newarr.push(a[i].slice());\n    }\n    for (i = 0; i < newarr.length; i++) {\n      push.apply(newarr[i], b[i]);\n    }\n    return newarr;\n  },\n\n  // The inv() function calculates the inverse of a matrix\n  // Create the inverse by augmenting the matrix by the identity matrix of the\n  // appropriate size, and then use G-J elimination on the augmented matrix.\n  inv: function inv(a) {\n    var rows = a.length;\n    var cols = a[0].length;\n    var b = jStat.identity(rows, cols);\n    var c = jStat.gauss_jordan(a, b);\n    var result = [];\n    var i = 0;\n    var j;\n\n    //We need to copy the inverse portion to a new matrix to rid G-J artifacts\n    for (; i < rows; i++) {\n      result[i] = [];\n      for (j = cols; j < c[0].length; j++)\n        result[i][j - cols] = c[i][j];\n    }\n    return result;\n  },\n\n  // calculate the determinant of a matrix\n  det: function det(a) {\n    var alen = a.length,\n    alend = alen * 2,\n    vals = new Array(alend),\n    rowshift = alen - 1,\n    colshift = alend - 1,\n    mrow = rowshift - alen + 1,\n    mcol = colshift,\n    i = 0,\n    result = 0,\n    j;\n    // check for special 2x2 case\n    if (alen === 2) {\n      return a[0][0] * a[1][1] - a[0][1] * a[1][0];\n    }\n    for (; i < alend; i++) {\n      vals[i] = 1;\n    }\n    for (i = 0; i < alen; i++) {\n      for (j = 0; j < alen; j++) {\n        vals[(mrow < 0) ? mrow + alen : mrow ] *= a[i][j];\n        vals[(mcol < alen) ? mcol + alen : mcol ] *= a[i][j];\n        mrow++;\n        mcol--;\n      }\n      mrow = --rowshift - alen + 1;\n      mcol = --colshift;\n    }\n    for (i = 0; i < alen; i++) {\n      result += vals[i];\n    }\n    for (; i < alend; i++) {\n      result -= vals[i];\n    }\n    return result;\n  },\n\n  gauss_elimination: function gauss_elimination(a, b) {\n    var i = 0,\n    j = 0,\n    n = a.length,\n    m = a[0].length,\n    factor = 1,\n    sum = 0,\n    x = [],\n    maug, pivot, temp, k;\n    a = jStat.aug(a, b);\n    maug = a[0].length;\n    for(i = 0; i < n; i++) {\n      pivot = a[i][i];\n      j = i;\n      for (k = i + 1; k < m; k++) {\n        if (pivot < Math.abs(a[k][i])) {\n          pivot = a[k][i];\n          j = k;\n        }\n      }\n      if (j != i) {\n        for(k = 0; k < maug; k++) {\n          temp = a[i][k];\n          a[i][k] = a[j][k];\n          a[j][k] = temp;\n        }\n      }\n      for (j = i + 1; j < n; j++) {\n        factor = a[j][i] / a[i][i];\n        for(k = i; k < maug; k++) {\n          a[j][k] = a[j][k] - factor * a[i][k];\n        }\n      }\n    }\n    for (i = n - 1; i >= 0; i--) {\n      sum = 0;\n      for (j = i + 1; j<= n - 1; j++) {\n        sum = sum + x[j] * a[i][j];\n      }\n      x[i] =(a[i][maug - 1] - sum) / a[i][i];\n    }\n    return x;\n  },\n\n  gauss_jordan: function gauss_jordan(a, b) {\n    var m = jStat.aug(a, b);\n    var h = m.length;\n    var w = m[0].length;\n    var c = 0;\n    var x, y, y2;\n    // find max pivot\n    for (y = 0; y < h; y++) {\n      var maxrow = y;\n      for (y2 = y+1; y2 < h; y2++) {\n        if (Math.abs(m[y2][y]) > Math.abs(m[maxrow][y]))\n          maxrow = y2;\n      }\n      var tmp = m[y];\n      m[y] = m[maxrow];\n      m[maxrow] = tmp\n      for (y2 = y+1; y2 < h; y2++) {\n        c = m[y2][y] / m[y][y];\n        for (x = y; x < w; x++) {\n          m[y2][x] -= m[y][x] * c;\n        }\n      }\n    }\n    // backsubstitute\n    for (y = h-1; y >= 0; y--) {\n      c = m[y][y];\n      for (y2 = 0; y2 < y; y2++) {\n        for (x = w-1; x > y-1; x--) {\n          m[y2][x] -= m[y][x] * m[y2][y] / c;\n        }\n      }\n      m[y][y] /= c;\n      for (x = h; x < w; x++) {\n        m[y][x] /= c;\n      }\n    }\n    return m;\n  },\n\n  // solve equation\n  // Ax=b\n  // A is upper triangular matrix\n  // A=[[1,2,3],[0,4,5],[0,6,7]]\n  // b=[1,2,3]\n  // triaUpSolve(A,b) // -> [2.666,0.1666,1.666]\n  // if you use matrix style\n  // A=[[1,2,3],[0,4,5],[0,6,7]]\n  // b=[[1],[2],[3]]\n  // will return [[2.666],[0.1666],[1.666]]\n  triaUpSolve: function triaUpSolve(A, b) {\n    var size = A[0].length;\n    var x = jStat.zeros(1, size)[0];\n    var parts;\n    var matrix_mode = false;\n\n    if (b[0].length != undefined) {\n      b = b.map(function(i){ return i[0] });\n      matrix_mode = true;\n    }\n\n    jStat.arange(size - 1, -1, -1).forEach(function(i) {\n      parts = jStat.arange(i + 1, size).map(function(j) {\n        return x[j] * A[i][j];\n      });\n      x[i] = (b[i] - jStat.sum(parts)) / A[i][i];\n    });\n\n    if (matrix_mode)\n      return x.map(function(i){ return [i] });\n    return x;\n  },\n\n  triaLowSolve: function triaLowSolve(A, b) {\n    // like to triaUpSolve but A is lower triangular matrix\n    var size = A[0].length;\n    var x = jStat.zeros(1, size)[0];\n    var parts;\n\n    var matrix_mode=false;\n    if (b[0].length != undefined) {\n      b = b.map(function(i){ return i[0] });\n      matrix_mode = true;\n    }\n\n    jStat.arange(size).forEach(function(i) {\n      parts = jStat.arange(i).map(function(j) {\n        return A[i][j] * x[j];\n      });\n      x[i] = (b[i] - jStat.sum(parts)) / A[i][i];\n    })\n\n    if (matrix_mode)\n      return x.map(function(i){ return [i] });\n    return x;\n  },\n\n\n  // A -> [L,U]\n  // A=LU\n  // L is lower triangular matrix\n  // U is upper triangular matrix\n  lu: function lu(A) {\n    var size = A.length;\n    //var L=jStat.diagonal(jStat.ones(1,size)[0]);\n    var L = jStat.identity(size);\n    var R = jStat.zeros(A.length, A[0].length);\n    var parts;\n    jStat.arange(size).forEach(function(t) {\n      R[0][t] = A[0][t];\n    });\n    jStat.arange(1, size).forEach(function(l) {\n      jStat.arange(l).forEach(function(i) {\n        parts = jStat.arange(i).map(function(jj) {\n          return L[l][jj] * R[jj][i];\n        });\n        L[l][i] = (A[l][i] - jStat.sum(parts)) / R[i][i];\n      });\n      jStat.arange(l, size).forEach(function(j) {\n        parts = jStat.arange(l).map(function(jj) {\n          return L[l][jj] * R[jj][j];\n        });\n        R[l][j] = A[parts.length][j] - jStat.sum(parts);\n      });\n    });\n    return [L, R];\n  },\n\n  // A -> T\n  // A=TT'\n  // T is lower triangular matrix\n  cholesky: function cholesky(A) {\n    var size = A.length;\n    var T = jStat.zeros(A.length, A[0].length);\n    var parts;\n    jStat.arange(size).forEach(function(i) {\n      parts = jStat.arange(i).map(function(t) {\n        return Math.pow(T[i][t],2);\n      });\n      T[i][i] = Math.sqrt(A[i][i] - jStat.sum(parts));\n      jStat.arange(i + 1, size).forEach(function(j) {\n        parts = jStat.arange(i).map(function(t) {\n          return T[i][t] * T[j][t];\n        });\n        T[j][i] = (A[i][j] - jStat.sum(parts)) / T[i][i];\n      });\n    });\n    return T;\n  },\n\n\n  gauss_jacobi: function gauss_jacobi(a, b, x, r) {\n    var i = 0;\n    var j = 0;\n    var n = a.length;\n    var l = [];\n    var u = [];\n    var d = [];\n    var xv, c, h, xk;\n    for (; i < n; i++) {\n      l[i] = [];\n      u[i] = [];\n      d[i] = [];\n      for (j = 0; j < n; j++) {\n        if (i > j) {\n          l[i][j] = a[i][j];\n          u[i][j] = d[i][j] = 0;\n        } else if (i < j) {\n          u[i][j] = a[i][j];\n          l[i][j] = d[i][j] = 0;\n        } else {\n          d[i][j] = a[i][j];\n          l[i][j] = u[i][j] = 0;\n        }\n      }\n    }\n    h = jStat.multiply(jStat.multiply(jStat.inv(d), jStat.add(l, u)), -1);\n    c = jStat.multiply(jStat.inv(d), b);\n    xv = x;\n    xk = jStat.add(jStat.multiply(h, x), c);\n    i = 2;\n    while (Math.abs(jStat.norm(jStat.subtract(xk,xv))) > r) {\n      xv = xk;\n      xk = jStat.add(jStat.multiply(h, xv), c);\n      i++;\n    }\n    return xk;\n  },\n\n  gauss_seidel: function gauss_seidel(a, b, x, r) {\n    var i = 0;\n    var n = a.length;\n    var l = [];\n    var u = [];\n    var d = [];\n    var j, xv, c, h, xk;\n    for (; i < n; i++) {\n      l[i] = [];\n      u[i] = [];\n      d[i] = [];\n      for (j = 0; j < n; j++) {\n        if (i > j) {\n          l[i][j] = a[i][j];\n          u[i][j] = d[i][j] = 0;\n        } else if (i < j) {\n          u[i][j] = a[i][j];\n          l[i][j] = d[i][j] = 0;\n        } else {\n          d[i][j] = a[i][j];\n          l[i][j] = u[i][j] = 0;\n        }\n      }\n    }\n    h = jStat.multiply(jStat.multiply(jStat.inv(jStat.add(d, l)), u), -1);\n    c = jStat.multiply(jStat.inv(jStat.add(d, l)), b);\n    xv = x;\n    xk = jStat.add(jStat.multiply(h, x), c);\n    i = 2;\n    while (Math.abs(jStat.norm(jStat.subtract(xk, xv))) > r) {\n      xv = xk;\n      xk = jStat.add(jStat.multiply(h, xv), c);\n      i = i + 1;\n    }\n    return xk;\n  },\n\n  SOR: function SOR(a, b, x, r, w) {\n    var i = 0;\n    var n = a.length;\n    var l = [];\n    var u = [];\n    var d = [];\n    var j, xv, c, h, xk;\n    for (; i < n; i++) {\n      l[i] = [];\n      u[i] = [];\n      d[i] = [];\n      for (j = 0; j < n; j++) {\n        if (i > j) {\n          l[i][j] = a[i][j];\n          u[i][j] = d[i][j] = 0;\n        } else if (i < j) {\n          u[i][j] = a[i][j];\n          l[i][j] = d[i][j] = 0;\n        } else {\n          d[i][j] = a[i][j];\n          l[i][j] = u[i][j] = 0;\n        }\n      }\n    }\n    h = jStat.multiply(jStat.inv(jStat.add(d, jStat.multiply(l, w))),\n                       jStat.subtract(jStat.multiply(d, 1 - w),\n                                      jStat.multiply(u, w)));\n    c = jStat.multiply(jStat.multiply(jStat.inv(jStat.add(d,\n        jStat.multiply(l, w))), b), w);\n    xv = x;\n    xk = jStat.add(jStat.multiply(h, x), c);\n    i = 2;\n    while (Math.abs(jStat.norm(jStat.subtract(xk, xv))) > r) {\n      xv = xk;\n      xk = jStat.add(jStat.multiply(h, xv), c);\n      i++;\n    }\n    return xk;\n  },\n\n  householder: function householder(a) {\n    var m = a.length;\n    var n = a[0].length;\n    var i = 0;\n    var w = [];\n    var p = [];\n    var alpha, r, k, j, factor;\n    for (; i < m - 1; i++) {\n      alpha = 0;\n      for (j = i + 1; j < n; j++)\n      alpha += (a[j][i] * a[j][i]);\n      factor = (a[i + 1][i] > 0) ? -1 : 1;\n      alpha = factor * Math.sqrt(alpha);\n      r = Math.sqrt((((alpha * alpha) - a[i + 1][i] * alpha) / 2));\n      w = jStat.zeros(m, 1);\n      w[i + 1][0] = (a[i + 1][i] - alpha) / (2 * r);\n      for (k = i + 2; k < m; k++) w[k][0] = a[k][i] / (2 * r);\n      p = jStat.subtract(jStat.identity(m, n),\n          jStat.multiply(jStat.multiply(w, jStat.transpose(w)), 2));\n      a = jStat.multiply(p, jStat.multiply(a, p));\n    }\n    return a;\n  },\n\n  // A -> [Q,R]\n  // Q is orthogonal matrix\n  // R is upper triangular\n  QR: (function() {\n    // x -> Q\n    // find a orthogonal matrix Q st.\n    // Qx=y\n    // y is [||x||,0,0,...]\n\n    // quick ref\n    var sum   = jStat.sum;\n    var range = jStat.arange;\n\n    function qr2(x) {\n      // quick impletation\n      // https://www.stat.wisc.edu/~larget/math496/qr.html\n\n      var n = x.length;\n      var p = x[0].length;\n\n      var r = jStat.zeros(p, p);\n      x = jStat.copy(x);\n\n      var i,j,k;\n      for(j = 0; j < p; j++){\n        r[j][j] = Math.sqrt(sum(range(n).map(function(i){\n          return x[i][j] * x[i][j];\n        })));\n        for(i = 0; i < n; i++){\n          x[i][j] = x[i][j] / r[j][j];\n        }\n        for(k = j+1; k < p; k++){\n          r[j][k] = sum(range(n).map(function(i){\n            return x[i][j] * x[i][k];\n          }));\n          for(i = 0; i < n; i++){\n            x[i][k] = x[i][k] - x[i][j]*r[j][k];\n          }\n        }\n      }\n      return [x, r];\n    }\n\n    return qr2;\n  }()),\n\n  lstsq: (function() {\n    // solve least squard problem for Ax=b as QR decomposition way if b is\n    // [[b1],[b2],[b3]] form will return [[x1],[x2],[x3]] array form solution\n    // else b is [b1,b2,b3] form will return [x1,x2,x3] array form solution\n    function R_I(A) {\n      A = jStat.copy(A);\n      var size = A.length;\n      var I = jStat.identity(size);\n      jStat.arange(size - 1, -1, -1).forEach(function(i) {\n        jStat.sliceAssign(\n            I, { row: i }, jStat.divide(jStat.slice(I, { row: i }), A[i][i]));\n        jStat.sliceAssign(\n            A, { row: i }, jStat.divide(jStat.slice(A, { row: i }), A[i][i]));\n        jStat.arange(i).forEach(function(j) {\n          var c = jStat.multiply(A[j][i], -1);\n          var Aj = jStat.slice(A, { row: j });\n          var cAi = jStat.multiply(jStat.slice(A, { row: i }), c);\n          jStat.sliceAssign(A, { row: j }, jStat.add(Aj, cAi));\n          var Ij = jStat.slice(I, { row: j });\n          var cIi = jStat.multiply(jStat.slice(I, { row: i }), c);\n          jStat.sliceAssign(I, { row: j }, jStat.add(Ij, cIi));\n        })\n      });\n      return I;\n    }\n\n    function qr_solve(A, b){\n      var array_mode = false;\n      if (b[0].length === undefined) {\n        // [c1,c2,c3] mode\n        b = b.map(function(x){ return [x] });\n        array_mode = true;\n      }\n      var QR = jStat.QR(A);\n      var Q = QR[0];\n      var R = QR[1];\n      var attrs = A[0].length;\n      var Q1 = jStat.slice(Q,{col:{end:attrs}});\n      var R1 = jStat.slice(R,{row:{end:attrs}});\n      var RI = R_I(R1);\n      var Q2 = jStat.transpose(Q1);\n\n      if(Q2[0].length === undefined){\n        Q2 = [Q2]; // The confusing jStat.multifly implementation threat nature process again.\n      }\n\n      var x = jStat.multiply(jStat.multiply(RI, Q2), b);\n\n      if(x.length === undefined){\n        x = [[x]]; // The confusing jStat.multifly implementation threat nature process again.\n      }\n\n\n      if (array_mode)\n        return x.map(function(i){ return i[0] });\n      return x;\n    }\n\n    return qr_solve;\n  }()),\n\n  jacobi: function jacobi(a) {\n    var condition = 1;\n    var n = a.length;\n    var e = jStat.identity(n, n);\n    var ev = [];\n    var b, i, j, p, q, maxim, theta, s;\n    // condition === 1 only if tolerance is not reached\n    while (condition === 1) {\n      maxim = a[0][1];\n      p = 0;\n      q = 1;\n      for (i = 0; i < n; i++) {\n        for (j = 0; j < n; j++) {\n          if (i != j) {\n            if (maxim < Math.abs(a[i][j])) {\n              maxim = Math.abs(a[i][j]);\n              p = i;\n              q = j;\n            }\n          }\n        }\n      }\n      if (a[p][p] === a[q][q])\n        theta = (a[p][q] > 0) ? Math.PI / 4 : -Math.PI / 4;\n      else\n        theta = Math.atan(2 * a[p][q] / (a[p][p] - a[q][q])) / 2;\n      s = jStat.identity(n, n);\n      s[p][p] = Math.cos(theta);\n      s[p][q] = -Math.sin(theta);\n      s[q][p] = Math.sin(theta);\n      s[q][q] = Math.cos(theta);\n      // eigen vector matrix\n      e = jStat.multiply(e, s);\n      b = jStat.multiply(jStat.multiply(jStat.inv(s), a), s);\n      a = b;\n      condition = 0;\n      for (i = 1; i < n; i++) {\n        for (j = 1; j < n; j++) {\n          if (i != j && Math.abs(a[i][j]) > 0.001) {\n            condition = 1;\n          }\n        }\n      }\n    }\n    for (i = 0; i < n; i++) ev.push(a[i][i]);\n    //returns both the eigenvalue and eigenmatrix\n    return [e, ev];\n  },\n\n  rungekutta: function rungekutta(f, h, p, t_j, u_j, order) {\n    var k1, k2, u_j1, k3, k4;\n    if (order === 2) {\n      while (t_j <= p) {\n        k1 = h * f(t_j, u_j);\n        k2 = h * f(t_j + h, u_j + k1);\n        u_j1 = u_j + (k1 + k2) / 2;\n        u_j = u_j1;\n        t_j = t_j + h;\n      }\n    }\n    if (order === 4) {\n      while (t_j <= p) {\n        k1 = h * f(t_j, u_j);\n        k2 = h * f(t_j + h / 2, u_j + k1 / 2);\n        k3 = h * f(t_j + h / 2, u_j + k2 / 2);\n        k4 = h * f(t_j +h, u_j + k3);\n        u_j1 = u_j + (k1 + 2 * k2 + 2 * k3 + k4) / 6;\n        u_j = u_j1;\n        t_j = t_j + h;\n      }\n    }\n    return u_j;\n  },\n\n  romberg: function romberg(f, a, b, order) {\n    var i = 0;\n    var h = (b - a) / 2;\n    var x = [];\n    var h1 = [];\n    var g = [];\n    var m, a1, j, k, I;\n    while (i < order / 2) {\n      I = f(a);\n      for (j = a, k = 0; j <= b; j = j + h, k++) x[k] = j;\n      m = x.length;\n      for (j = 1; j < m - 1; j++) {\n        I += (((j % 2) !== 0) ? 4 : 2) * f(x[j]);\n      }\n      I = (h / 3) * (I + f(b));\n      g[i] = I;\n      h /= 2;\n      i++;\n    }\n    a1 = g.length;\n    m = 1;\n    while (a1 !== 1) {\n      for (j = 0; j < a1 - 1; j++)\n      h1[j] = ((Math.pow(4, m)) * g[j + 1] - g[j]) / (Math.pow(4, m) - 1);\n      a1 = h1.length;\n      g = h1;\n      h1 = [];\n      m++;\n    }\n    return g;\n  },\n\n  richardson: function richardson(X, f, x, h) {\n    function pos(X, x) {\n      var i = 0;\n      var n = X.length;\n      var p;\n      for (; i < n; i++)\n        if (X[i] === x) p = i;\n      return p;\n    }\n    var h_min = Math.abs(x - X[pos(X, x) + 1]);\n    var i = 0;\n    var g = [];\n    var h1 = [];\n    var y1, y2, m, a, j;\n    while (h >= h_min) {\n      y1 = pos(X, x + h);\n      y2 = pos(X, x);\n      g[i] = (f[y1] - 2 * f[y2] + f[2 * y2 - y1]) / (h * h);\n      h /= 2;\n      i++;\n    }\n    a = g.length;\n    m = 1;\n    while (a != 1) {\n      for (j = 0; j < a - 1; j++)\n        h1[j] = ((Math.pow(4, m)) * g[j + 1] - g[j]) / (Math.pow(4, m) - 1);\n      a = h1.length;\n      g = h1;\n      h1 = [];\n      m++;\n    }\n    return g;\n  },\n\n  simpson: function simpson(f, a, b, n) {\n    var h = (b - a) / n;\n    var I = f(a);\n    var x = [];\n    var j = a;\n    var k = 0;\n    var i = 1;\n    var m;\n    for (; j <= b; j = j + h, k++)\n      x[k] = j;\n    m = x.length;\n    for (; i < m - 1; i++) {\n      I += ((i % 2 !== 0) ? 4 : 2) * f(x[i]);\n    }\n    return (h / 3) * (I + f(b));\n  },\n\n  hermite: function hermite(X, F, dF, value) {\n    var n = X.length;\n    var p = 0;\n    var i = 0;\n    var l = [];\n    var dl = [];\n    var A = [];\n    var B = [];\n    var j;\n    for (; i < n; i++) {\n      l[i] = 1;\n      for (j = 0; j < n; j++) {\n        if (i != j) l[i] *= (value - X[j]) / (X[i] - X[j]);\n      }\n      dl[i] = 0;\n      for (j = 0; j < n; j++) {\n        if (i != j) dl[i] += 1 / (X [i] - X[j]);\n      }\n      A[i] = (1 - 2 * (value - X[i]) * dl[i]) * (l[i] * l[i]);\n      B[i] = (value - X[i]) * (l[i] * l[i]);\n      p += (A[i] * F[i] + B[i] * dF[i]);\n    }\n    return p;\n  },\n\n  lagrange: function lagrange(X, F, value) {\n    var p = 0;\n    var i = 0;\n    var j, l;\n    var n = X.length;\n    for (; i < n; i++) {\n      l = F[i];\n      for (j = 0; j < n; j++) {\n        // calculating the lagrange polynomial L_i\n        if (i != j) l *= (value - X[j]) / (X[i] - X[j]);\n      }\n      // adding the lagrange polynomials found above\n      p += l;\n    }\n    return p;\n  },\n\n  cubic_spline: function cubic_spline(X, F, value) {\n    var n = X.length;\n    var i = 0, j;\n    var A = [];\n    var B = [];\n    var alpha = [];\n    var c = [];\n    var h = [];\n    var b = [];\n    var d = [];\n    for (; i < n - 1; i++)\n      h[i] = X[i + 1] - X[i];\n    alpha[0] = 0;\n    for (i = 1; i < n - 1; i++) {\n      alpha[i] = (3 / h[i]) * (F[i + 1] - F[i]) -\n          (3 / h[i-1]) * (F[i] - F[i-1]);\n    }\n    for (i = 1; i < n - 1; i++) {\n      A[i] = [];\n      B[i] = [];\n      A[i][i-1] = h[i-1];\n      A[i][i] = 2 * (h[i - 1] + h[i]);\n      A[i][i+1] = h[i];\n      B[i][0] = alpha[i];\n    }\n    c = jStat.multiply(jStat.inv(A), B);\n    for (j = 0; j < n - 1; j++) {\n      b[j] = (F[j + 1] - F[j]) / h[j] - h[j] * (c[j + 1][0] + 2 * c[j][0]) / 3;\n      d[j] = (c[j + 1][0] - c[j][0]) / (3 * h[j]);\n    }\n    for (j = 0; j < n; j++) {\n      if (X[j] > value) break;\n    }\n    j -= 1;\n    return F[j] + (value - X[j]) * b[j] + jStat.sq(value-X[j]) *\n        c[j] + (value - X[j]) * jStat.sq(value - X[j]) * d[j];\n  },\n\n  gauss_quadrature: function gauss_quadrature() {\n    throw new Error('gauss_quadrature not yet implemented');\n  },\n\n  PCA: function PCA(X) {\n    var m = X.length;\n    var n = X[0].length;\n    var i = 0;\n    var j, temp1;\n    var u = [];\n    var D = [];\n    var result = [];\n    var temp2 = [];\n    var Y = [];\n    var Bt = [];\n    var B = [];\n    var C = [];\n    var V = [];\n    var Vt = [];\n    for (i = 0; i < m; i++) {\n      u[i] = jStat.sum(X[i]) / n;\n    }\n    for (i = 0; i < n; i++) {\n      B[i] = [];\n      for(j = 0; j < m; j++) {\n        B[i][j] = X[j][i] - u[j];\n      }\n    }\n    B = jStat.transpose(B);\n    for (i = 0; i < m; i++) {\n      C[i] = [];\n      for (j = 0; j < m; j++) {\n        C[i][j] = (jStat.dot([B[i]], [B[j]])) / (n - 1);\n      }\n    }\n    result = jStat.jacobi(C);\n    V = result[0];\n    D = result[1];\n    Vt = jStat.transpose(V);\n    for (i = 0; i < D.length; i++) {\n      for (j = i; j < D.length; j++) {\n        if(D[i] < D[j])  {\n          temp1 = D[i];\n          D[i] = D[j];\n          D[j] = temp1;\n          temp2 = Vt[i];\n          Vt[i] = Vt[j];\n          Vt[j] = temp2;\n        }\n      }\n    }\n    Bt = jStat.transpose(B);\n    for (i = 0; i < m; i++) {\n      Y[i] = [];\n      for (j = 0; j < Bt.length; j++) {\n        Y[i][j] = jStat.dot([Vt[i]], [Bt[j]]);\n      }\n    }\n    return [X, D, Vt, Y];\n  }\n});\n\n// extend jStat.fn with methods that require one argument\n(function(funcs) {\n  for (var i = 0; i < funcs.length; i++) (function(passfunc) {\n    jStat.fn[passfunc] = function(arg, func) {\n      var tmpthis = this;\n      // check for callback\n      if (func) {\n        setTimeout(function() {\n          func.call(tmpthis, jStat.fn[passfunc].call(tmpthis, arg));\n        }, 15);\n        return this;\n      }\n      if (typeof jStat[passfunc](this, arg) === 'number')\n        return jStat[passfunc](this, arg);\n      else\n        return jStat(jStat[passfunc](this, arg));\n    };\n  }(funcs[i]));\n}('add divide multiply subtract dot pow exp log abs norm angle'.split(' ')));\n\n}(jStat, Math));\n(function(jStat, Math) {\n\nvar slice = [].slice;\nvar isNumber = jStat.utils.isNumber;\nvar isArray = jStat.utils.isArray;\n\n// flag==true denotes use of sample standard deviation\n// Z Statistics\njStat.extend({\n  // 2 different parameter lists:\n  // (value, mean, sd)\n  // (value, array, flag)\n  zscore: function zscore() {\n    var args = slice.call(arguments);\n    if (isNumber(args[1])) {\n      return (args[0] - args[1]) / args[2];\n    }\n    return (args[0] - jStat.mean(args[1])) / jStat.stdev(args[1], args[2]);\n  },\n\n  // 3 different paramter lists:\n  // (value, mean, sd, sides)\n  // (zscore, sides)\n  // (value, array, sides, flag)\n  ztest: function ztest() {\n    var args = slice.call(arguments);\n    var z;\n    if (isArray(args[1])) {\n      // (value, array, sides, flag)\n      z = jStat.zscore(args[0],args[1],args[3]);\n      return (args[2] === 1) ?\n        (jStat.normal.cdf(-Math.abs(z), 0, 1)) :\n        (jStat.normal.cdf(-Math.abs(z), 0, 1)*2);\n    } else {\n      if (args.length > 2) {\n        // (value, mean, sd, sides)\n        z = jStat.zscore(args[0],args[1],args[2]);\n        return (args[3] === 1) ?\n          (jStat.normal.cdf(-Math.abs(z),0,1)) :\n          (jStat.normal.cdf(-Math.abs(z),0,1)* 2);\n      } else {\n        // (zscore, sides)\n        z = args[0];\n        return (args[1] === 1) ?\n          (jStat.normal.cdf(-Math.abs(z),0,1)) :\n          (jStat.normal.cdf(-Math.abs(z),0,1)*2);\n      }\n    }\n  }\n});\n\njStat.extend(jStat.fn, {\n  zscore: function zscore(value, flag) {\n    return (value - this.mean()) / this.stdev(flag);\n  },\n\n  ztest: function ztest(value, sides, flag) {\n    var zscore = Math.abs(this.zscore(value, flag));\n    return (sides === 1) ?\n      (jStat.normal.cdf(-zscore, 0, 1)) :\n      (jStat.normal.cdf(-zscore, 0, 1) * 2);\n  }\n});\n\n// T Statistics\njStat.extend({\n  // 2 parameter lists\n  // (value, mean, sd, n)\n  // (value, array)\n  tscore: function tscore() {\n    var args = slice.call(arguments);\n    return (args.length === 4) ?\n      ((args[0] - args[1]) / (args[2] / Math.sqrt(args[3]))) :\n      ((args[0] - jStat.mean(args[1])) /\n       (jStat.stdev(args[1], true) / Math.sqrt(args[1].length)));\n  },\n\n  // 3 different paramter lists:\n  // (value, mean, sd, n, sides)\n  // (tscore, n, sides)\n  // (value, array, sides)\n  ttest: function ttest() {\n    var args = slice.call(arguments);\n    var tscore;\n    if (args.length === 5) {\n      tscore = Math.abs(jStat.tscore(args[0], args[1], args[2], args[3]));\n      return (args[4] === 1) ?\n        (jStat.studentt.cdf(-tscore, args[3]-1)) :\n        (jStat.studentt.cdf(-tscore, args[3]-1)*2);\n    }\n    if (isNumber(args[1])) {\n      tscore = Math.abs(args[0])\n      return (args[2] == 1) ?\n        (jStat.studentt.cdf(-tscore, args[1]-1)) :\n        (jStat.studentt.cdf(-tscore, args[1]-1) * 2);\n    }\n    tscore = Math.abs(jStat.tscore(args[0], args[1]))\n    return (args[2] == 1) ?\n      (jStat.studentt.cdf(-tscore, args[1].length-1)) :\n      (jStat.studentt.cdf(-tscore, args[1].length-1) * 2);\n  }\n});\n\njStat.extend(jStat.fn, {\n  tscore: function tscore(value) {\n    return (value - this.mean()) / (this.stdev(true) / Math.sqrt(this.cols()));\n  },\n\n  ttest: function ttest(value, sides) {\n    return (sides === 1) ?\n      (1 - jStat.studentt.cdf(Math.abs(this.tscore(value)), this.cols()-1)) :\n      (jStat.studentt.cdf(-Math.abs(this.tscore(value)), this.cols()-1)*2);\n  }\n});\n\n// F Statistics\njStat.extend({\n  // Paramter list is as follows:\n  // (array1, array2, array3, ...)\n  // or it is an array of arrays\n  // array of arrays conversion\n  anovafscore: function anovafscore() {\n    var args = slice.call(arguments),\n    expVar, sample, sampMean, sampSampMean, tmpargs, unexpVar, i, j;\n    if (args.length === 1) {\n      tmpargs = new Array(args[0].length);\n      for (i = 0; i < args[0].length; i++) {\n        tmpargs[i] = args[0][i];\n      }\n      args = tmpargs;\n    }\n    // Builds sample array\n    sample = new Array();\n    for (i = 0; i < args.length; i++) {\n      sample = sample.concat(args[i]);\n    }\n    sampMean = jStat.mean(sample);\n    // Computes the explained variance\n    expVar = 0;\n    for (i = 0; i < args.length; i++) {\n      expVar = expVar + args[i].length * Math.pow(jStat.mean(args[i]) - sampMean, 2);\n    }\n    expVar /= (args.length - 1);\n    // Computes unexplained variance\n    unexpVar = 0;\n    for (i = 0; i < args.length; i++) {\n      sampSampMean = jStat.mean(args[i]);\n      for (j = 0; j < args[i].length; j++) {\n        unexpVar += Math.pow(args[i][j] - sampSampMean, 2);\n      }\n    }\n    unexpVar /= (sample.length - args.length);\n    return expVar / unexpVar;\n  },\n\n  // 2 different paramter setups\n  // (array1, array2, array3, ...)\n  // (anovafscore, df1, df2)\n  anovaftest: function anovaftest() {\n    var args = slice.call(arguments),\n    df1, df2, n, i;\n    if (isNumber(args[0])) {\n      return 1 - jStat.centralF.cdf(args[0], args[1], args[2]);\n    }\n    var anovafscore = jStat.anovafscore(args);\n    df1 = args.length - 1;\n    n = 0;\n    for (i = 0; i < args.length; i++) {\n      n = n + args[i].length;\n    }\n    df2 = n - df1 - 1;\n    return 1 - jStat.centralF.cdf(anovafscore, df1, df2);\n  },\n\n  ftest: function ftest(fscore, df1, df2) {\n    return 1 - jStat.centralF.cdf(fscore, df1, df2);\n  }\n});\n\njStat.extend(jStat.fn, {\n  anovafscore: function anovafscore() {\n    return jStat.anovafscore(this.toArray());\n  },\n\n  anovaftes: function anovaftes() {\n    var n = 0;\n    var i;\n    for (i = 0; i < this.length; i++) {\n      n = n + this[i].length;\n    }\n    return jStat.ftest(this.anovafscore(), this.length - 1, n - this.length);\n  }\n});\n\n// Tukey's range test\njStat.extend({\n  // 2 parameter lists\n  // (mean1, mean2, n1, n2, sd)\n  // (array1, array2, sd)\n  qscore: function qscore() {\n    var args = slice.call(arguments);\n    var mean1, mean2, n1, n2, sd;\n    if (isNumber(args[0])) {\n        mean1 = args[0];\n        mean2 = args[1];\n        n1 = args[2];\n        n2 = args[3];\n        sd = args[4];\n    } else {\n        mean1 = jStat.mean(args[0]);\n        mean2 = jStat.mean(args[1]);\n        n1 = args[0].length;\n        n2 = args[1].length;\n        sd = args[2];\n    }\n    return Math.abs(mean1 - mean2) / (sd * Math.sqrt((1 / n1 + 1 / n2) / 2));\n  },\n\n  // 3 different parameter lists:\n  // (qscore, n, k)\n  // (mean1, mean2, n1, n2, sd, n, k)\n  // (array1, array2, sd, n, k)\n  qtest: function qtest() {\n    var args = slice.call(arguments);\n\n    var qscore;\n    if (args.length === 3) {\n      qscore = args[0];\n      args = args.slice(1);\n    } else if (args.length === 7) {\n      qscore = jStat.qscore(args[0], args[1], args[2], args[3], args[4]);\n      args = args.slice(5);\n    } else {\n      qscore = jStat.qscore(args[0], args[1], args[2]);\n      args = args.slice(3);\n    }\n\n    var n = args[0];\n    var k = args[1];\n\n    return 1 - jStat.tukey.cdf(qscore, k, n - k);\n  },\n\n  tukeyhsd: function tukeyhsd(arrays) {\n    var sd = jStat.pooledstdev(arrays);\n    var means = arrays.map(function (arr) {return jStat.mean(arr);});\n    var n = arrays.reduce(function (n, arr) {return n + arr.length;}, 0);\n\n    var results = [];\n    for (var i = 0; i < arrays.length; ++i) {\n        for (var j = i + 1; j < arrays.length; ++j) {\n            var p = jStat.qtest(means[i], means[j], arrays[i].length, arrays[j].length, sd, n, arrays.length);\n            results.push([[i, j], p]);\n        }\n    }\n\n    return results;\n  }\n});\n\n// Error Bounds\njStat.extend({\n  // 2 different parameter setups\n  // (value, alpha, sd, n)\n  // (value, alpha, array)\n  normalci: function normalci() {\n    var args = slice.call(arguments),\n    ans = new Array(2),\n    change;\n    if (args.length === 4) {\n      change = Math.abs(jStat.normal.inv(args[1] / 2, 0, 1) *\n                        args[2] / Math.sqrt(args[3]));\n    } else {\n      change = Math.abs(jStat.normal.inv(args[1] / 2, 0, 1) *\n                        jStat.stdev(args[2]) / Math.sqrt(args[2].length));\n    }\n    ans[0] = args[0] - change;\n    ans[1] = args[0] + change;\n    return ans;\n  },\n\n  // 2 different parameter setups\n  // (value, alpha, sd, n)\n  // (value, alpha, array)\n  tci: function tci() {\n    var args = slice.call(arguments),\n    ans = new Array(2),\n    change;\n    if (args.length === 4) {\n      change = Math.abs(jStat.studentt.inv(args[1] / 2, args[3] - 1) *\n                        args[2] / Math.sqrt(args[3]));\n    } else {\n      change = Math.abs(jStat.studentt.inv(args[1] / 2, args[2].length - 1) *\n                        jStat.stdev(args[2], true) / Math.sqrt(args[2].length));\n    }\n    ans[0] = args[0] - change;\n    ans[1] = args[0] + change;\n    return ans;\n  },\n\n  significant: function significant(pvalue, alpha) {\n    return pvalue < alpha;\n  }\n});\n\njStat.extend(jStat.fn, {\n  normalci: function normalci(value, alpha) {\n    return jStat.normalci(value, alpha, this.toArray());\n  },\n\n  tci: function tci(value, alpha) {\n    return jStat.tci(value, alpha, this.toArray());\n  }\n});\n\n// internal method for calculating the z-score for a difference of proportions test\nfunction differenceOfProportions(p1, n1, p2, n2) {\n  if (p1 > 1 || p2 > 1 || p1 <= 0 || p2 <= 0) {\n    throw new Error(\"Proportions should be greater than 0 and less than 1\")\n  }\n  var pooled = (p1 * n1 + p2 * n2) / (n1 + n2);\n  var se = Math.sqrt(pooled * (1 - pooled) * ((1/n1) + (1/n2)));\n  return (p1 - p2) / se;\n}\n\n// Difference of Proportions\njStat.extend(jStat.fn, {\n  oneSidedDifferenceOfProportions: function oneSidedDifferenceOfProportions(p1, n1, p2, n2) {\n    var z = differenceOfProportions(p1, n1, p2, n2);\n    return jStat.ztest(z, 1);\n  },\n\n  twoSidedDifferenceOfProportions: function twoSidedDifferenceOfProportions(p1, n1, p2, n2) {\n    var z = differenceOfProportions(p1, n1, p2, n2);\n    return jStat.ztest(z, 2);\n  }\n});\n\n}(jStat, Math));\njStat.models = (function(){\n  function sub_regress(exog) {\n    var var_count = exog[0].length;\n    var modelList = jStat.arange(var_count).map(function(endog_index) {\n      var exog_index =\n          jStat.arange(var_count).filter(function(i){return i!==endog_index});\n      return ols(jStat.col(exog, endog_index).map(function(x){ return x[0] }),\n                 jStat.col(exog, exog_index))\n    });\n    return modelList;\n  }\n\n  // do OLS model regress\n  // exog have include const columns ,it will not generate it .In fact, exog is\n  // \"design matrix\" look at\n  //https://en.wikipedia.org/wiki/Design_matrix\n  function ols(endog, exog) {\n    var nobs = endog.length;\n    var df_model = exog[0].length - 1;\n    var df_resid = nobs-df_model - 1;\n    var coef = jStat.lstsq(exog, endog);\n    var predict =\n        jStat.multiply(exog, coef.map(function(x) { return [x] }))\n            .map(function(p) { return p[0] });\n    var resid = jStat.subtract(endog, predict);\n    var ybar = jStat.mean(endog);\n    // constant cause problem\n    // var SST = jStat.sum(endog.map(function(y) {\n    //   return Math.pow(y-ybar,2);\n    // }));\n    var SSE = jStat.sum(predict.map(function(f) {\n      return Math.pow(f - ybar, 2);\n    }));\n    var SSR = jStat.sum(endog.map(function(y, i) {\n      return Math.pow(y - predict[i], 2);\n    }));\n    var SST = SSE + SSR;\n    var R2 = (SSE / SST);\n    return {\n        exog:exog,\n        endog:endog,\n        nobs:nobs,\n        df_model:df_model,\n        df_resid:df_resid,\n        coef:coef,\n        predict:predict,\n        resid:resid,\n        ybar:ybar,\n        SST:SST,\n        SSE:SSE,\n        SSR:SSR,\n        R2:R2\n    };\n  }\n\n  // H0: b_I=0\n  // H1: b_I!=0\n  function t_test(model) {\n    var subModelList = sub_regress(model.exog);\n    //var sigmaHat=jStat.stdev(model.resid);\n    var sigmaHat = Math.sqrt(model.SSR / (model.df_resid));\n    var seBetaHat = subModelList.map(function(mod) {\n      var SST = mod.SST;\n      var R2 = mod.R2;\n      return sigmaHat / Math.sqrt(SST * (1 - R2));\n    });\n    var tStatistic = model.coef.map(function(coef, i) {\n      return (coef - 0) / seBetaHat[i];\n    });\n    var pValue = tStatistic.map(function(t) {\n      var leftppf = jStat.studentt.cdf(t, model.df_resid);\n      return (leftppf > 0.5 ? 1 - leftppf : leftppf) * 2;\n    });\n    var c = jStat.studentt.inv(0.975, model.df_resid);\n    var interval95 = model.coef.map(function(coef, i) {\n      var d = c * seBetaHat[i];\n      return [coef - d, coef + d];\n    })\n    return {\n        se: seBetaHat,\n        t: tStatistic,\n        p: pValue,\n        sigmaHat: sigmaHat,\n        interval95: interval95\n    };\n  }\n\n  function F_test(model) {\n    var F_statistic =\n        (model.R2 / model.df_model) / ((1 - model.R2) / model.df_resid);\n    var fcdf = function(x, n1, n2) {\n      return jStat.beta.cdf(x / (n2 / n1 + x), n1 / 2, n2 / 2)\n    }\n    var pvalue = 1 - fcdf(F_statistic, model.df_model, model.df_resid);\n    return { F_statistic: F_statistic, pvalue: pvalue };\n  }\n\n  function ols_wrap(endog, exog) {\n    var model = ols(endog,exog);\n    var ttest = t_test(model);\n    var ftest = F_test(model);\n    // Provide the Wherry / Ezekiel / McNemar / Cohen Adjusted R^2\n    // Which matches the 'adjusted R^2' provided by R's lm package\n    var adjust_R2 =\n        1 - (1 - model.R2) * ((model.nobs - 1) / (model.df_resid));\n    model.t = ttest;\n    model.f = ftest;\n    model.adjust_R2 = adjust_R2;\n    return model;\n  }\n\n  return { ols: ols_wrap };\n})();\n//To regress, simply build X matrix\n//(append column of 1's) using\n//buildxmatrix and build the Y\n//matrix using buildymatrix\n//(simply the transpose)\n//and run regress.\n\n\n\n//Regressions\n\njStat.extend({\n  buildxmatrix: function buildxmatrix(){\n    //Parameters will be passed in as such\n    //(array1,array2,array3,...)\n    //as (x1,x2,x3,...)\n    //needs to be (1,x1,x2,x3,...)\n    var matrixRows = new Array(arguments.length);\n    for(var i=0;i<arguments.length;i++){\n      var array = [1];\n      matrixRows[i]= array.concat(arguments[i]);\n    }\n    return jStat(matrixRows);\n\n  },\n\n  builddxmatrix: function builddxmatrix() {\n    //Paramters will be passed in as such\n    //([array1,array2,...]\n    var matrixRows = new Array(arguments[0].length);\n    for(var i=0;i<arguments[0].length;i++){\n      var array = [1]\n      matrixRows[i]= array.concat(arguments[0][i]);\n    }\n    return jStat(matrixRows);\n\n  },\n\n  buildjxmatrix: function buildjxmatrix(jMat) {\n    //Builds from jStat Matrix\n    var pass = new Array(jMat.length)\n    for(var i=0;i<jMat.length;i++){\n      pass[i] = jMat[i];\n    }\n    return jStat.builddxmatrix(pass);\n\n  },\n\n  buildymatrix: function buildymatrix(array){\n    return jStat(array).transpose();\n  },\n\n  buildjymatrix: function buildjymatrix(jMat){\n    return jMat.transpose();\n  },\n\n  matrixmult: function matrixmult(A,B){\n    var i, j, k, result, sum;\n    if (A.cols() == B.rows()) {\n      if(B.rows()>1){\n        result = [];\n        for (i = 0; i < A.rows(); i++) {\n          result[i] = [];\n          for (j = 0; j < B.cols(); j++) {\n            sum = 0;\n            for (k = 0; k < A.cols(); k++) {\n              sum += A.toArray()[i][k] * B.toArray()[k][j];\n            }\n            result[i][j] = sum;\n          }\n        }\n        return jStat(result);\n      }\n      result = [];\n      for (i = 0; i < A.rows(); i++) {\n        result[i] = [];\n        for (j = 0; j < B.cols(); j++) {\n          sum = 0;\n          for (k = 0; k < A.cols(); k++) {\n            sum += A.toArray()[i][k] * B.toArray()[j];\n          }\n          result[i][j] = sum;\n        }\n      }\n      return jStat(result);\n    }\n  },\n\n  //regress and regresst to be fixed\n\n  regress: function regress(jMatX,jMatY){\n    //print(\"regressin!\");\n    //print(jMatX.toArray());\n    var innerinv = jStat.xtranspxinv(jMatX);\n    //print(innerinv);\n    var xtransp = jMatX.transpose();\n    var next = jStat.matrixmult(jStat(innerinv),xtransp);\n    return jStat.matrixmult(next,jMatY);\n\n  },\n\n  regresst: function regresst(jMatX,jMatY,sides){\n    var beta = jStat.regress(jMatX,jMatY);\n\n    var compile = {};\n    compile.anova = {};\n    var jMatYBar = jStat.jMatYBar(jMatX, beta);\n    compile.yBar = jMatYBar;\n    var yAverage = jMatY.mean();\n    compile.anova.residuals = jStat.residuals(jMatY, jMatYBar);\n\n    compile.anova.ssr = jStat.ssr(jMatYBar, yAverage);\n    compile.anova.msr = compile.anova.ssr / (jMatX[0].length - 1);\n\n    compile.anova.sse = jStat.sse(jMatY, jMatYBar);\n    compile.anova.mse =\n        compile.anova.sse / (jMatY.length - (jMatX[0].length - 1) - 1);\n\n    compile.anova.sst = jStat.sst(jMatY, yAverage);\n    compile.anova.mst = compile.anova.sst / (jMatY.length - 1);\n\n    compile.anova.r2 = 1 - (compile.anova.sse / compile.anova.sst);\n    if (compile.anova.r2 < 0) compile.anova.r2 = 0;\n\n    compile.anova.fratio = compile.anova.msr / compile.anova.mse;\n    compile.anova.pvalue =\n        jStat.anovaftest(compile.anova.fratio,\n                         jMatX[0].length - 1,\n                         jMatY.length - (jMatX[0].length - 1) - 1);\n\n    compile.anova.rmse = Math.sqrt(compile.anova.mse);\n\n    compile.anova.r2adj = 1 - (compile.anova.mse / compile.anova.mst);\n    if (compile.anova.r2adj < 0) compile.anova.r2adj = 0;\n\n    compile.stats = new Array(jMatX[0].length);\n    var covar = jStat.xtranspxinv(jMatX);\n    var sds, ts, ps;\n\n    for(var i=0; i<beta.length;i++){\n      sds=Math.sqrt(compile.anova.mse * Math.abs(covar[i][i]));\n      ts= Math.abs(beta[i] / sds);\n      ps= jStat.ttest(ts, jMatY.length - jMatX[0].length - 1, sides);\n\n      compile.stats[i]=[beta[i], sds, ts, ps];\n    }\n\n    compile.regress = beta;\n    return compile;\n  },\n\n  xtranspx: function xtranspx(jMatX){\n    return jStat.matrixmult(jMatX.transpose(),jMatX);\n  },\n\n\n  xtranspxinv: function xtranspxinv(jMatX){\n    var inner = jStat.matrixmult(jMatX.transpose(),jMatX);\n    var innerinv = jStat.inv(inner);\n    return innerinv;\n  },\n\n  jMatYBar: function jMatYBar(jMatX, beta) {\n    var yBar = jStat.matrixmult(jMatX, beta);\n    return new jStat(yBar);\n  },\n\n  residuals: function residuals(jMatY, jMatYBar) {\n    return jStat.matrixsubtract(jMatY, jMatYBar);\n  },\n\n  ssr: function ssr(jMatYBar, yAverage) {\n    var ssr = 0;\n    for(var i = 0; i < jMatYBar.length; i++) {\n      ssr += Math.pow(jMatYBar[i] - yAverage, 2);\n    }\n    return ssr;\n  },\n\n  sse: function sse(jMatY, jMatYBar) {\n    var sse = 0;\n    for(var i = 0; i < jMatY.length; i++) {\n      sse += Math.pow(jMatY[i] - jMatYBar[i], 2);\n    }\n    return sse;\n  },\n\n  sst: function sst(jMatY, yAverage) {\n    var sst = 0;\n    for(var i = 0; i < jMatY.length; i++) {\n      sst += Math.pow(jMatY[i] - yAverage, 2);\n    }\n    return sst;\n  },\n\n  matrixsubtract: function matrixsubtract(A,B){\n    var ans = new Array(A.length);\n    for(var i=0;i<A.length;i++){\n      ans[i] = new Array(A[i].length);\n      for(var j=0;j<A[i].length;j++){\n        ans[i][j]=A[i][j]-B[i][j];\n      }\n    }\n    return jStat(ans);\n  }\n});\n  // Make it compatible with previous version.\n  jStat.jStat = jStat;\n\n  return jStat;\n});\n", "const FormulaError = require('../error');\r\nconst TextFunctions = require('./text');\r\nconst {FormulaHelpers, Types} = require('../helpers');\r\nconst H = FormulaHelpers;\r\nconst bessel = require(\"bessel\");\r\nconst jStat = require(\"jstat\");\r\nconst MAX_OCT = 536870911, // OCT2DEC(3777777777)\r\n    MIN_OCT = -536870912, // OCT2DEC4000000000)\r\n    MAX_HEX = 549755813887,\r\n    MIN_HEX = -549755813888,\r\n    MAX_BIN = 511, // BIN2DEC(111111111)\r\n    MIN_BIN = -512; // BIN2DEC(1000000000)\r\n\r\nconst numberRegex = /^\\s?[+-]?\\s?[0-9]+[.]?[0-9]*([eE][+\\-][0-9]+)?\\s?$/;\r\nconst IMWithoutRealRegex = /^\\s?([+-]?\\s?([0-9]+[.]?[0-9]*([eE][+\\-][0-9]+)?)?)\\s?[ij]\\s?$/;\r\nconst IMRegex = /^\\s?([+-]?\\s?[0-9]+[.]?[0-9]*([eE][+\\-][0-9]+)?)\\s?([+-]?\\s?([0-9]+[.]?[0-9]*([eE][+\\-][0-9]+)?)?)\\s?[ij]\\s?$/;\r\n\r\nfunction parseIM(textOrNumber) {\r\n    textOrNumber = H.accept(textOrNumber);\r\n    let real = 0, im = 0, unit = 'i';\r\n    if (typeof textOrNumber === \"number\")\r\n        return {real: textOrNumber, im, unit};\r\n    if (typeof textOrNumber === \"boolean\")\r\n        throw FormulaError.VALUE;\r\n    let match = textOrNumber.match(numberRegex);\r\n    if (match) {\r\n        real = Number(match[0]);\r\n        return {real, im, unit};\r\n    }\r\n    match = textOrNumber.match(IMWithoutRealRegex);\r\n    if (match) {\r\n        im = Number(/^\\s?[+-]?\\s?$/.test(match[1]) ? match[1] + '1' : match[1]);\r\n        unit = match[0].slice(-1);\r\n        return {real, im, unit};\r\n    }\r\n    match = textOrNumber.match(IMRegex);\r\n    if (match) {\r\n        real = Number(match[1]);\r\n        im = Number(/^\\s?[+-]?\\s?$/.test(match[3]) ? match[3] + '1' : match[3]);\r\n        unit = match[0].slice(-1);\r\n        return {real, im, unit};\r\n    }\r\n    throw FormulaError.NUM;\r\n}\r\n\r\nconst EngineeringFunctions = {\r\n    BESSELI: (x, n) => {\r\n        x = H.accept(x, Types.NUMBER_NO_BOOLEAN);\r\n        n = H.accept(n, Types.NUMBER_NO_BOOLEAN);\r\n        // if n is not an integer, it is truncated.\r\n        n = Math.trunc(n);\r\n        if (n < 0) {\r\n            throw FormulaError.NUM;\r\n        }\r\n        return bessel.besseli(x, n);\r\n    },\r\n\r\n    BESSELJ: (x, n) => {\r\n        x = H.accept(x, Types.NUMBER_NO_BOOLEAN);\r\n        n = H.accept(n, Types.NUMBER_NO_BOOLEAN);\r\n        // if n is not an integer, it is truncated.\r\n        n = Math.trunc(n);\r\n        if (n < 0) {\r\n            throw FormulaError.NUM;\r\n        }\r\n        return bessel.besselj(x, n);\r\n    },\r\n\r\n    BESSELK: (x, n) => {\r\n        x = H.accept(x, Types.NUMBER_NO_BOOLEAN);\r\n        n = H.accept(n, Types.NUMBER_NO_BOOLEAN);\r\n        // if n is not an integer, it is truncated.\r\n        n = Math.trunc(n);\r\n        if (n < 0) {\r\n            throw FormulaError.NUM;\r\n        }\r\n\r\n        return bessel.besselk(x, n);\r\n    },\r\n\r\n    BESSELY: (x, n) => {\r\n        x = H.accept(x, Types.NUMBER_NO_BOOLEAN);\r\n        n = H.accept(n, Types.NUMBER_NO_BOOLEAN);\r\n        // if n is not an integer, it is truncated.\r\n        n = Math.trunc(n);\r\n        if (n < 0) {\r\n            throw FormulaError.NUM;\r\n        }\r\n\r\n        return bessel.bessely(x, n);\r\n    },\r\n\r\n    BIN2DEC: (number) => {\r\n        number = H.accept(number, Types.NUMBER_NO_BOOLEAN);\r\n        let numberStr = number.toString();\r\n\r\n        if (numberStr.length > 10) {\r\n            throw FormulaError.NUM;\r\n        }\r\n\r\n        if (numberStr.length === 10 && numberStr.substring(0, 1) === '1') {\r\n            return parseInt(numberStr.substring(1), 2) + MIN_BIN;\r\n        } else {\r\n            return parseInt(numberStr, 2);\r\n        }\r\n    },\r\n\r\n    BIN2HEX: (number, places) => {\r\n        number = H.accept(number, Types.NUMBER_NO_BOOLEAN);\r\n        places = H.accept(places, Types.NUMBER_NO_BOOLEAN, null);\r\n\r\n        const numberStr = number.toString();\r\n        if (numberStr.length > 10) {\r\n            throw FormulaError.NUM;\r\n        }\r\n        if (numberStr.length === 10 && numberStr.substring(0, 1) === '1') {\r\n            return (parseInt(numberStr.substring(1), 2) + 1099511627264).toString(16).toUpperCase();\r\n        }\r\n        // convert BIN to HEX\r\n        const result = parseInt(number, 2).toString(16);\r\n\r\n        if (places == null) {\r\n            return result.toUpperCase();\r\n        } else {\r\n            if (places < 0) {\r\n                throw FormulaError.NUM;\r\n            }\r\n            // truncate places in case it is not an integer\r\n            places = Math.trunc(places);\r\n            if (places >= result.length) {\r\n                return (TextFunctions.REPT('0', places - result.length) + result).toUpperCase();\r\n            } else {\r\n                throw FormulaError.NUM;\r\n            }\r\n        }\r\n    },\r\n\r\n    BIN2OCT: (number, places) => {\r\n        number = H.accept(number, Types.NUMBER_NO_BOOLEAN);\r\n        places = H.accept(places, Types.NUMBER, null);\r\n\r\n        let numberStr = number.toString();\r\n        if (numberStr.length > 10) {\r\n            throw FormulaError.NUM;\r\n        }\r\n        if (numberStr.length === 10 && numberStr.substr(0, 1) === \"1\") {\r\n            return (parseInt(numberStr.substr(1), 2) + 1073741312).toString(8);\r\n        }\r\n\r\n        let result = parseInt(number, 2).toString(8);\r\n        if (places == null) {\r\n            return result.toUpperCase();\r\n        } else {\r\n            if (places < 0) {\r\n                throw FormulaError.NUM;\r\n            }\r\n            // truncate places in case it is not an integer\r\n            places = Math.trunc(places);\r\n            if (places >= result.length) {\r\n                return (TextFunctions.REPT('0', places - result.length) + result);\r\n            } else {\r\n                throw FormulaError.NUM;\r\n            }\r\n        }\r\n    },\r\n\r\n    BITAND: (number1, number2) => {\r\n        number1 = H.accept(number1, Types.NUMBER);\r\n        number2 = H.accept(number2, Types.NUMBER);\r\n        if (number1 < 0 || number2 < 0) {\r\n            throw FormulaError.NUM;\r\n        }\r\n        // check if they are non-integer, if yes, return error\r\n        if (Math.floor(number1) !== number1 || Math.floor(number2) !== number2) {\r\n            throw FormulaError.NUM;\r\n        }\r\n        if (number1 > 281474976710655 || number2 > 281474976710655) {\r\n            throw FormulaError.NUM;\r\n        }\r\n\r\n        return number1 & number2;\r\n    },\r\n\r\n    BITLSHIFT: (number, shiftAmount) => {\r\n        number = H.accept(number, Types.NUMBER);\r\n        shiftAmount = H.accept(shiftAmount, Types.NUMBER);\r\n        shiftAmount = Math.trunc(shiftAmount);\r\n        if (Math.abs(shiftAmount) > 53) {\r\n            throw FormulaError.NUM;\r\n        }\r\n\r\n        if (number < 0 || Math.floor(number) !== number || number > 281474976710655) {\r\n            throw FormulaError.NUM;\r\n        }\r\n        const result = (shiftAmount >= 0) ? number * 2 ** shiftAmount : Math.trunc(number / 2 ** -shiftAmount);\r\n        if (result > 281474976710655)\r\n            throw FormulaError.NUM;\r\n        else\r\n            return result;\r\n    },\r\n\r\n    BITOR: (number1, number2) => {\r\n        number1 = H.accept(number1, Types.NUMBER);\r\n        number2 = H.accept(number2, Types.NUMBER);\r\n        if (number1 < 0 || number2 < 0) {\r\n            throw FormulaError.NUM;\r\n        }\r\n        // check if they are non-integer, if yes, return error\r\n        if (Math.floor(number1) !== number1 || Math.floor(number2) !== number2) {\r\n            throw FormulaError.NUM;\r\n        }\r\n        if (number1 > 281474976710655 || number2 > 281474976710655) {\r\n            throw FormulaError.NUM;\r\n        }\r\n\r\n        return number1 | number2;\r\n    },\r\n\r\n    BITRSHIFT: (number, shiftAmount) => {\r\n        number = H.accept(number, Types.NUMBER);\r\n        shiftAmount = H.accept(shiftAmount, Types.NUMBER);\r\n        return EngineeringFunctions.BITLSHIFT(number, -shiftAmount);\r\n    },\r\n\r\n    BITXOR: (number1, number2) => {\r\n        number1 = H.accept(number1, Types.NUMBER);\r\n        number2 = H.accept(number2, Types.NUMBER);\r\n        if (number1 < 0 || number1 > 281474976710655 || Math.floor(number1) !== number1) {\r\n            throw FormulaError.NUM;\r\n        }\r\n        if (number2 < 0 || number2 > 281474976710655 || Math.floor(number2) !== number2) {\r\n            throw FormulaError.NUM;\r\n        }\r\n        // // to check if the number is a non-integer\r\n        // if (Math.abs(number1) !== number1 || Math.abs(number2) !== number2) {\r\n        //     throw FormulaError.NUM;\r\n        // }\r\n\r\n        return number1 ^ number2;\r\n    },\r\n\r\n    COMPLEX: (realNum, iNum, suffix) => {\r\n        realNum = H.accept(realNum, Types.NUMBER_NO_BOOLEAN);\r\n        iNum = H.accept(iNum, Types.NUMBER_NO_BOOLEAN);\r\n        suffix = H.accept(suffix, Types.STRING, \"i\");\r\n        if (suffix !== \"i\" && suffix !== \"j\") {\r\n            throw FormulaError.VALUE;\r\n        }\r\n        if (realNum === 0 && iNum === 0) {\r\n            return 0;\r\n        } else if (realNum === 0) {\r\n            if (iNum === 1) {\r\n                return suffix;\r\n            } else if (iNum === -1) {\r\n                return \"-\" + suffix;\r\n            } else {\r\n                return iNum.toString() + suffix;\r\n            }\r\n        } else if (iNum === 0) {\r\n            return realNum.toString()\r\n        } else {\r\n            let sign = (iNum > 0) ? \"+\" : \"\";\r\n            if (iNum === 1) {\r\n                return realNum.toString() + sign + suffix;\r\n            } else if (iNum === -1) {\r\n                return realNum.toString() + sign + \"-\" + suffix;\r\n            } else {\r\n                return realNum.toString() + sign + iNum.toString() + suffix;\r\n            }\r\n        }\r\n    },\r\n\r\n    DEC2BIN: (number, places) => {\r\n        number = H.accept(number, Types.NUMBER);\r\n        places = H.accept(places, Types.NUMBER, null);\r\n        if (number < MIN_BIN || number > MAX_BIN) {\r\n            throw FormulaError.NUM;\r\n        }\r\n\r\n        // if the number is negative, valid place values are ignored and it returns a 10-character binary number.\r\n        if (number < 0) {\r\n            return \"1\" + TextFunctions.REPT(\"0\", 9 - (512 + number).toString(2).length) + (512 + number).toString(2);\r\n        }\r\n\r\n        let result = parseInt(number, 10).toString(2);\r\n        if (places == null) {\r\n            return result;\r\n        } else {\r\n            // if places is not an integer, it is truncated\r\n            places = Math.trunc(places);\r\n            if (places <= 0) {\r\n                throw FormulaError.NUM;\r\n            }\r\n            if (places < result.length)\r\n                throw FormulaError.NUM;\r\n            return TextFunctions.REPT(\"0\", places - result.length) + result;\r\n        }\r\n    },\r\n\r\n    DEC2HEX: (number, places) => {\r\n        number = H.accept(number, Types.NUMBER);\r\n        places = H.accept(places, Types.NUMBER, null);\r\n        if (number < -549755813888 || number > 549755813888) {\r\n            throw FormulaError.NUM;\r\n        }\r\n\r\n        // if the number is negative, valid place values are ignored and it returns a 10-character binary number.\r\n        if (number < 0) {\r\n            return (1099511627776 + number).toString(16).toUpperCase();\r\n        }\r\n\r\n        let result = parseInt(number, 10).toString(16);\r\n\r\n        if (places == null) {\r\n            return result.toUpperCase();\r\n        } else {\r\n            // if places is not an integer, it is truncated\r\n            places = Math.trunc(places);\r\n            if (places <= 0) {\r\n                throw FormulaError.NUM;\r\n            }\r\n            if (places < result.length)\r\n                throw FormulaError.NUM;\r\n            return TextFunctions.REPT(\"0\", places - result.length) + result.toUpperCase();\r\n        }\r\n    },\r\n\r\n    DEC2OCT: (number, places) => {\r\n        number = H.accept(number, Types.NUMBER);\r\n        places = H.accept(places, Types.NUMBER, null);\r\n        if (number < -536870912 || number > 536870912) {\r\n            throw FormulaError.NUM;\r\n        }\r\n\r\n        // if the number is negative, valid place values are ignored and it returns a 10-character binary number.\r\n        if (number < 0) {\r\n            return (number + 1073741824).toString(8);\r\n        }\r\n\r\n        let result = parseInt(number, 10).toString(8);\r\n\r\n        if (places == null) {\r\n            return result.toUpperCase();\r\n        } else {\r\n            // if places is not an integer, it is truncated\r\n            places = Math.trunc(places);\r\n            if (places <= 0) {\r\n                throw FormulaError.NUM;\r\n            }\r\n            if (places < result.length)\r\n                throw FormulaError.NUM;\r\n            return TextFunctions.REPT(\"0\", places - result.length) + result;\r\n        }\r\n    },\r\n\r\n    DELTA: (number1, number2) => {\r\n        number1 = H.accept(number1, Types.NUMBER_NO_BOOLEAN);\r\n        number2 = H.accept(number2, Types.NUMBER_NO_BOOLEAN, 0);\r\n\r\n        return number1 === number2 ? 1 : 0;\r\n    },\r\n\r\n    ERF: (lowerLimit, upperLimit) => {\r\n        lowerLimit = H.accept(lowerLimit, Types.NUMBER_NO_BOOLEAN);\r\n        upperLimit = H.accept(upperLimit, Types.NUMBER_NO_BOOLEAN, 0);\r\n        return jStat.erf(lowerLimit);\r\n    },\r\n\r\n    ERFC: (x) => {\r\n        x = H.accept(x, Types.NUMBER_NO_BOOLEAN);\r\n        return jStat.erfc(x);\r\n    },\r\n\r\n    GESTEP: (number, step) => {\r\n        number = H.accept(number, Types.NUMBER_NO_BOOLEAN);\r\n        step = H.accept(step, Types.NUMBER_NO_BOOLEAN, 0);\r\n        return number >= step ? 1 : 0;\r\n    },\r\n\r\n    HEX2BIN: (number, places) => {\r\n        number = H.accept(number, Types.STRING);\r\n        places = H.accept(places, Types.NUMBER, null);\r\n\r\n        if (number.length > 10 || !/^[0-9a-fA-F]*$/.test(number)) {\r\n            throw FormulaError.NUM;\r\n        }\r\n        // to check if the number is negative\r\n        let ifNegative = (number.length === 10 && number.substr(0, 1).toLowerCase() === \"f\");\r\n        // convert HEX to DEC\r\n        let toDecimal = ifNegative ? parseInt(number, 16) - 1099511627776 : parseInt(number, 16);\r\n        // if number is lower than -512 or grater than 511, return error\r\n        if (toDecimal < MIN_BIN || toDecimal > MAX_BIN) {\r\n            throw FormulaError.NUM;\r\n        }\r\n        // if the number is negative, valid place values are ignored and it returns a 10-character binary number.\r\n        if (ifNegative) {\r\n            return \"1\" + TextFunctions.REPT('0', 9 - (toDecimal + 512).toString(2).length) + (toDecimal + 512).toString(2)\r\n        }\r\n        // convert decimal to binary\r\n        let toBinary = toDecimal.toString(2);\r\n\r\n        if (places == null) {\r\n            return toBinary;\r\n        } else {\r\n            // if places is not an integer, it is truncated\r\n            places = Math.trunc(places);\r\n            if (places <= 0 || places < toBinary.length) {\r\n                throw FormulaError.NUM;\r\n            }\r\n            return TextFunctions.REPT(\"0\", places - toBinary.length) + toBinary;\r\n        }\r\n    },\r\n\r\n    HEX2DEC: (number) => {\r\n        number = H.accept(number, Types.STRING);\r\n        if (number.length > 10 || !/^[0-9a-fA-F]*$/.test(number)) {\r\n            throw FormulaError.NUM;\r\n        }\r\n        let result = parseInt(number, 16);\r\n        //david: validate\r\n        // If the places is larger than 10, or number is larger than, return #NUM!\r\n        // If number is not a valid Hex number,  returns the #NUM! error value.\r\n\r\n        return (result >= 549755813888) ? result - 1099511627776 : result;\r\n    },\r\n\r\n    HEX2OCT: (number, places) => {\r\n        number = H.accept(number, Types.STRING);\r\n        if (number.length > 10 || !/^[0-9a-fA-F]*$/.test(number)) {\r\n            throw FormulaError.NUM;\r\n        }\r\n        // convert HEX to DEC\r\n        let toDecimal = EngineeringFunctions.HEX2DEC(number);\r\n        if (toDecimal > MAX_OCT || toDecimal < MIN_OCT) {\r\n            throw FormulaError.NUM;\r\n        }\r\n        return EngineeringFunctions.DEC2OCT(toDecimal, places);\r\n    },\r\n\r\n    IMABS: (iNumber) => {\r\n        const {real, im} = parseIM(iNumber);\r\n        return Math.sqrt(Math.pow(real, 2) + Math.pow(im, 2));\r\n    },\r\n\r\n    IMAGINARY: (iNumber) => {\r\n        return parseIM(iNumber).im;\r\n    },\r\n\r\n    IMARGUMENT: (iNumber) => {\r\n        const {real, im} = parseIM(iNumber);\r\n        // x + yi => x cannot be 0, since theta = tan-1(y / x)\r\n        if (real === 0 && im === 0) {\r\n            throw FormulaError.DIV0;\r\n        }\r\n        // return PI/2 if x is equal to 0 and y is positive\r\n        if (real === 0 && im > 0) {\r\n            return Math.PI / 2;\r\n        }\r\n        // while return -PI/2 if x is equal to 0 and y is negative\r\n        if (real === 0 && im < 0) {\r\n            return -Math.PI / 2;\r\n        }\r\n        // return -PI if x is negative and y is equal to 0\r\n        if (real < 0 && im === 0) {\r\n            return Math.PI\r\n        }\r\n        // return 0 if x is positive and y is equal to 0\r\n        if (real > 0 && im === 0) {\r\n            return 0;\r\n        }\r\n        // return argument of iNumber\r\n        if (real > 0) {\r\n            return Math.atan(im / real);\r\n        } else if (real < 0 && im > 0) {\r\n            return Math.atan(im / real) + Math.PI;\r\n        } else {\r\n            return Math.atan(im / real) - Math.PI;\r\n        }\r\n\r\n    },\r\n\r\n    IMCONJUGATE: (iNumber) => {\r\n        const {real, im, unit} = parseIM(iNumber);\r\n        return (im !== 0) ? EngineeringFunctions.COMPLEX(real, -im, unit) : '' + real;\r\n    },\r\n\r\n    IMCOS: (iNumber) => {\r\n        const {real, im, unit} = parseIM(iNumber);\r\n        let realInput = Math.cos(real) * (Math.exp(im) + Math.exp(-im)) / 2;\r\n        let imaginaryInput = -Math.sin(real) * (Math.exp(im) - Math.exp(-im)) / 2;\r\n\r\n        return EngineeringFunctions.COMPLEX(realInput, imaginaryInput, unit);\r\n    },\r\n\r\n    IMCOSH: (iNumber) => {\r\n        const {real, im, unit} = parseIM(iNumber);\r\n        let realInput = Math.cos(im) * (Math.exp(real) + Math.exp(-real)) / 2;\r\n        let imaginaryInput = -Math.sin(im) * (Math.exp(real) - Math.exp(-real)) / 2;\r\n        return EngineeringFunctions.COMPLEX(realInput, -imaginaryInput, unit);\r\n    },\r\n\r\n    IMCOT: (iNumber) => {\r\n        iNumber = H.accept(iNumber);\r\n        let real = EngineeringFunctions.IMCOS(iNumber);\r\n        let imaginary = EngineeringFunctions.IMSIN(iNumber);\r\n        return EngineeringFunctions.IMDIV(real, imaginary);\r\n    },\r\n\r\n    IMCSC: (iNumber) => {\r\n        iNumber = H.accept(iNumber);\r\n        return EngineeringFunctions.IMDIV('1', EngineeringFunctions.IMSIN(iNumber));\r\n    },\r\n\r\n    IMCSCH: (iNumber) => {\r\n        iNumber = H.accept(iNumber);\r\n        return EngineeringFunctions.IMDIV('1', EngineeringFunctions.IMSINH(iNumber));\r\n    },\r\n\r\n    IMDIV: (iNumber1, iNumber2) => {\r\n        const res1 = parseIM(iNumber1);\r\n        const a = res1.real, b = res1.im, unit1 = res1.unit;\r\n\r\n        const res2 = parseIM(iNumber2);\r\n        const c = res2.real, d = res2.im, unit2 = res2.unit;\r\n\r\n        if (c === 0 && d === 0 || unit1 !== unit2) {\r\n            throw FormulaError.NUM;\r\n        }\r\n        let unit = unit1;\r\n\r\n        let denominator = Math.pow(c, 2) + Math.pow(d, 2);\r\n        return EngineeringFunctions.COMPLEX((a * c + b * d) / denominator, (b * c - a * d) / denominator, unit);\r\n    },\r\n\r\n    IMEXP: (iNumber) => {\r\n        const {real, im, unit} = parseIM(iNumber);\r\n        // return exponential of complex number\r\n        let e = Math.exp(real);\r\n        return EngineeringFunctions.COMPLEX(e * Math.cos(im), e * Math.sin(im), unit)\r\n    },\r\n\r\n    IMLN: (iNumber) => {\r\n        const {real, im, unit} = parseIM(iNumber);\r\n        return EngineeringFunctions.COMPLEX(Math.log(Math.sqrt(Math.pow(real, 2) + Math.pow(im, 2))),\r\n            Math.atan(im / real), unit);\r\n    },\r\n\r\n    IMLOG10: (iNumber) => {\r\n        const {real, im, unit} = parseIM(iNumber);\r\n        let realInput = Math.log(Math.sqrt(Math.pow(real, 2) + Math.pow(im, 2))) / Math.log(10);\r\n        let imaginaryInput = Math.atan(im / real) / Math.log(10);\r\n        return EngineeringFunctions.COMPLEX(realInput, imaginaryInput, unit);\r\n    },\r\n\r\n    IMLOG2: (iNumber) => {\r\n        const {real, im, unit} = parseIM(iNumber);\r\n        let realInput = Math.log(Math.sqrt(Math.pow(real, 2) + Math.pow(im, 2))) / Math.log(2);\r\n        let imaginaryInput = Math.atan(im / real) / Math.log(2);\r\n        return EngineeringFunctions.COMPLEX(realInput, imaginaryInput, unit);\r\n    },\r\n\r\n    IMPOWER: (iNumber, number) => {\r\n        let {unit} = parseIM(iNumber);\r\n        number = H.accept(number, Types.NUMBER_NO_BOOLEAN);\r\n\r\n        // calculate power of modules\r\n        let p = Math.pow(EngineeringFunctions.IMABS(iNumber), number);\r\n        // calculate argument\r\n        let t = EngineeringFunctions.IMARGUMENT(iNumber);\r\n\r\n        let real = p * Math.cos(number * t);\r\n        let imaginary = p * Math.sin(number * t);\r\n        return EngineeringFunctions.COMPLEX(real, imaginary, unit);\r\n    },\r\n\r\n    IMPRODUCT: (...params) => {\r\n        let result;\r\n        let i = 0;\r\n        H.flattenParams(params, null, false, (item) => {\r\n            if (i === 0) {\r\n                result = H.accept(item);\r\n                parseIM(result);\r\n            } else {\r\n                const res1 = parseIM(result);\r\n                const a = res1.real, b = res1.im, unit1 = res1.unit;\r\n                const res2 = parseIM(item);\r\n                const c = res2.real, d = res2.im, unit2 = res2.unit;\r\n                if (unit1 !== unit2)\r\n                    throw FormulaError.VALUE;\r\n                result = EngineeringFunctions.COMPLEX(a * c - b * d, a * d + b * c);\r\n            }\r\n            i++;\r\n        }, 1);\r\n        return result;\r\n    },\r\n\r\n    IMREAL: (iNumber) => {\r\n        return parseIM(iNumber).real;\r\n    },\r\n\r\n    IMSEC: (iNumber) => {\r\n        return EngineeringFunctions.IMDIV('1', EngineeringFunctions.IMCOS(iNumber));\r\n    },\r\n\r\n    IMSECH: (iNumber) => {\r\n        return EngineeringFunctions.IMDIV('1', EngineeringFunctions.IMCOSH(iNumber));\r\n    },\r\n\r\n    IMSIN: (iNumber) => {\r\n        const {real, im, unit} = parseIM(iNumber);\r\n\r\n        let realInput = Math.sin(real) * (Math.exp(im) + Math.exp(-im)) / 2;\r\n        let imaginaryInput = Math.cos(real) * (Math.exp(im) - Math.exp(-im)) / 2;\r\n        return EngineeringFunctions.COMPLEX(realInput, imaginaryInput, unit);\r\n    },\r\n\r\n    IMSINH: (iNumber) => {\r\n        const {real, im, unit} = parseIM(iNumber);\r\n        let realInput = Math.cos(im) * (Math.exp(real) - Math.exp(-real)) / 2;\r\n        let imaginaryInput = Math.sin(im) * (Math.exp(real) + Math.exp(-real)) / 2;\r\n        return EngineeringFunctions.COMPLEX(realInput, imaginaryInput, unit);\r\n    },\r\n\r\n    IMSQRT: (iNumber) => {\r\n        const {unit} = parseIM(iNumber);\r\n        // calculate the power of modulus\r\n        let power = Math.sqrt(EngineeringFunctions.IMABS(iNumber));\r\n        // calculate argument\r\n        let argument = EngineeringFunctions.IMARGUMENT(iNumber);\r\n        return EngineeringFunctions.COMPLEX(power * Math.cos(argument / 2), power * Math.sin(argument / 2), unit);\r\n    },\r\n\r\n    IMSUB: (iNumber1, iNumber2) => {\r\n        const res1 = parseIM(iNumber1);\r\n        const a = res1.real, b = res1.im, unit1 = res1.unit;\r\n        const res2 = parseIM(iNumber2);\r\n        const c = res2.real, d = res2.im, unit2 = res2.unit;\r\n\r\n        if (unit1 !== unit2) {\r\n            throw FormulaError.VALUE;\r\n        }\r\n        return EngineeringFunctions.COMPLEX(a - c, b - d, unit1);\r\n    },\r\n\r\n    IMSUM: (...params) => {\r\n        let realSum = 0, imSum = 0, prevUnit;\r\n        H.flattenParams(params, null, false, (item) => {\r\n            const {real, im, unit} = parseIM(item);\r\n            if (!prevUnit) prevUnit = unit;\r\n            if (prevUnit !== unit)\r\n                throw FormulaError.VALUE;\r\n            realSum += real;\r\n            imSum += im;\r\n        });\r\n        return EngineeringFunctions.COMPLEX(realSum, imSum, prevUnit);\r\n    },\r\n\r\n    IMTAN: (iNumber) => {\r\n        const {unit} = parseIM(iNumber);\r\n        return EngineeringFunctions.IMDIV(EngineeringFunctions.IMSIN(iNumber), EngineeringFunctions.IMCOS(iNumber), unit);\r\n    },\r\n\r\n    // FIXME: need to check the test cases\r\n    OCT2BIN: (number, places) => {\r\n        // office: If number is not a valid octal number, OCT2BIN returns the #NUM! error value.\r\n        // office: If places is nonnumeric, OCT2BIN returns the #VALUE! error value.\r\n        number = H.accept(number, Types.STRING);\r\n        places = H.accept(places, Types.NUMBER, null);\r\n\r\n        // 1. If number's length larger than 10, returns #NUM!\r\n        if (number.length > 10) {\r\n            throw FormulaError.NUM\r\n        }\r\n        // In microsoft Excel, if places is larger than 10, it will return #NUM!\r\n        if (places > 10) {\r\n            throw FormulaError.NUM;\r\n        }\r\n\r\n        // 2. office: If places is negative, OCT2BIN returns the #NUM! error value.\r\n        if (places !== null && places < 0) {\r\n            throw FormulaError.NUM;\r\n        }\r\n        // if places is not an integer, it is truncated\r\n        // office: If places is not an integer, it is truncated.\r\n        places = Math.trunc(places);\r\n\r\n        // to check if the Oct number is negative\r\n        let isNegative = (number.length === 10 && number.substring(0, 1) === '7');\r\n        // convert OCT to DEC\r\n        let toDecimal = EngineeringFunctions.OCT2DEC(number);\r\n        // 2.\r\n        // office: If number is negative, it cannot be less than 7777777000, and if number is positive, it cannot be greater than 777.\r\n        // MiN_BIN = -512, MAX_BIN = 511\r\n        if (toDecimal < MIN_BIN || toDecimal > MAX_BIN) {\r\n            return FormulaError.NUM;\r\n        }\r\n        // if number is negative, ignores places and return a 10-character binary number\r\n        // office: If number is negative, OCT2BIN ignores places and returns a 10-character binary number.\r\n        if (isNegative) {\r\n            return '1' + TextFunctions.REPT('0', 9 - (512 + toDecimal).toString(2).length) + (512 + toDecimal).toString(2);\r\n        }\r\n\r\n        // convert DEC to BIN\r\n        let result = toDecimal.toString(2);\r\n\r\n\r\n        //if (places === null) {\r\n        if (places === 0) {\r\n            return result;\r\n        }\r\n\r\n        // office: If OCT2BIN requires more than places characters, it returns the #NUM! error value.\r\n        if (places < result.length) {\r\n            throw FormulaError.NUM;\r\n        }\r\n\r\n        return TextFunctions.REPT('0', places - result.length) + result;\r\n    },\r\n\r\n    OCT2DEC: (number) => {\r\n        number = H.accept(number, Types.STRING);\r\n        // In microsoft Excel, if number contains more than ten characters (10 digits), it will return #NUM!\r\n        if (number.length > 10) {\r\n            throw FormulaError.NUM;\r\n        }\r\n\r\n        // If number is not a valid octal number, OCT2DEC returns the #NUM! error value.\r\n        for (const n of number) {\r\n            if (n < '0' || n > '7') {\r\n                throw FormulaError.NUM;\r\n            }\r\n        }\r\n        // convert to DEC\r\n        let result = parseInt(number, 8);\r\n        return (result >= 536870912) ? result - 1073741824 : result;\r\n        //  536870912(4000000000) : -536870912;   1073741823(7777777777) : -1\r\n    },\r\n\r\n    OCT2HEX: (number, places) => {\r\n        number = H.accept(number, Types.STRING);\r\n        places = H.accept(places, Types.NUMBER_NO_BOOLEAN, null);\r\n        if (number.length > 10) {\r\n            throw FormulaError.NUM\r\n        }\r\n        // office: If number is not a valid octal number, OCT2DEC returns the #NUM! error value.\r\n        for (const n of number) {\r\n            if (n < '0' || n > '7') {\r\n                throw FormulaError.NUM;\r\n            }\r\n        }\r\n        // if places is not an integer, it is truncated\r\n        places = Math.trunc(places);\r\n        // office: If places is negative, OCT2HEX returns the #NUM! error value.\r\n        if (places < 0 || places > 10) {\r\n            throw FormulaError.NUM;\r\n        }\r\n\r\n        // convert OCT to DEC\r\n        let toDecimal = EngineeringFunctions.OCT2DEC(number);\r\n\r\n        // convert DEC to HEX\r\n        // let toHex = EngineeringFunctions.DEC2HEX(toDecimal, places);\r\n        let toHex = EngineeringFunctions.DEC2HEX(toDecimal);\r\n        //if (places === null) {\r\n        if (places === 0) {\r\n            return toHex;\r\n        }\r\n        if (places < toHex.length) {\r\n            throw FormulaError.NUM;\r\n        } else {\r\n            return TextFunctions.REPT('0', places - toHex.length) + toHex;\r\n        }\r\n    },\r\n};\r\n\r\nmodule.exports = EngineeringFunctions;\r\n", "const FormulaError = require('../error');\r\nconst {FormulaHelpers, Types, WildCard, Address} = require('../helpers');\r\nconst Collection = require('../../grammar/type/collection');\r\nconst H = FormulaHelpers;\r\n\r\nconst ReferenceFunctions = {\r\n\r\n    ADDRESS: (rowNumber, columnNumber, absNum, a1, sheetText) => {\r\n        rowNumber = H.accept(rowNumber, Types.NUMBER);\r\n        columnNumber = H.accept(columnNumber, Types.NUMBER);\r\n        absNum = H.accept(absNum, Types.NUMBER, 1);\r\n        a1 = H.accept(a1, Types.BOOLEAN, true);\r\n        sheetText = H.accept(sheetText, Types.STRING, '');\r\n\r\n        if (rowNumber < 1 || columnNumber < 1 || absNum < 1 || absNum > 4)\r\n            throw FormulaError.VALUE;\r\n\r\n        let result = '';\r\n        if (sheetText.length > 0) {\r\n            if (/[^A-Za-z_.\\d\\u007F-\\uFFFF]/.test(sheetText)) {\r\n                result += `'${sheetText}'!`;\r\n            } else {\r\n                result += sheetText + '!';\r\n            }\r\n        }\r\n        if (a1) {\r\n            // A1 style\r\n            result += (absNum === 1 || absNum === 3) ? '$' : '';\r\n            result += Address.columnNumberToName(columnNumber);\r\n            result += (absNum === 1 || absNum === 2) ? '$' : '';\r\n            result += rowNumber;\r\n        } else {\r\n            // R1C1 style\r\n            result += 'R';\r\n            result += (absNum === 4 || absNum === 3) ? `[${rowNumber}]` : rowNumber;\r\n            result += 'C';\r\n            result += (absNum === 4 || absNum === 2) ? `[${columnNumber}]` : columnNumber;\r\n        }\r\n        return result;\r\n    },\r\n\r\n    AREAS: refs => {\r\n        refs = H.accept(refs);\r\n        if (refs instanceof Collection) {\r\n            return refs.length;\r\n        }\r\n        return 1;\r\n    },\r\n\r\n    CHOOSE: (indexNum, ...values) => {\r\n\r\n    },\r\n\r\n    // Special\r\n    COLUMN: (context, obj) => {\r\n        if (obj == null) {\r\n            if (context.position.col != null)\r\n                return context.position.col;\r\n            else\r\n                throw Error('FormulaParser.parse is called without position parameter.')\r\n        } else {\r\n            if (typeof obj !== 'object' || Array.isArray(obj))\r\n                throw FormulaError.VALUE;\r\n            if (H.isCellRef(obj)) {\r\n                return obj.ref.col;\r\n            } else if (H.isRangeRef(obj)) {\r\n                return obj.ref.from.col;\r\n            } else {\r\n                throw Error('ReferenceFunctions.COLUMN should not reach here.')\r\n            }\r\n        }\r\n    },\r\n\r\n    // Special\r\n    COLUMNS: (context, obj) => {\r\n        if (obj == null) {\r\n            throw Error('COLUMNS requires one argument');\r\n        }\r\n        if (typeof obj != 'object' || Array.isArray(obj))\r\n            throw FormulaError.VALUE;\r\n        if (H.isCellRef(obj)) {\r\n            return 1;\r\n        } else if (H.isRangeRef(obj)) {\r\n            return Math.abs(obj.ref.from.col - obj.ref.to.col) + 1;\r\n        } else {\r\n            throw Error('ReferenceFunctions.COLUMNS should not reach here.')\r\n        }\r\n    },\r\n\r\n    HLOOKUP: (lookupValue, tableArray, rowIndexNum, rangeLookup) => {\r\n        // preserve type of lookupValue\r\n        lookupValue = H.accept(lookupValue);\r\n        try {\r\n            tableArray = H.accept(tableArray, Types.ARRAY, undefined, false);\r\n        } catch (e) {\r\n            // catch #VALUE! and throw #N/A\r\n            if (e instanceof FormulaError)\r\n                throw FormulaError.NA;\r\n            throw e;\r\n        }\r\n        rowIndexNum = H.accept(rowIndexNum, Types.NUMBER);\r\n        rangeLookup = H.accept(rangeLookup, Types.BOOLEAN, true);\r\n\r\n        // check if rowIndexNum out of bound\r\n        if (rowIndexNum < 1)\r\n            throw FormulaError.VALUE;\r\n        if (tableArray[rowIndexNum - 1] === undefined)\r\n            throw FormulaError.REF;\r\n\r\n        const lookupType = typeof lookupValue; // 'number', 'string', 'boolean'\r\n\r\n        // approximate lookup (assume the array is sorted)\r\n        if (rangeLookup) {\r\n            let prevValue = lookupType === typeof tableArray[0][0] ? tableArray[0][0] : null;\r\n            for (let i = 1; i < tableArray[0].length; i++) {\r\n                const currValue = tableArray[0][i];\r\n                const type = typeof currValue;\r\n                // skip the value if type does not match\r\n                if (type !== lookupType)\r\n                    continue;\r\n                // if the previous two values are greater than lookup value, throw #N/A\r\n                if (prevValue > lookupValue && currValue > lookupValue) {\r\n                    throw FormulaError.NA;\r\n                }\r\n                if (currValue === lookupValue)\r\n                    return tableArray[rowIndexNum - 1][i];\r\n                // if previous value <= lookup value and current value > lookup value\r\n                if (prevValue != null && currValue > lookupValue && prevValue <= lookupValue) {\r\n                    return tableArray[rowIndexNum - 1][i - 1];\r\n                }\r\n                prevValue = currValue;\r\n            }\r\n            if (prevValue == null)\r\n                throw FormulaError.NA;\r\n            return prevValue;\r\n        }\r\n        // exact lookup with wildcard support\r\n        else {\r\n            let index = -1;\r\n            if (WildCard.isWildCard(lookupValue)) {\r\n                index = tableArray[0].findIndex(item => {\r\n                    return WildCard.toRegex(lookupValue, 'i').test(item);\r\n                });\r\n            } else {\r\n                index = tableArray[0].findIndex(item => {\r\n                    return item === lookupValue;\r\n                });\r\n            }\r\n            // the exact match is not found\r\n            if (index === -1) throw FormulaError.NA;\r\n            return tableArray[rowIndexNum - 1][index];\r\n        }\r\n    },\r\n\r\n    // Special\r\n    INDEX: (context, ranges, rowNum, colNum, areaNum) => {\r\n        // retrieve values\r\n        rowNum = context.utils.extractRefValue(rowNum);\r\n        rowNum = {value: rowNum.val, isArray: rowNum.isArray};\r\n        rowNum = H.accept(rowNum, Types.NUMBER);\r\n        rowNum = Math.trunc(rowNum);\r\n\r\n        if (colNum == null) {\r\n            colNum = 1;\r\n        } else {\r\n            colNum = context.utils.extractRefValue(colNum);\r\n            colNum = {value: colNum.val, isArray: colNum.isArray};\r\n            colNum = H.accept(colNum, Types.NUMBER, 1);\r\n            colNum = Math.trunc(colNum);\r\n        }\r\n\r\n        if (areaNum == null) {\r\n            areaNum = 1;\r\n        } else {\r\n            areaNum = context.utils.extractRefValue(areaNum);\r\n            areaNum = {value: areaNum.val, isArray: areaNum.isArray};\r\n            areaNum = H.accept(areaNum, Types.NUMBER, 1);\r\n            areaNum = Math.trunc(areaNum);\r\n        }\r\n\r\n        // get the range area that we want to index\r\n        // ranges can be cell ref, range ref or array constant\r\n        let range = ranges;\r\n        // many ranges (Reference form)\r\n        if (ranges instanceof Collection) {\r\n            range = ranges.refs[areaNum - 1];\r\n        } else if (areaNum > 1) {\r\n            throw FormulaError.REF;\r\n        }\r\n\r\n        if (rowNum === 0 && colNum === 0) {\r\n            return range;\r\n        }\r\n\r\n        // query the whole column\r\n        if (rowNum === 0) {\r\n            if (H.isRangeRef(range)) {\r\n                if (range.ref.to.col - range.ref.from.col < colNum - 1)\r\n                    throw FormulaError.REF;\r\n                range.ref.from.col += colNum - 1;\r\n                range.ref.to.col = range.ref.from.col;\r\n                return range;\r\n            } else if (Array.isArray(range)) {\r\n                const res = [];\r\n                range.forEach(row => res.push([row[colNum - 1]]));\r\n                return res;\r\n            }\r\n        }\r\n        // query the whole row\r\n        if (colNum === 0) {\r\n            if (H.isRangeRef(range)) {\r\n                if (range.ref.to.row - range.ref.from.row < rowNum - 1)\r\n                    throw FormulaError.REF;\r\n                range.ref.from.row += rowNum - 1;\r\n                range.ref.to.row =  range.ref.from.row;\r\n                return range;\r\n            } else if (Array.isArray(range)) {\r\n                return range[colNum - 1];\r\n            }\r\n        }\r\n        // query single cell\r\n        if (rowNum !== 0 && colNum !== 0) {\r\n            // range reference\r\n            if (H.isRangeRef(range)) {\r\n                range = range.ref;\r\n                if (range.to.row - range.from.row < rowNum - 1 || range.to.col - range.from.col < colNum - 1)\r\n                    throw FormulaError.REF;\r\n                return {ref: {row: range.from.row + rowNum - 1, col: range.from.col + colNum - 1}};\r\n            }\r\n            // cell reference\r\n            else if (H.isCellRef(range)) {\r\n                range = range.ref;\r\n                if (rowNum > 1 || colNum > 1)\r\n                    throw FormulaError.REF;\r\n                return {ref: {row: range.row + rowNum - 1, col: range.col + colNum - 1}};\r\n            }\r\n            // array constant\r\n            else if (Array.isArray(range)) {\r\n                if (range.length < rowNum || range[0].length < colNum)\r\n                    throw FormulaError.REF;\r\n                return range[rowNum - 1][colNum - 1];\r\n            }\r\n        }\r\n    },\r\n\r\n    MATCH: () => {\r\n\r\n    },\r\n\r\n    // Special\r\n    ROW: (context, obj) => {\r\n        if (obj == null) {\r\n            if (context.position.row != null)\r\n                return context.position.row;\r\n            else\r\n                throw Error('FormulaParser.parse is called without position parameter.')\r\n        } else {\r\n            if (typeof obj !== 'object' || Array.isArray(obj))\r\n                throw FormulaError.VALUE;\r\n            if (H.isCellRef(obj)) {\r\n                return obj.ref.row;\r\n            } else if (H.isRangeRef(obj)) {\r\n                return obj.ref.from.row;\r\n            } else {\r\n                throw Error('ReferenceFunctions.ROW should not reach here.')\r\n            }\r\n        }\r\n    },\r\n\r\n    // Special\r\n    ROWS: (context, obj) => {\r\n        if (obj == null) {\r\n            throw Error('ROWS requires one argument');\r\n        }\r\n        if (typeof obj != 'object' || Array.isArray(obj))\r\n            throw FormulaError.VALUE;\r\n        if (H.isCellRef(obj)) {\r\n            return 1;\r\n        } else if (H.isRangeRef(obj)) {\r\n            return Math.abs(obj.ref.from.row - obj.ref.to.row) + 1;\r\n        } else {\r\n            throw Error('ReferenceFunctions.ROWS should not reach here.')\r\n        }\r\n    },\r\n\r\n    TRANSPOSE: (array) => {\r\n        array = H.accept(array, Types.ARRAY, undefined, false);\r\n        // https://github.com/numbers/numbers.js/blob/master/lib/numbers/matrix.js#L171\r\n        const result = [];\r\n\r\n        for (let i = 0; i < array[0].length; i++) {\r\n            result[i] = [];\r\n\r\n            for (let j = 0; j < array.length; j++) {\r\n                result[i][j] = array[j][i];\r\n            }\r\n        }\r\n\r\n        return result;\r\n    },\r\n\r\n    VLOOKUP: (lookupValue, tableArray, colIndexNum, rangeLookup) => {\r\n        // preserve type of lookupValue\r\n        lookupValue = H.accept(lookupValue);\r\n        try {\r\n            tableArray = H.accept(tableArray, Types.ARRAY, undefined, false);\r\n        } catch (e) {\r\n            // catch #VALUE! and throw #N/A\r\n            if (e instanceof FormulaError)\r\n                throw FormulaError.NA;\r\n            throw e;\r\n        }\r\n        colIndexNum = H.accept(colIndexNum, Types.NUMBER);\r\n        rangeLookup = H.accept(rangeLookup, Types.BOOLEAN, true);\r\n\r\n        // check if colIndexNum out of bound\r\n        if (colIndexNum < 1)\r\n            throw FormulaError.VALUE;\r\n        if (tableArray[0][colIndexNum - 1] === undefined)\r\n            throw FormulaError.REF;\r\n\r\n        const lookupType = typeof lookupValue; // 'number', 'string', 'boolean'\r\n\r\n        // approximate lookup (assume the array is sorted)\r\n        if (rangeLookup) {\r\n            let prevValue = lookupType === typeof tableArray[0][0] ? tableArray[0][0] : null;\r\n            for (let i = 1; i < tableArray.length; i++) {\r\n                const currRow = tableArray[i];\r\n                const currValue = tableArray[i][0];\r\n                const type = typeof currValue;\r\n                // skip the value if type does not match\r\n                if (type !== lookupType)\r\n                    continue;\r\n                // if the previous two values are greater than lookup value, throw #N/A\r\n                if (prevValue > lookupValue && currValue > lookupValue) {\r\n                    throw FormulaError.NA;\r\n                }\r\n                if (currValue === lookupValue)\r\n                    return currRow[colIndexNum - 1];\r\n                // if previous value <= lookup value and current value > lookup value\r\n                if (prevValue != null && currValue > lookupValue && prevValue <= lookupValue) {\r\n                    return tableArray[i - 1][colIndexNum - 1];\r\n                }\r\n                prevValue = currValue;\r\n            }\r\n            if (prevValue == null)\r\n                throw FormulaError.NA;\r\n            return prevValue;\r\n        }\r\n        // exact lookup with wildcard support\r\n        else {\r\n            let index = -1;\r\n            if (WildCard.isWildCard(lookupValue)) {\r\n                index = tableArray.findIndex(currRow => {\r\n                    return WildCard.toRegex(lookupValue, 'i').test(currRow[0]);\r\n                });\r\n            } else {\r\n                index = tableArray.findIndex(currRow => {\r\n                    return currRow[0] === lookupValue;\r\n                });\r\n            }\r\n            // the exact match is not found\r\n            if (index === -1) throw FormulaError.NA;\r\n            return tableArray[index][colIndexNum - 1];\r\n        }\r\n    },\r\n};\r\n\r\nmodule.exports = ReferenceFunctions;\r\n", "const FormulaError = require('../error');\r\nconst {FormulaHelpers, Types} = require('../helpers');\r\nconst H = FormulaHelpers;\r\n\r\nconst error2Number = {\r\n    '#NULL!': 1, '#DIV/0!': 2, '#VALUE!': 3, '#REF!': 4, '#NAME?': 5,\r\n    '#NUM!': 6, '#N/A': 7\r\n};\r\n\r\nconst InfoFunctions = {\r\n\r\n    CELL: (infoType, reference) => {\r\n        // throw FormulaError.NOT_IMPLEMENTED('CELL');\r\n    },\r\n\r\n    'ERROR.TYPE': (value) => {\r\n        value = H.accept(value);\r\n        if ( value instanceof FormulaError)\r\n            return error2Number[value.toString()];\r\n        throw FormulaError.NA;\r\n    },\r\n\r\n    INFO: () => {\r\n    },\r\n\r\n    ISBLANK: (value) => {\r\n        if (!value.ref)\r\n            return false;\r\n        // null and undefined are also blank\r\n        return value.value == null || value.value === '';\r\n    },\r\n\r\n    ISERR: (value) => {\r\n        value = H.accept(value);\r\n        return value instanceof FormulaError && value.toString() !== '#N/A';\r\n    },\r\n\r\n    ISERROR: (value) => {\r\n        value = H.accept(value);\r\n        return value instanceof FormulaError;\r\n    },\r\n\r\n    ISEVEN: number => {\r\n        number = H.accept(number, Types.NUMBER);\r\n        number = Math.trunc(number);\r\n        return number % 2 === 0;\r\n    },\r\n\r\n    ISLOGICAL: (value) => {\r\n        value = H.accept(value);\r\n        return typeof value === 'boolean';\r\n    },\r\n\r\n    ISNA: (value) => {\r\n        value = H.accept(value);\r\n        return value instanceof FormulaError && value.toString() === '#N/A';\r\n    },\r\n\r\n    ISNONTEXT: (value) => {\r\n        value = H.accept(value);\r\n        return typeof value !== 'string';\r\n    },\r\n\r\n    ISNUMBER: (value) => {\r\n        value = H.accept(value);\r\n        return typeof value === \"number\";\r\n    },\r\n\r\n    ISREF: (value) => {\r\n        if (!value.ref)\r\n            return false;\r\n        if (H.isCellRef(value) && (value.ref.row > 1048576 || value.ref.col > 16384)) {\r\n            return false;\r\n        }\r\n        if (H.isRangeRef(value) && (value.ref.from.row > 1048576 || value.ref.from.col > 16384\r\n            || value.ref.to.row > 1048576 || value.ref.to.col > 16384)) {\r\n            return false;\r\n        }\r\n        value = H.accept(value);\r\n        return !(value instanceof FormulaError && value.toString() === '#REF!');\r\n    },\r\n\r\n    ISTEXT: (value) => {\r\n        value = H.accept(value);\r\n        return typeof value === 'string';\r\n    },\r\n\r\n    N: value => {\r\n        value = H.accept(value);\r\n        const type = typeof value;\r\n        if (type === 'number')\r\n            return value;\r\n        else if (type === \"boolean\")\r\n            return Number(value);\r\n        else if (value instanceof FormulaError)\r\n            throw value;\r\n        return 0;\r\n    },\r\n\r\n    NA: () => {\r\n        throw FormulaError.NA;\r\n    },\r\n\r\n    TYPE: value => {\r\n        // a reference\r\n        if (value.ref) {\r\n            if (H.isRangeRef(value)) {\r\n                return 16;\r\n            } else if (H.isCellRef(value)) {\r\n                value = H.accept(value);\r\n                // empty cell is number type\r\n                if (typeof value === \"string\" && value.length === 0)\r\n                    return 1;\r\n            }\r\n        }\r\n        value = H.accept(value);\r\n        const type = typeof value;\r\n        if (type === 'number')\r\n            return 1;\r\n        else if (type === \"string\")\r\n            return 2;\r\n        else if (type === \"boolean\")\r\n            return 4;\r\n        else if (value instanceof FormulaError)\r\n            return 16;\r\n        else if (Array.isArray(value))\r\n            return 64;\r\n    },\r\n};\r\n\r\n\r\nmodule.exports = InfoFunctions;\r\n", "const FormulaError = require('../error');\r\nconst {FormulaHelpers, Types} = require('../helpers');\r\nconst H = FormulaHelpers;\r\nconst jStat = require(\"jstat\");\r\nconst MathFunctions = require('./math');\r\nconst SQRT2PI = 2.5066282746310002;\r\n\r\nconst DistributionFunctions = {\r\n    'BETA.DIST': (x, alpha, beta, cumulative, a, b) => {\r\n        x = H.accept(x, Types.NUMBER);\r\n        alpha = H.accept(alpha, Types.NUMBER);\r\n        beta = H.accept(beta, Types.NUMBER);\r\n        cumulative = H.accept(cumulative, Types.BOOLEAN);\r\n        a = H.accept(a, Types.NUMBER, 0);\r\n        b = H.accept(b, Types.NUMBER, 1);\r\n        if (alpha <= 0 || beta <= 0 || x < a || x > b || a === b)\r\n            throw FormulaError.NUM;\r\n\r\n        x = (x - a) / (b - a);\r\n        return cumulative ? jStat.beta.cdf(x, alpha, beta) : jStat.beta.pdf(x, alpha, beta) / (b - a);\r\n    },\r\n\r\n    'BETA.INV': (probability, alpha, beta, a, b) => {\r\n        probability = H.accept(probability, Types.NUMBER);\r\n        alpha = H.accept(alpha, Types.NUMBER);\r\n        beta = H.accept(beta, Types.NUMBER);\r\n        a = H.accept(a, Types.NUMBER, 0);\r\n        b = H.accept(b, Types.NUMBER, 1);\r\n        if (alpha <= 0 || beta <= 0 || probability <= 0 || probability > 1)\r\n            throw FormulaError.NUM;\r\n        return jStat.beta.inv(probability, alpha, beta) * (b - a) + a;\r\n    },\r\n\r\n    'BINOM.DIST': (numberS, trials, probabilityS, cumulative) => {\r\n        numberS = H.accept(numberS, Types.NUMBER);\r\n        trials = H.accept(trials, Types.NUMBER);\r\n        probabilityS = H.accept(probabilityS, Types.NUMBER);\r\n        cumulative = H.accept(cumulative, Types.BOOLEAN);\r\n        if (trials < 0 || probabilityS < 0 || probabilityS > 1 || numberS < 0 || numberS > trials)\r\n            throw FormulaError.NUM;\r\n\r\n        return cumulative ? jStat.binomial.cdf(numberS, trials, probabilityS)\r\n            : jStat.binomial.pdf(numberS, trials, probabilityS);\r\n    },\r\n\r\n    'BINOM.DIST.RANGE': (trials, probabilityS, numberS, numberS2) => {\r\n        trials = H.accept(trials, Types.NUMBER);\r\n        probabilityS = H.accept(probabilityS, Types.NUMBER);\r\n        numberS = H.accept(numberS, Types.NUMBER);\r\n        numberS2 = H.accept(numberS2, Types.NUMBER, numberS);\r\n        if (trials < 0 || probabilityS < 0 || probabilityS > 1 || numberS < 0 || numberS > trials || numberS2 < numberS || numberS2 > trials)\r\n            throw FormulaError.NUM;\r\n\r\n        let result = 0;\r\n        for (let i = numberS; i <= numberS2; i++) {\r\n            result += MathFunctions.COMBIN(trials, i) * Math.pow(probabilityS, i) * Math.pow(1 - probabilityS, trials - i);\r\n        }\r\n        return result;\r\n    },\r\n\r\n    'BINOM.INV': (trials, probabilityS, alpha) => {\r\n        trials = H.accept(trials, Types.NUMBER);\r\n        probabilityS = H.accept(probabilityS, Types.NUMBER);\r\n        alpha = H.accept(alpha, Types.NUMBER);\r\n        if (trials < 0 || probabilityS < 0 || probabilityS > 1 || alpha < 0 || alpha > 1)\r\n            throw FormulaError.NUM;\r\n\r\n        let x = 0;\r\n        while (x <= trials) {\r\n            if (jStat.binomial.cdf(x, trials, probabilityS) >= alpha) {\r\n                return x;\r\n            }\r\n            x++;\r\n        }\r\n    },\r\n\r\n    'CHISQ.DIST': (x, degFreedom, cumulative) => {\r\n        x = H.accept(x, Types.NUMBER);\r\n        degFreedom = H.accept(degFreedom, Types.NUMBER);\r\n        cumulative = H.accept(cumulative, Types.NUMBER);\r\n        degFreedom = Math.trunc(degFreedom);\r\n        if (x < 0 || degFreedom < 1 || degFreedom > 10 ** 10)\r\n            throw FormulaError.NUM;\r\n\r\n        return cumulative ? jStat.chisquare.cdf(x, degFreedom) : jStat.chisquare.pdf(x, degFreedom);\r\n    },\r\n\r\n    'CHISQ.DIST.RT': (x, degFreedom) => {\r\n        x = H.accept(x, Types.NUMBER);\r\n        degFreedom = H.accept(degFreedom, Types.NUMBER);\r\n        degFreedom = Math.trunc(degFreedom);\r\n        if (x < 0 || degFreedom < 1 || degFreedom > 10 ** 10)\r\n            throw FormulaError.NUM;\r\n\r\n        return 1 - jStat.chisquare.cdf(x, degFreedom);\r\n    },\r\n\r\n    'CHISQ.INV': (probability, degFreedom) => {\r\n        probability = H.accept(probability, Types.NUMBER);\r\n        degFreedom = H.accept(degFreedom, Types.NUMBER);\r\n        degFreedom = Math.trunc(degFreedom);\r\n        if (probability < 0 || probability > 1 || degFreedom < 1 || degFreedom > 10 ** 10)\r\n            throw FormulaError.NUM;\r\n\r\n        return jStat.chisquare.inv(probability, degFreedom);\r\n    },\r\n\r\n    'CHISQ.INV.RT': (probability, degFreedom) => {\r\n        probability = H.accept(probability, Types.NUMBER);\r\n        degFreedom = H.accept(degFreedom, Types.NUMBER);\r\n        degFreedom = Math.trunc(degFreedom);\r\n        if (probability < 0 || probability > 1 || degFreedom < 1 || degFreedom > 10 ** 10)\r\n            throw FormulaError.NUM;\r\n\r\n        return jStat.chisquare.inv(1 - probability, degFreedom);\r\n    },\r\n\r\n    'CHISQ.TEST': (actualRange, expectedRange) => {\r\n        const actual = H.accept(actualRange, Types.ARRAY, undefined, false, false);\r\n        const expected = H.accept(expectedRange, Types.ARRAY, undefined, false, false);\r\n\r\n        if (actual.length !== expected.length || actual[0].length !== expected[0].length\r\n            || actual.length === 1 && actual[0].length === 1)\r\n            throw FormulaError.NA;\r\n\r\n        const row = actual.length;\r\n        const col = actual[0].length;\r\n        let dof = (row - 1) * (col - 1);\r\n        if (row === 1)\r\n            dof = col - 1;\r\n        else\r\n            dof = row - 1;\r\n        let xsqr = 0;\r\n\r\n        for (let i = 0; i < row; i++) {\r\n            for (let j = 0; j < col; j++) {\r\n                if (typeof actual[i][j] !== \"number\" || typeof expected[i][j] !== \"number\")\r\n                    continue;\r\n                if (expected[i][j] === 0) throw FormulaError.DIV0;\r\n                xsqr += Math.pow((actual[i][j] - expected[i][j]), 2) / expected[i][j];\r\n            }\r\n        }\r\n\r\n        // Get independent by X square and its degree of freedom\r\n        let p = Math.exp(-0.5 * xsqr);\r\n        if ((dof % 2) === 1) {\r\n            p = p * Math.sqrt(2 * xsqr / Math.PI);\r\n        }\r\n        let k = dof;\r\n        while (k >= 2) {\r\n            p = p * xsqr / k;\r\n            k = k - 2;\r\n        }\r\n        let t = p, a = dof;\r\n        while (t > 0.000000000000001 * p) {\r\n            a = a + 2;\r\n            t = t * xsqr / a;\r\n            p = p + t;\r\n        }\r\n        return 1 - p;\r\n    },\r\n\r\n    'CONFIDENCE.NORM': (alpha, std, size) => {\r\n        alpha = H.accept(alpha, Types.NUMBER);\r\n        std = H.accept(std, Types.NUMBER);\r\n        size = H.accept(size, Types.NUMBER);\r\n        size = Math.trunc(size);\r\n        if (alpha <= 0 || alpha >= 1 || std <= 0 || size < 1)\r\n            throw FormulaError.NUM;\r\n        return jStat.normalci(1, alpha, std, size)[1] - 1;\r\n    },\r\n\r\n    'CONFIDENCE.T': (alpha, std, size) => {\r\n        alpha = H.accept(alpha, Types.NUMBER);\r\n        std = H.accept(std, Types.NUMBER);\r\n        size = H.accept(size, Types.NUMBER);\r\n        size = Math.trunc(size);\r\n        if (alpha <= 0 || alpha >= 1 || std <= 0 || size < 1)\r\n            throw FormulaError.NUM;\r\n        if (size === 1)\r\n            throw FormulaError.DIV0;\r\n        return jStat.tci(1, alpha, std, size)[1] - 1;\r\n    },\r\n\r\n    CORREL: (array1, array2) => {\r\n        array1 = H.accept(array1, Types.ARRAY, undefined, true, true);\r\n        array2 = H.accept(array2, Types.ARRAY, undefined, true, true);\r\n        if (array1.length !== array2.length)\r\n            throw FormulaError.NA;\r\n\r\n        // filter out values that are not number\r\n        const filterArr1 = [], filterArr2 = [];\r\n        for (let i = 0; i < array1.length; i++) {\r\n            if (typeof array1[i] !== \"number\" || typeof array2[i] !== \"number\")\r\n                continue;\r\n            filterArr1.push(array1[i]);\r\n            filterArr2.push(array2[i]);\r\n        }\r\n        if (filterArr1.length <= 1)\r\n            throw FormulaError.DIV0;\r\n\r\n        return jStat.corrcoeff(filterArr1, filterArr2);\r\n    },\r\n\r\n    'COVARIANCE.P': (array1, array2) => {\r\n        array1 = H.accept(array1, Types.ARRAY, undefined, true, true);\r\n        array2 = H.accept(array2, Types.ARRAY, undefined, true, true);\r\n        if (array1.length !== array2.length)\r\n            throw FormulaError.NA;\r\n\r\n        // filter out values that are not number\r\n        const filterArr1 = [], filterArr2 = [];\r\n        for (let i = 0; i < array1.length; i++) {\r\n            if (typeof array1[i] !== \"number\" || typeof array2[i] !== \"number\")\r\n                continue;\r\n            filterArr1.push(array1[i]);\r\n            filterArr2.push(array2[i]);\r\n        }\r\n        const mean1 = jStat.mean(filterArr1), mean2 = jStat.mean(filterArr2);\r\n        let result = 0;\r\n        for (let i = 0; i < filterArr1.length; i++) {\r\n            result += (filterArr1[i] - mean1) * (filterArr2[i] - mean2);\r\n        }\r\n        return result / filterArr1.length;\r\n    },\r\n\r\n    'COVARIANCE.S': (array1, array2) => {\r\n        array1 = H.accept(array1, Types.ARRAY, undefined, true, true);\r\n        array2 = H.accept(array2, Types.ARRAY, undefined, true, true);\r\n        if (array1.length !== array2.length)\r\n            throw FormulaError.NA;\r\n\r\n        // filter out values that are not number\r\n        const filterArr1 = [], filterArr2 = [];\r\n        for (let i = 0; i < array1.length; i++) {\r\n            if (typeof array1[i] !== \"number\" || typeof array2[i] !== \"number\")\r\n                continue;\r\n            filterArr1.push(array1[i]);\r\n            filterArr2.push(array2[i]);\r\n        }\r\n\r\n        if (filterArr1.length <= 1)\r\n            throw FormulaError.DIV0;\r\n\r\n        return jStat.covariance(filterArr1, filterArr2);\r\n    },\r\n\r\n    DEVSQ: (...numbers) => {\r\n        let sum = 0, x = [];\r\n        // parse number only if the input is literal\r\n        H.flattenParams(numbers, Types.NUMBER, true, (item, info) => {\r\n            if (typeof item === \"number\") {\r\n                sum += item;\r\n                x.push(item);\r\n            }\r\n        });\r\n        const mean = sum / x.length;\r\n        sum = 0;\r\n        for (let i = 0; i < x.length; i++) {\r\n            sum += (x[i] - mean) ** 2;\r\n        }\r\n        return sum;\r\n    },\r\n\r\n    'EXPON.DIST': (x, lambda, cumulative) => {\r\n        x = H.accept(x, Types.NUMBER);\r\n        lambda = H.accept(lambda, Types.NUMBER);\r\n        cumulative = H.accept(cumulative, Types.BOOLEAN);\r\n        if (x < 0 || lambda <= 0)\r\n            throw FormulaError.NUM;\r\n        return cumulative ? jStat.exponential.cdf(x, lambda) : jStat.exponential.pdf(x, lambda);\r\n    },\r\n\r\n    'F.DIST': (x, d1, d2, cumulative) => {\r\n        x = H.accept(x, Types.NUMBER);\r\n        d1 = H.accept(d1, Types.NUMBER);\r\n        d2 = H.accept(d2, Types.NUMBER);\r\n        cumulative = H.accept(cumulative, Types.BOOLEAN);\r\n\r\n        // If x is negative, F.DIST returns the #NUM! error value.\r\n        // If deg_freedom1 < 1, F.DIST returns the #NUM! error value.\r\n        // If deg_freedom2 < 1, F.DIST returns the #NUM! error value.\r\n        if (x < 0 || d1 < 1 || d2 < 1) {\r\n            throw FormulaError.NUM;\r\n        }\r\n\r\n        // If deg_freedom1 or deg_freedom2 is not an integer, it is truncated.\r\n        d1 = Math.trunc(d1);\r\n        d2 = Math.trunc(d2);\r\n\r\n        return cumulative ? jStat.centralF.cdf(x, d1, d2) : jStat.centralF.pdf(x, d1, d2);\r\n    },\r\n\r\n    'F.DIST.RT': (x, d1, d2) => {\r\n        // David\r\n        x = H.accept(x, Types.NUMBER);\r\n        d1 = H.accept(d1, Types.NUMBER);\r\n        d2 = H.accept(d2, Types.NUMBER);\r\n        // If deg_freedom1 < 1 F.DIST.RT returns the #NUM! error value.\r\n        // If deg_freedom2 < 1 F.DIST.RT returns the #NUM! error value.\r\n        // If x is negative, F.DIST.RT returns the #NUM! error value.\r\n        if (x < 0 || d1 < 1 || d2 < 1) {\r\n            throw FormulaError.NUM;\r\n        }\r\n\r\n        // If deg_freedom1 or deg_freedom2 is not an integer, it is truncated.\r\n        d1 = Math.trunc(d1);\r\n        d2 = Math.trunc(d2);\r\n\r\n        return 1 - jStat.centralF.cdf(x, d1, d2);\r\n    },\r\n\r\n    'F.INV': (probability, d1, d2) => {\r\n        // David\r\n        probability = H.accept(probability, Types.NUMBER);\r\n        d1 = H.accept(d1, Types.NUMBER);\r\n        d2 = H.accept(d2, Types.NUMBER);\r\n        // If probability < 0 or probability > 1, F.INV returns the #NUM! error value.\r\n        if (probability < 0.0 || probability > 1.0) {\r\n            throw FormulaError.NUM;\r\n        }\r\n        // If deg_freedom1 < 1, or deg_freedom2 < 1, F.INV returns the #NUM! error value.\r\n        if (d1 < 1.0 || d2 < 1.0) {\r\n            throw FormulaError.NUM;\r\n        }\r\n\r\n        // If deg_freedom1 or deg_freedom2 is not an integer, it is truncated.\r\n        d1 = Math.trunc(d1);\r\n        d2 = Math.trunc(d2);\r\n\r\n        return jStat.centralF.inv(probability, d1, d2);\r\n    },\r\n\r\n    'F.INV.RT': (probability, d1, d2) => {\r\n        // David\r\n        probability = H.accept(probability, Types.NUMBER);\r\n        d1 = H.accept(d1, Types.NUMBER);\r\n        d2 = H.accept(d2, Types.NUMBER);\r\n        // If Probability is < 0 or probability is > 1, F.INV.RT returns the #NUM! error value.\r\n        if (probability < 0.0 || probability > 1.0) {\r\n            throw FormulaError.NUM;\r\n        }\r\n\r\n        // If Deg_freedom1 is < 1, or Deg_freedom2 is < 1, F.INV.RT returns the #NUM! error value.\r\n        if (d1 < 1.0 || d1 >= Math.pow(10, 10)) {\r\n            throw FormulaError.NUM;\r\n        }\r\n\r\n        // If Deg_freedom2 is < 1 or Deg_freedom2 is \u2265 10^10, F.INV.RT returns the #NUM! error value.\r\n        if (d2 < 1.0 || d2 >= Math.pow(10, 10)) {\r\n            throw FormulaError.NUM;\r\n        }\r\n        // If Deg_freedom1 or Deg_freedom2 is not an integer, it is truncated.\r\n        d1 = Math.trunc(d1);\r\n        d2 = Math.trunc(d2);\r\n\r\n        return jStat.centralF.inv(1.0 - probability, d1, d2);\r\n    },\r\n\r\n    /**\r\n     * https://en.wikipedia.org/wiki/F-test_of_equality_of_variances\r\n     */\r\n    'F.TEST': (array1, array2) => {\r\n        array1 = H.accept(array1, Types.ARRAY, undefined, true, true);\r\n        array2 = H.accept(array2, Types.ARRAY, undefined, true, true);\r\n\r\n        // filter out values that are not number\r\n        const x1 = [], x2 = [];\r\n        let x1Mean = 0, x2Mean = 0;\r\n        for (let i = 0; i < Math.max(array1.length, array2.length); i++) {\r\n            if (typeof array1[i] === \"number\") {\r\n                x1.push(array1[i]);\r\n                x1Mean += array1[i];\r\n            }\r\n            if (typeof array2[i] === \"number\") {\r\n                x2.push(array2[i]);\r\n                x2Mean += array2[i];\r\n            }\r\n        }\r\n        if (x1.length <= 1 || x2.length <= 1)\r\n            throw FormulaError.DIV0;\r\n\r\n        x1Mean /= x1.length;\r\n        x2Mean /= x2.length;\r\n        let s1 = 0, s2 = 0; // sample variance S^2\r\n        for (let i = 0; i < x1.length; i++) {\r\n            s1 += (x1Mean - x1[i]) ** 2\r\n        }\r\n        s1 /= x1.length - 1;\r\n        for (let i = 0; i < x2.length; i++) {\r\n            s2 += (x2Mean - x2[i]) ** 2\r\n        }\r\n        s2 /= x2.length - 1;\r\n        // P(F<=f) one-tail * 2\r\n        return jStat.centralF.cdf(s1 / s2, x1.length - 1, x2.length - 1) * 2;\r\n    },\r\n\r\n    FISHER: (x) => {\r\n        // David\r\n        x = H.accept(x, Types.NUMBER);\r\n        // If x \u2264 -1 or if x \u2265 1, FISHER returns the #NUM! error value.\r\n        if (x <= -1 || x >= 1) {\r\n            throw FormulaError.NUM;\r\n        }\r\n        return Math.log((1 + x) / (1 - x)) / 2;\r\n    },\r\n\r\n    FISHERINV: (x) => {\r\n        // David\r\n        x = H.accept(x, Types.NUMBER);\r\n        let e2y = Math.exp(2 * x);\r\n        return (e2y - 1) / (e2y + 1);\r\n    },\r\n\r\n    // FIXME\r\n    FORECAST: (x, knownYs, knownXs) => {\r\n        x = H.accept(x, Types.NUMBER);\r\n        knownYs = H.accept(knownYs, Types.ARRAY, undefined, true, true);\r\n        knownXs = H.accept(knownXs, Types.ARRAY, undefined, true, true);\r\n\r\n        if (knownXs.length !== knownYs.length)\r\n            throw FormulaError.NA;\r\n\r\n        // filter out values that are not number\r\n        const filteredY = [], filteredX = [];\r\n        let xAllEqual = true;\r\n        for (let i = 0; i < knownYs.length; i++) {\r\n            if (typeof knownYs[i] !== \"number\" || typeof knownXs[i] !== \"number\")\r\n                continue;\r\n            filteredY.push(knownYs[i]);\r\n            filteredX.push(knownXs[i]);\r\n            if (knownXs[i] !== knownXs[0])\r\n                xAllEqual = false;\r\n        }\r\n        if (xAllEqual)\r\n            throw FormulaError.DIV0;\r\n        const yMean = jStat.mean(filteredY);\r\n        const xMean = jStat.mean(filteredX);\r\n        let numerator = 0, denominator = 0;\r\n        for (let i = 0; i < filteredY.length; i++) {\r\n            numerator += (filteredX[i] - xMean) * (filteredY[i] - yMean);\r\n            denominator += (filteredX[i] - xMean) ** 2;\r\n        }\r\n        const b = numerator / denominator;\r\n        const a = yMean - b * xMean;\r\n        return a + b * x;\r\n    },\r\n\r\n    'FORECAST.ETS': () => {\r\n        // skip, not yet possible to implement, may need tensorflow.js ?\r\n    },\r\n\r\n    'FORECAST.ETS.CONFINT': () => {\r\n        // skip\r\n    },\r\n\r\n    'FORECAST.ETS.SEASONALITY': () => {\r\n        // skip\r\n    },\r\n\r\n    'FORECAST.ETS.STAT': () => {\r\n        // skip\r\n    },\r\n\r\n    'FORECAST.LINEAR': (...params) => {\r\n        return DistributionFunctions.FORECAST(...params);\r\n    },\r\n\r\n    FREQUENCY: (dataArray, binsArray) => {\r\n        dataArray = H.accept(dataArray, Types.ARRAY, undefined, true, true);\r\n        binsArray = H.accept(binsArray, Types.ARRAY, undefined, true, true);\r\n\r\n        const binsArrayFiltered = [];\r\n        for (let i = 0; i < binsArray.length; i++) {\r\n            if (typeof binsArray[i] !== \"number\")\r\n                continue;\r\n            binsArrayFiltered.push(binsArray[i]);\r\n        }\r\n        binsArrayFiltered.sort();\r\n        binsArrayFiltered.push(Infinity);\r\n\r\n        const result = [];\r\n        for (let j = 0; j < binsArrayFiltered.length; j++) {\r\n            result[j] = [];\r\n            result[j][0] = 0;\r\n            for (let i = 0; i < dataArray.length; i++) {\r\n                if (typeof dataArray[i] !== \"number\") {\r\n                    continue;\r\n                }\r\n                const curr = dataArray[i];\r\n                if (curr <= binsArrayFiltered[j]) {\r\n                    result[j][0]++;\r\n                    dataArray[i] = null;\r\n                }\r\n            }\r\n        }\r\n        // return a 2d array\r\n        return result;\r\n    },\r\n\r\n    GAMMA: (x) => {\r\n        // David\r\n\r\n        // If Number contains characters that are not valid, GAMMA returns the #VALUE! error value.\r\n        x = H.accept(x, Types.NUMBER);\r\n\r\n        // If Number is a negative integer or 0, GAMMA returns the #NUM! error value.\r\n        if (x === 0 || (x < 0 && x === Math.trunc(x))) {\r\n            throw FormulaError.NUM;\r\n        }\r\n\r\n        return jStat.gammafn(x);\r\n    },\r\n\r\n    'GAMMA.DIST': (x, alpha, beta, cumulative) => {\r\n        // David\r\n        // If x, alpha, or beta is nonnumeric, GAMMA.DIST returns the #VALUE! error value.\r\n        x = H.accept(x, Types.NUMBER);\r\n        alpha = H.accept(alpha, Types.NUMBER);\r\n        beta = H.accept(beta, Types.NUMBER);\r\n        cumulative = H.accept(cumulative, Types.BOOLEAN);\r\n\r\n        // If x < 0, GAMMA.DIST returns the #NUM! error value.\r\n        // If alpha \u2264 0 or if beta \u2264 0, GAMMA.DIST returns the #NUM! error value.\r\n        if (x < 0 || alpha <= 0 || beta <= 0) {\r\n            throw FormulaError.NUM;\r\n        }\r\n\r\n        return cumulative ? jStat.gamma.cdf(x, alpha, beta, true) : jStat.gamma.pdf(x, alpha, beta, false);\r\n    },\r\n\r\n    'GAMMA.INV': (probability, alpha, beta) => {\r\n        // David\r\n        // If any argument is text, GAMMA.INV returns the #VALUE! error value.\r\n        probability = H.accept(probability, Types.NUMBER);\r\n        alpha = H.accept(alpha, Types.NUMBER);\r\n        beta = H.accept(beta, Types.NUMBER);\r\n\r\n        // If probability < 0 or probability > 1, GAMMA.INV returns the #NUM! error value.\r\n        // If alpha \u2264 0 or if beta \u2264 0, GAMMA.INV returns the #NUM! error value.\r\n        if (probability < 0 || probability > 1 || alpha <= 0 || beta <= 0) {\r\n            throw FormulaError.NUM;\r\n        }\r\n\r\n        return jStat.gamma.inv(probability, alpha, beta);\r\n    },\r\n\r\n    GAMMALN: (x) => {\r\n        // David\r\n\r\n        x = H.accept(x, Types.NUMBER);\r\n        // If x is nonnumeric, GAMMALN returns the #VALUE! error value.\r\n        // If x \u2264 0, GAMMALN returns the #NUM! error value.\r\n        if (x <= 0) {\r\n            throw FormulaError.NUM;\r\n        }\r\n\r\n        return jStat.gammaln(x);\r\n    },\r\n\r\n    'GAMMALN.PRECISE': (x) => {\r\n        // David\r\n        // return distribution.GAMMALN(x);\r\n        x = H.accept(x, Types.NUMBER);\r\n        // If x is nonnumeric, GAMMALN returns the #VALUE! error value.\r\n        // If x \u2264 0, GAMMALN returns the #NUM! error value.\r\n        if (x <= 0) {\r\n            throw FormulaError.NUM;\r\n        }\r\n\r\n        return jStat.gammaln(x);\r\n    },\r\n\r\n    GAUSS: (z) => {\r\n        // David\r\n        // If z is not a valid number, GAUSS returns the #NUM! error value.\r\n        // If z is not a valid data type, GAUSS returns the #VALUE! error value.\r\n        z = H.accept(z, Types.NUMBER);\r\n\r\n        return jStat.normal.cdf(z, 0, 1) - 0.5;\r\n    },\r\n\r\n    GEOMEAN: (...numbers) => {\r\n        // David\r\n        const filterArr = [];\r\n        // parse number only if the input is literal\r\n        H.flattenParams(numbers, Types.NUMBER, true, (item, info) => {\r\n            if (typeof item === \"number\") {\r\n                filterArr.push(item);\r\n            }\r\n        });\r\n        return jStat.geomean(filterArr);\r\n    },\r\n\r\n    GROWTH: (knownY, knownX, newX, useConst) => {\r\n        // Credits: Ilmari Karonen (http://stackoverflow.com/questions/14161990/how-to-implement-growth-function-in-javascript)\r\n        knownY = H.accept(knownY, Types.ARRAY, undefined, true, true);\r\n        for (let i = 0; i < knownY.length; i++) {\r\n            if (typeof knownY[i] !== \"number\")\r\n                throw FormulaError.VALUE;\r\n        }\r\n\r\n        knownX = H.accept(knownX, Types.ARRAY, null, true, true);\r\n        const isKnownXOmitted = knownX == null;\r\n        if (knownX == null) {\r\n            knownX = [];\r\n            for (let i = 1; i <= knownY.length; i++) {\r\n                knownX.push(i);\r\n            }\r\n        } else {\r\n            if (knownX.length !== knownY.length)\r\n                throw FormulaError.REF;\r\n            for (let i = 0; i < knownX.length; i++) {\r\n                if (typeof knownX[i] !== \"number\")\r\n                    throw FormulaError.VALUE;\r\n            }\r\n        }\r\n\r\n        newX = H.accept(newX, Types.ARRAY, null, false, true);\r\n        if (newX == null && isKnownXOmitted) {\r\n            newX = [];\r\n            for (let i = 1; i <= knownY.length; i++) {\r\n                newX.push(i);\r\n            }\r\n            newX = [newX];\r\n        } else if (newX == null) {\r\n            newX = Array.isArray(knownX[0]) ? knownX : [knownX];\r\n        }\r\n        useConst = H.accept(useConst, Types.BOOLEAN, true);\r\n\r\n        // Calculate sums over the data:\r\n        const n = knownY.length;\r\n        let avg_x = 0, avg_y = 0, avg_xy = 0, avg_xx = 0;\r\n        for (let i = 0; i < n; i++) {\r\n            const x = knownX[i];\r\n            const y = Math.log(knownY[i]);\r\n            avg_x += x;\r\n            avg_y += y;\r\n            avg_xy += x * y;\r\n            avg_xx += x * x;\r\n        }\r\n        avg_x /= n;\r\n        avg_y /= n;\r\n        avg_xy /= n;\r\n        avg_xx /= n;\r\n\r\n        // Compute linear regression coefficients:\r\n        let beta;\r\n        let alpha;\r\n        if (useConst) {\r\n            beta = (avg_xy - avg_x * avg_y) / (avg_xx - avg_x * avg_x);\r\n            alpha = avg_y - beta * avg_x;\r\n        } else {\r\n            beta = avg_xy / avg_xx;\r\n            alpha = 0;\r\n        }\r\n\r\n        // Compute and return result array:\r\n        const new_y = [];\r\n        for (let i = 0; i < newX.length; i++) {\r\n            new_y[i] = [];\r\n            for (let j = 0; j < newX[0].length; j++) {\r\n                if (typeof newX[i][j] !== \"number\")\r\n                    throw FormulaError.VALUE;\r\n                new_y[i][j] = Math.exp(alpha + beta * newX[i][j]);\r\n            }\r\n        }\r\n        return new_y;\r\n    },\r\n\r\n    HARMEAN: (...numbers) => {\r\n        let cnt = 0, denominator = 0;\r\n        // parse number only if the input is literal\r\n        H.flattenParams(numbers, Types.NUMBER, true, (item, info) => {\r\n            if (typeof item === \"number\") {\r\n                denominator += 1 / item;\r\n                cnt++;\r\n            }\r\n        });\r\n        return cnt / denominator;\r\n    },\r\n\r\n    'HYPGEOM.DIST': (sample_s, number_sample, population_s, number_pop, cumulative) => {\r\n        //          num_successes, num_draws, successes_in_pop, pop_size\r\n        // If any argument is nonnumeric, HYPGEOM.DIST returns the #VALUE! error value.\r\n        sample_s = H.accept(sample_s, Types.NUMBER);\r\n        number_sample = H.accept(number_sample, Types.NUMBER);\r\n        population_s = H.accept(population_s, Types.NUMBER);\r\n        number_pop = H.accept(number_pop, Types.NUMBER);\r\n        cumulative = H.accept(cumulative, Types.BOOLEAN);\r\n\r\n        // All arguments are truncated to integers.\r\n        sample_s = Math.trunc(sample_s);\r\n        number_sample = Math.trunc(number_sample);\r\n        population_s = Math.trunc(population_s);\r\n        number_pop = Math.trunc(number_pop);\r\n\r\n        // // If number_pop \u2264 0, HYPGEOM.DIST returns the #NUM! error value.\r\n        if (number_pop <= 0 || sample_s < 0 || number_sample <= 0 || population_s <= 0) {\r\n            throw FormulaError.NUM;\r\n        }\r\n\r\n        // // If number_sample \u2264 0 or number_sample > number_population, HYPGEOM.DIST returns the #NUM! error value.\r\n        if (number_sample > number_pop) {\r\n            throw FormulaError.NUM;\r\n        }\r\n        // // If population_s \u2264 0 or population_s > number_population, HYPGEOM.DIST returns the #NUM! error value.\r\n        if (population_s > number_pop) {\r\n            throw FormulaError.NUM;\r\n        }\r\n\r\n        // If sample_s < 0 or sample_s is greater than the lesser of number_sample or population_s, HYPGEOM.DIST returns the #NUM! error value.\r\n        // Google and Mircrosoft has different version on this funtion\r\n        if (number_sample < sample_s || population_s < sample_s) {\r\n            throw FormulaError.NUM;\r\n        }\r\n        // If sample_s is less than the larger of 0 or (number_sample - number_population + population_s), HYPGEOM.DIST returns the #NUM! error value.\r\n        if (sample_s < (number_sample - number_pop + population_s)) {\r\n            throw FormulaError.NUM;\r\n        }\r\n\r\n        function pdf(x, n, M, N) {\r\n            return MathFunctions.COMBIN(M, x) * MathFunctions.COMBIN(N - M, n - x) / MathFunctions.COMBIN(N, n);\r\n        }\r\n\r\n        function cdf(x, n, M, N) {\r\n            let result = 0;\r\n            for (let i = 0; i <= x; i++) {\r\n                result += pdf(i, n, M, N);\r\n            }\r\n            return result;\r\n        }\r\n\r\n        return cumulative ? cdf(sample_s, number_sample, population_s, number_pop) : pdf(sample_s, number_sample, population_s, number_pop);\r\n    },\r\n\r\n    INTERCEPT: (knownYs, knownXs) => {\r\n        // similar to FORECAST\r\n        knownYs = H.accept(knownYs, Types.ARRAY, undefined, true, true);\r\n        knownXs = H.accept(knownXs, Types.ARRAY, undefined, true, true);\r\n\r\n        if (knownXs.length !== knownYs.length)\r\n            throw FormulaError.NA;\r\n\r\n        // filter out values that are not number\r\n        const filteredY = [], filteredX = [];\r\n        for (let i = 0; i < knownYs.length; i++) {\r\n            if (typeof knownYs[i] !== \"number\" || typeof knownXs[i] !== \"number\")\r\n                continue;\r\n            filteredY.push(knownYs[i]);\r\n            filteredX.push(knownXs[i]);\r\n        }\r\n        if (filteredY.length <= 1)\r\n            throw FormulaError.DIV0;\r\n        const yMean = jStat.mean(filteredY);\r\n        const xMean = jStat.mean(filteredX);\r\n        let numerator = 0, denominator = 0;\r\n        for (let i = 0; i < filteredY.length; i++) {\r\n            numerator += (filteredX[i] - xMean) * (filteredY[i] - yMean);\r\n            denominator += (filteredX[i] - xMean) ** 2;\r\n        }\r\n        const b = numerator / denominator;\r\n        return yMean - b * xMean;\r\n    },\r\n\r\n    KURT: (...numbers) => {\r\n        let mean = 0, range = [];\r\n        // parse number only if the input is literal\r\n        H.flattenParams(numbers, Types.NUMBER, true, (item, info) => {\r\n            if (typeof item === \"number\") {\r\n                mean += item;\r\n                range.push(item);\r\n            }\r\n        });\r\n        const n = range.length;\r\n        mean /= n;\r\n        let sigma = 0;\r\n        for (let i = 0; i < n; i++) {\r\n            sigma += Math.pow(range[i] - mean, 4);\r\n        }\r\n        sigma = sigma / Math.pow(jStat.stdev(range, true), 4);\r\n        return ((n * (n + 1)) / ((n - 1) * (n - 2) * (n - 3))) * sigma - 3 * (n - 1) * (n - 1) / ((n - 2) * (n - 3));\r\n    },\r\n\r\n    LINEST: () => {\r\n\r\n    },\r\n\r\n    LOGEST: () => {\r\n\r\n    },\r\n\r\n    'LOGNORM.DIST': (x, mean, standard_dev, cumulative) => {\r\n        // if any argument is nonnumeric, LOGNORM.DIST returns the #VALUE! error value.\r\n        x = H.accept(x, Types.NUMBER);\r\n        mean = H.accept(mean, Types.NUMBER);\r\n        standard_dev = H.accept(standard_dev, Types.NUMBER);\r\n        cumulative = H.accept(cumulative, Types.BOOLEAN);\r\n        // If x \u2264 0 or if standard_dev \u2264 0, LOGNORM.DIST returns the #NUM! error value.\r\n        if (x <= 0 || standard_dev <= 0) {\r\n            throw FormulaError.NUM;\r\n        }\r\n\r\n        return cumulative ? jStat.lognormal.cdf(x, mean, standard_dev) : jStat.lognormal.pdf(x, mean, standard_dev);\r\n    },\r\n\r\n    'LOGNORM.INV': (probability, mean, standard_dev) => {\r\n        // If any argument is nonnumeric, LOGNORM.INV returns the #VALUE! error value.\r\n        probability = H.accept(probability, Types.NUMBER);\r\n        mean = H.accept(mean, Types.NUMBER);\r\n        standard_dev = H.accept(standard_dev, Types.NUMBER);\r\n        // If probability <= 0 or probability >= 1, LOGNORM.INV returns the #NUM! error value.\r\n        if (probability <= 0 || probability >= 1) {\r\n            throw FormulaError.NUM;\r\n        }\r\n        // If standard_dev <= 0, LOGNORM.INV returns the #NUM! error value.\r\n        if (standard_dev <= 0) {\r\n            throw FormulaError.NUM;\r\n        }\r\n\r\n        return jStat.lognormal.inv(probability, mean, standard_dev);\r\n    },\r\n\r\n    'MODE.MULT': () => {\r\n\r\n    },\r\n\r\n    'MODE.SNGL': () => {\r\n\r\n    },\r\n\r\n    'NEGBINOM.DIST': (number_f, number_s, probability_s, cumulative) => {\r\n        // If any argument is nonnumeric, NEGBINOM.DIST returns the #VALUE! error value.\r\n        number_f = H.accept(number_f, Types.NUMBER);\r\n        number_s = H.accept(number_s, Types.NUMBER);\r\n        probability_s = H.accept(probability_s, Types.NUMBER);\r\n        cumulative = H.accept(cumulative, Types.BOOLEAN);\r\n        // Number_f and number_s are truncated to integers.\r\n        number_f = Math.trunc(number_f);\r\n        number_s = Math.trunc(number_s);\r\n\r\n        // If probability_s < 0 or if probability > 1, NEGBINOM.DIST returns the #NUM! error value.\r\n        if (probability_s < 0 || probability_s > 1) {\r\n            throw FormulaError.NUM;\r\n        }\r\n        // If number_f < 0 or number_s < 1, NEGBINOM.DIST returns the #NUM! error value.\r\n        if (number_f < 0 || number_s < 1) {\r\n            throw FormulaError.NUM;\r\n        }\r\n\r\n        return cumulative ? jStat.negbin.cdf(number_f, number_s, probability_s) : jStat.negbin.pdf(number_f, number_s, probability_s);\r\n    },\r\n\r\n    'NORM.DIST': (x, mean, standard_dev, cumulative) => {\r\n        // If mean or standard_dev is nonnumeric, NORM.DIST returns the #VALUE! error value.\r\n        x = H.accept(x, Types.NUMBER);\r\n        mean = H.accept(mean, Types.NUMBER);\r\n        standard_dev = H.accept(standard_dev, Types.NUMBER);\r\n        cumulative = H.accept(cumulative, Types.BOOLEAN);\r\n\r\n        // If standard_dev \u2264 0, NORM.DIST returns the #NUM! error value.\r\n        if (standard_dev <= 0) {\r\n            throw FormulaError.NUM;\r\n        }\r\n        // If mean = 0, standard_dev = 1, and cumulative = TRUE, NORM.DIST returns the standard normal distribution, NORM.S.DIST.\r\n        return cumulative ? jStat.normal.cdf(x, mean, standard_dev) : jStat.normal.pdf(x, mean, standard_dev);\r\n\r\n    },\r\n\r\n    'NORM.INV': (probability, mean, standard_dev) => {\r\n        // If any argument is nonnumeric, NORM.INV returns the #VALUE! error value.\r\n        probability = H.accept(probability, Types.NUMBER);\r\n        mean = H.accept(mean, Types.NUMBER);\r\n        standard_dev = H.accept(standard_dev, Types.NUMBER);\r\n\r\n        // If probability <= 0 or if probability >= 1, NORM.INV returns the #NUM! error value.\r\n        if (probability <= 0 || probability >= 1) {\r\n            throw FormulaError.NUM;\r\n        }\r\n        // If standard_dev \u2264 0, NORM.INV returns the #NUM! error value.\r\n        if (standard_dev <= 0) {\r\n            throw FormulaError.NUM;\r\n        }\r\n        // If mean = 0 and standard_dev = 1, NORM.INV uses the standard normal distribution (see NORMS.INV).\r\n        // if(mean === 0 && standard_dev === 1){\r\n        // }\r\n\r\n        return jStat.normal.inv(probability, mean, standard_dev);\r\n\r\n    },\r\n\r\n    'NORM.S.DIST': (z, cumulative) => {\r\n        // If z is nonnumeric, NORM.S.DIST returns the #VALUE! error value.\r\n        z = H.accept(z, Types.NUMBER);\r\n        cumulative = H.accept(cumulative, Types.BOOLEAN);\r\n\r\n        return (cumulative) ? jStat.normal.cdf(z, 0, 1) : jStat.normal.pdf(z, 0, 1);\r\n    },\r\n\r\n    'NORM.S.INV': (probability) => {\r\n        // If probability is nonnumeric, NORMS.INV returns the #VALUE! error value.\r\n        probability = H.accept(probability, Types.NUMBER);\r\n        // If probability <= 0 or if probability >= 1, NORMS.INV returns the #NUM! error value.\r\n        if (probability <= 0 || probability >= 1) {\r\n            throw FormulaError.NUM;\r\n        }\r\n        return jStat.normal.inv(probability, 0, 1);\r\n    },\r\n\r\n    PEARSON: () => {\r\n\r\n    },\r\n\r\n    'PERCENTILE.EXC': () => {\r\n\r\n    },\r\n\r\n    'PERCENTILE.INC': () => {\r\n\r\n    },\r\n\r\n    'PERCENTRANK.EXC': () => {\r\n\r\n    },\r\n\r\n    'PERCENTRANK.INC': () => {\r\n\r\n    },\r\n\r\n    PERMUTATIONA: () => {\r\n\r\n    },\r\n\r\n    PHI: (x) => {\r\n        // If x is a numeric value that is not valid, PHI returns the #NUM! error value.\r\n        x = H.accept(x, Types.NUMBER);\r\n\r\n        return Math.exp(-0.5 * x * x) / SQRT2PI;\r\n    },\r\n\r\n    'POISSON.DIST': (x, mean, cumulative) => {\r\n        // If x or mean is nonnumeric, POISSON.DIST returns the #VALUE! error value.\r\n        x = H.accept(x, Types.NUMBER);\r\n        mean = H.accept(mean, Types.NUMBER);\r\n        cumulative = H.accept(cumulative, Types.BOOLEAN);\r\n        // If x < 0, POISSON.DIST returns the #NUM! error value.\r\n        // If mean < 0, POISSON.DIST returns the #NUM! error value.\r\n        if (x < 0 || mean < 0) {\r\n            throw FormulaError.NUM;\r\n        }\r\n        // If x is not an integer, it is truncated.\r\n        x = Math.trunc(x);\r\n\r\n        return cumulative ? jStat.poisson.cdf(x, mean) : jStat.poisson.pdf(x, mean);\r\n    },\r\n\r\n    'PROB': () => {\r\n\r\n    },\r\n\r\n    'QUARTILE.EXC': () => {\r\n\r\n    },\r\n\r\n    'QUARTILE.INC': () => {\r\n\r\n    },\r\n\r\n    'RANK.AVG': () => {\r\n\r\n    },\r\n\r\n    'RANK.EQ': () => {\r\n\r\n    },\r\n\r\n    RSQ: () => {\r\n\r\n    },\r\n\r\n    SKEW: () => {\r\n\r\n    },\r\n\r\n    'SKEW.P': () => {\r\n\r\n    },\r\n\r\n    SLOPE: () => {\r\n\r\n    },\r\n\r\n    STANDARDIZE: (x, mean, standard_dev) => {\r\n        x = H.accept(x, Types.NUMBER);\r\n        mean = H.accept(mean, Types.NUMBER);\r\n        standard_dev = H.accept(standard_dev, Types.NUMBER);\r\n        // If standard_dev \u2264 0, STANDARDIZE returns the #NUM! error value.\r\n        if (standard_dev <= 0) {\r\n            throw FormulaError.NUM;\r\n        }\r\n\r\n        return (x - mean) / standard_dev;\r\n    },\r\n\r\n    'STDEV.P': () => {\r\n\r\n    },\r\n\r\n    'STDEV.S': () => {\r\n\r\n    },\r\n\r\n    STDEVA: () => {\r\n\r\n    },\r\n\r\n    STDEVPA: () => {\r\n\r\n    },\r\n\r\n    STEYX: () => {\r\n\r\n    },\r\n\r\n    'T.DIST': (x, deg_freedom, cumulative) => {\r\n        // If any argument is nonnumeric, T.DIST returns the #VALUE! error value.\r\n        x = H.accept(x, Types.NUMBER);\r\n        deg_freedom = H.accept(deg_freedom, Types.NUMBER);\r\n        cumulative = H.accept(cumulative, Types.BOOLEAN);\r\n        // If deg_freedom < 1, T.DIST returns an error value. Deg_freedom needs to be at least 1.\r\n        if (deg_freedom < 1) {\r\n            throw FormulaError.NUM;\r\n        }\r\n\r\n        return cumulative ? jStat.studentt.cdf(x, deg_freedom) : jStat.studentt.pdf(x, deg_freedom);\r\n    },\r\n\r\n    'T.DIST.2T': (x, deg_freedom) => {\r\n        // If any argument is nonnumeric, T.DIST.2T returns the #VALUE! error value.\r\n        x = H.accept(x, Types.NUMBER);\r\n        deg_freedom = H.accept(deg_freedom, Types.NUMBER);\r\n        // If deg_freedom < 1, T.DIST.2T returns the #NUM! error value.\r\n        // If x < 0, then T.DIST.2T returns the #NUM! error value.\r\n        if (deg_freedom < 1 || x < 0) {\r\n            throw FormulaError.NUM;\r\n        }\r\n\r\n        return (1 - jStat.studentt.cdf(x, deg_freedom)) * 2;\r\n    },\r\n\r\n    'T.DIST.RT': (x, deg_freedom) => {\r\n        // If any argument is nonnumeric, T.DIST.RT returns the #VALUE! error value.\r\n        x = H.accept(x, Types.NUMBER);\r\n        deg_freedom = H.accept(deg_freedom, Types.NUMBER);\r\n        // If deg_freedom < 1, T.DIST.RT returns the #NUM! error value.\r\n        if (deg_freedom < 1) {\r\n            throw FormulaError.NUM;\r\n        }\r\n\r\n        return 1 - jStat.studentt.cdf(x, deg_freedom);\r\n    },\r\n\r\n    'T.INV': (probability, deg_freedom) => {\r\n        // If either argument is nonnumeric, T.INV returns the #VALUE! error value.\r\n        probability = H.accept(probability, Types.NUMBER);\r\n        deg_freedom = H.accept(deg_freedom, Types.NUMBER);\r\n        // If probability <= 0 or if probability > 1, T.INV returns the #NUM! error value.\r\n        // If deg_freedom < 1, T.INV returns the #NUM! error value.\r\n        if (probability <= 0 || probability > 1 || deg_freedom < 1) {\r\n            throw FormulaError.NUM;\r\n        }\r\n\r\n        // If deg_freedom is not an integer, it is truncated.\r\n        deg_freedom = deg_freedom % 1 === 0 ? deg_freedom : Math.trunc(deg_freedom);\r\n\r\n        return jStat.studentt.inv(probability, deg_freedom);\r\n    },\r\n\r\n    'T.INV.2T': (probability, deg_freedom) => {\r\n        // If either argument is nonnumeric, T.INV.2T returns the #VALUE! error value.\r\n        probability = H.accept(probability, Types.NUMBER);\r\n        deg_freedom = H.accept(deg_freedom, Types.NUMBER);\r\n        // If probability <= 0 or if probability > 1, T.INV.2T returns the #NUM! error value.\r\n        // If deg_freedom < 1, T.INV.2T returns the #NUM! error value.\r\n        if (probability <= 0 || probability > 1 || deg_freedom < 1) {\r\n            throw FormulaError.NUM;\r\n        }\r\n        // If deg_freedom is not an integer, it is truncated.\r\n        deg_freedom = deg_freedom % 1 === 0 ? deg_freedom : Math.trunc(deg_freedom);\r\n\r\n        return Math.abs(jStat.studentt.inv(probability / 2, deg_freedom));\r\n\r\n    },\r\n\r\n    'T.TEST': () => {\r\n\r\n    },\r\n\r\n    TREND: () => {\r\n\r\n    },\r\n\r\n    TRIMMEAN: () => {\r\n\r\n    },\r\n\r\n    'VAR.P': () => {\r\n\r\n    },\r\n\r\n    'VAR.S': () => {\r\n\r\n    },\r\n\r\n    'VARA': () => {\r\n\r\n    },\r\n\r\n    'VARPA': () => {\r\n\r\n    },\r\n\r\n    'WEIBULL.DIST': (x, alpha, beta, cumulative) => {\r\n        // If x, alpha, or beta is nonnumeric, WEIBULL.DIST returns the #VALUE! error value.\r\n        x = H.accept(x, Types.NUMBER);\r\n        alpha = H.accept(alpha, Types.NUMBER);\r\n        beta = H.accept(beta, Types.NUMBER);\r\n        cumulative = H.accept(cumulative, Types.BOOLEAN);\r\n        // If x < 0, WEIBULL.DIST returns the #NUM! error value.\r\n        // If alpha \u2264 0 or if beta \u2264 0, WEIBULL.DIST returns the #NUM! error value.\r\n        if (x < 0 || alpha <= 0 || beta <= 0) {\r\n            throw FormulaError.NUM;\r\n        }\r\n\r\n        return cumulative\r\n            ? 1 - Math.exp(-Math.pow(x / beta, alpha))\r\n            : Math.pow(x, alpha - 1) * Math.exp(-Math.pow(x / beta, alpha)) * alpha / Math.pow(beta, alpha);\r\n    },\r\n\r\n    'Z.TEST': () => {\r\n\r\n    }\r\n};\r\n\r\n\r\nmodule.exports = {\r\n    DistributionFunctions,\r\n};\r\n", "const FormulaError = require('../error');\r\nconst {FormulaHelpers, Types, Criteria, Address} = require('../helpers');\r\nconst {Infix} = require('../operators');\r\nconst H = FormulaHelpers;\r\nconst {DistributionFunctions} = require('./distribution');\r\n\r\nconst StatisticalFunctions = {\r\n    AVEDEV: (...numbers) => {\r\n        let sum = 0;\r\n        const arr = [];\r\n        // parse number only if the input is literal\r\n        H.flattenParams(numbers, Types.NUMBER, true, (item, info) => {\r\n            if (typeof item === \"number\") {\r\n                sum += item;\r\n                arr.push(item);\r\n            }\r\n        });\r\n        const avg = sum / arr.length;\r\n        sum = 0;\r\n        for (let i = 0; i < arr.length; i++) {\r\n            sum += Math.abs(arr[i] - avg);\r\n        }\r\n        return sum / arr.length;\r\n    },\r\n\r\n    AVERAGE: (...numbers) => {\r\n        let sum = 0, cnt = 0;\r\n        // parse number only if the input is literal\r\n        H.flattenParams(numbers, Types.NUMBER, true, (item, info) => {\r\n            if (typeof item === \"number\") {\r\n                sum += item;\r\n                cnt++;\r\n            }\r\n        });\r\n        return sum / cnt;\r\n    },\r\n\r\n    AVERAGEA: (...numbers) => {\r\n        let sum = 0, cnt = 0;\r\n        // parse number only if the input is literal\r\n        H.flattenParams(numbers, Types.NUMBER, true, (item, info) => {\r\n            const type = typeof item;\r\n            if (type === \"number\") {\r\n                sum += item;\r\n                cnt++;\r\n            } else if (type === \"string\") {\r\n                cnt++;\r\n            }\r\n        });\r\n        return sum / cnt;\r\n    },\r\n\r\n    // special\r\n    AVERAGEIF: (context, range, criteria, averageRange) => {\r\n        const ranges = H.retrieveRanges(context, range, averageRange);\r\n        range = ranges[0];\r\n        averageRange = ranges[1];\r\n\r\n        criteria = H.retrieveArg(context, criteria);\r\n        const isCriteriaArray = criteria.isArray;\r\n        criteria = Criteria.parse(H.accept(criteria));\r\n\r\n        let sum = 0, cnt = 0;\r\n        range.forEach((row, rowNum) => {\r\n            row.forEach((value, colNum) => {\r\n                const valueToAdd = averageRange[rowNum][colNum];\r\n                if (typeof valueToAdd !== \"number\")\r\n                    return;\r\n                // wildcard\r\n                if (criteria.op === 'wc') {\r\n                    if (criteria.match === criteria.value.test(value)) {\r\n                        sum += valueToAdd;\r\n                        cnt++;\r\n                    }\r\n                } else if (Infix.compareOp(value, criteria.op, criteria.value, Array.isArray(value), isCriteriaArray)) {\r\n                    sum += valueToAdd;\r\n                    cnt++;\r\n                }\r\n            })\r\n        });\r\n        if (cnt === 0) throw FormulaError.DIV0;\r\n        return sum / cnt;\r\n    },\r\n\r\n    AVERAGEIFS: () => {\r\n\r\n    },\r\n\r\n    COUNT: (...ranges) => {\r\n        let cnt = 0;\r\n        H.flattenParams(ranges, null, true,\r\n            (item, info) => {\r\n                // literal will be parsed to Type.NUMBER\r\n                if (info.isLiteral && !isNaN(item)) {\r\n                    cnt++;\r\n                } else {\r\n                    if (typeof item === \"number\")\r\n                        cnt++;\r\n                }\r\n            });\r\n        return cnt;\r\n    },\r\n\r\n    COUNTIF: (range, criteria) => {\r\n        // do not flatten the array\r\n        range = H.accept(range, Types.ARRAY, undefined, false, true);\r\n        const isCriteriaArray = criteria.isArray;\r\n        criteria = H.accept(criteria);\r\n\r\n        let cnt = 0;\r\n        // parse criteria\r\n        criteria = Criteria.parse(criteria);\r\n\r\n        range.forEach(row => {\r\n            row.forEach(value => {\r\n                // wildcard\r\n                if (criteria.op === 'wc') {\r\n                    if (criteria.match === criteria.value.test(value))\r\n                        cnt++;\r\n                } else if (Infix.compareOp(value, criteria.op, criteria.value, Array.isArray(value), isCriteriaArray)) {\r\n                    cnt++;\r\n                }\r\n            })\r\n        });\r\n        return cnt;\r\n    },\r\n\r\n    LARGE: () => {\r\n\r\n    },\r\n\r\n    MAX: () => {\r\n\r\n    },\r\n\r\n    MAXA: () => {\r\n\r\n    },\r\n\r\n    MAXIFS: () => {\r\n\r\n    },\r\n\r\n    MEDIAN: () => {\r\n\r\n    },\r\n\r\n    MIN: () => {\r\n\r\n    },\r\n\r\n    MINA: () => {\r\n\r\n    },\r\n\r\n    MINIFS: () => {\r\n\r\n    },\r\n\r\n    PERMUT: () => {\r\n\r\n    },\r\n\r\n    PERMUTATIONA: () => {\r\n\r\n    },\r\n\r\n    SMALL: () => {\r\n\r\n    },\r\n\r\n};\r\n\r\n\r\nmodule.exports = Object.assign(StatisticalFunctions, DistributionFunctions);\r\n", "const FormulaError = require('../error');\r\nconst {FormulaHelpers, Types} = require('../helpers');\r\nconst H = FormulaHelpers;\r\n\r\nconst MS_PER_DAY = 1000 * 60 * 60 * 24;\r\nconst d1900 = new Date(Date.UTC(1900, 0, 1));\r\nconst WEEK_STARTS = [\r\n    undefined, 0, 1, undefined, undefined, undefined, undefined, undefined, undefined,\r\n    undefined, undefined, undefined, 1, 2, 3, 4, 5, 6, 0];\r\nconst WEEK_TYPES = [\r\n    undefined,\r\n    [1, 2, 3, 4, 5, 6, 7],\r\n    [7, 1, 2, 3, 4, 5, 6],\r\n    [6, 0, 1, 2, 3, 4, 5],\r\n    undefined,\r\n    undefined,\r\n    undefined,\r\n    undefined,\r\n    undefined,\r\n    undefined,\r\n    undefined,\r\n    [7, 1, 2, 3, 4, 5, 6],\r\n    [6, 7, 1, 2, 3, 4, 5],\r\n    [5, 6, 7, 1, 2, 3, 4],\r\n    [4, 5, 6, 7, 1, 2, 3],\r\n    [3, 4, 5, 6, 7, 1, 2],\r\n    [2, 3, 4, 5, 6, 7, 1],\r\n    [1, 2, 3, 4, 5, 6, 7]\r\n];\r\nconst WEEKEND_TYPES = [\r\n    undefined,\r\n    [6, 0],\r\n    [0, 1],\r\n    [1, 2],\r\n    [2, 3],\r\n    [3, 4],\r\n    [4, 5],\r\n    [5, 6],\r\n    undefined,\r\n    undefined,\r\n    undefined,\r\n    [0],\r\n    [1],\r\n    [2],\r\n    [3],\r\n    [4],\r\n    [5],\r\n    [6]\r\n];\r\n\r\n// Formats: h:mm:ss A, h:mm A, H:mm, H:mm:ss, H A\r\nconst timeRegex = /^\\s*(\\d\\d?)\\s*(:\\s*\\d\\d?)?\\s*(:\\s*\\d\\d?)?\\s*(pm|am)?\\s*$/i;\r\n// 12-3, 12/3\r\nconst dateRegex1 = /^\\s*((\\d\\d?)\\s*([-\\/])\\s*(\\d\\d?))([\\d:.apm\\s]*)$/i;\r\n// 3-Dec, 3/Dec\r\nconst dateRegex2 = /^\\s*((\\d\\d?)\\s*([-/])\\s*(jan\\w*|feb\\w*|mar\\w*|apr\\w*|may\\w*|jun\\w*|jul\\w*|aug\\w*|sep\\w*|oct\\w*|nov\\w*|dec\\w*))([\\d:.apm\\s]*)$/i;\r\n// Dec-3, Dec/3\r\nconst dateRegex3 = /^\\s*((jan\\w*|feb\\w*|mar\\w*|apr\\w*|may\\w*|jun\\w*|jul\\w*|aug\\w*|sep\\w*|oct\\w*|nov\\w*|dec\\w*)\\s*([-/])\\s*(\\d\\d?))([\\d:.apm\\s]*)$/i;\r\n\r\nfunction parseSimplifiedDate(text) {\r\n    const fmt1 = text.match(dateRegex1);\r\n    const fmt2 = text.match(dateRegex2);\r\n    const fmt3 = text.match(dateRegex3);\r\n    if (fmt1) {\r\n        text = fmt1[1] + fmt1[3] + new Date().getFullYear() + fmt1[5];\r\n    } else if (fmt2) {\r\n        text = fmt2[1] + fmt2[3] + new Date().getFullYear() + fmt2[5];\r\n    } else if (fmt3) {\r\n        text = fmt3[1] + fmt3[3] + new Date().getFullYear() + fmt3[5];\r\n    }\r\n    return new Date(Date.parse(`${text} UTC`));\r\n}\r\n\r\n/**\r\n * Parse time string to date in UTC.\r\n * @param {string} text\r\n */\r\nfunction parseTime(text) {\r\n    const res = text.match(timeRegex);\r\n    if (!res) return;\r\n\r\n    // \u00A0[\"4:50:55 pm\", \"4\", \":50\", \":55\", \"pm\", ...]\r\n    const minutes = res[2] ? res[2] : ':00';\r\n    const seconds = res[3] ? res[3] : ':00';\r\n    const ampm = res[4] ? ' ' + res[4] : '';\r\n\r\n    const date = new Date(Date.parse(`1/1/1900 ${res[1] + minutes + seconds + ampm} UTC`));\r\n    let now = new Date();\r\n    now = new Date(Date.UTC(now.getFullYear(), now.getMonth(), now.getDate(),\r\n        now.getHours(), now.getMinutes(), now.getSeconds(), now.getMilliseconds()));\r\n\r\n    return new Date(Date.UTC(now.getUTCFullYear(), now.getUTCMonth(), now.getUTCDate(),\r\n        date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), date.getUTCMilliseconds()));\r\n}\r\n\r\n/**\r\n * Parse a UTC date to excel serial number.\r\n * @param {Date|number} date - A UTC date.\r\n * @returns {number}\r\n */\r\nfunction toSerial(date) {\r\n    const addOn = (date > -2203891200000) ? 2 : 1;\r\n    return Math.floor((date - d1900) / 86400000) + addOn;\r\n}\r\n\r\n/**\r\n * Parse an excel serial number to UTC date.\r\n * @param serial\r\n * @returns {Date}\r\n */\r\nfunction toDate(serial) {\r\n    if (serial < 0) {\r\n        throw FormulaError.VALUE;\r\n    }\r\n    if (serial <= 60) {\r\n        return new Date(d1900.getTime() + (serial - 1) * 86400000);\r\n    }\r\n    return new Date(d1900.getTime() + (serial - 2) * 86400000);\r\n}\r\n\r\nfunction parseDateWithExtra(serialOrString) {\r\n    if (serialOrString instanceof Date) return {date: serialOrString};\r\n    serialOrString = H.accept(serialOrString);\r\n    let isDateGiven = true, date;\r\n    if (!isNaN(serialOrString)) {\r\n        serialOrString = Number(serialOrString);\r\n        date = toDate(serialOrString);\r\n    } else {\r\n        // support time without date\r\n        date = parseTime(serialOrString);\r\n\r\n        if (!date) {\r\n            date = parseSimplifiedDate(serialOrString);\r\n        } else {\r\n            isDateGiven = false;\r\n        }\r\n    }\r\n    return {date, isDateGiven};\r\n}\r\n\r\nfunction parseDate(serialOrString) {\r\n    return parseDateWithExtra(serialOrString).date;\r\n}\r\n\r\nfunction compareDateIgnoreTime(date1, date2) {\r\n    return date1.getUTCFullYear() === date2.getUTCFullYear() &&\r\n        date1.getUTCMonth() === date2.getUTCMonth() &&\r\n        date1.getUTCDate() === date2.getUTCDate();\r\n}\r\n\r\nfunction isLeapYear(year) {\r\n    if (year === 1900) {\r\n        return true;\r\n    }\r\n    return new Date(year, 1, 29).getMonth() === 1;\r\n}\r\n\r\nconst DateFunctions = {\r\n    DATE: (year, month, day) => {\r\n        year = H.accept(year, Types.NUMBER);\r\n        month = H.accept(month, Types.NUMBER);\r\n        day = H.accept(day, Types.NUMBER);\r\n        if (year < 0 || year >= 10000)\r\n            throw FormulaError.NUM;\r\n\r\n        // If year is between 0 (zero) and 1899 (inclusive), Excel adds that value to 1900 to calculate the year.\r\n        if (year < 1900) {\r\n            year += 1900;\r\n        }\r\n\r\n        return toSerial(Date.UTC(year, month - 1, day));\r\n    },\r\n\r\n    DATEDIF: (startDate, endDate, unit) => {\r\n        startDate = parseDate(startDate);\r\n        endDate = parseDate(endDate);\r\n        unit = H.accept(unit, Types.STRING).toLowerCase();\r\n\r\n        if (startDate > endDate)\r\n            throw FormulaError.NUM;\r\n        const yearDiff = endDate.getUTCFullYear() - startDate.getUTCFullYear();\r\n        const monthDiff = endDate.getUTCMonth() - startDate.getUTCMonth();\r\n        const dayDiff = endDate.getUTCDate() - startDate.getUTCDate();\r\n        let offset;\r\n        switch (unit) {\r\n            case 'y':\r\n                offset = monthDiff < 0 || monthDiff === 0 && dayDiff < 0 ? -1 : 0;\r\n                return offset + yearDiff;\r\n            case 'm':\r\n                offset = dayDiff < 0 ? -1 : 0;\r\n                return yearDiff * 12 + monthDiff + offset;\r\n            case 'd':\r\n                return Math.floor(endDate - startDate) / MS_PER_DAY;\r\n            case 'md':\r\n                // The months and years of the dates are ignored.\r\n                startDate.setUTCFullYear(endDate.getUTCFullYear());\r\n                if (dayDiff < 0) {\r\n                    startDate.setUTCMonth(endDate.getUTCMonth() - 1)\r\n                } else {\r\n                    startDate.setUTCMonth(endDate.getUTCMonth())\r\n                }\r\n                return Math.floor(endDate - startDate) / MS_PER_DAY;\r\n            case 'ym':\r\n                // The days and years of the dates are ignored\r\n                offset = dayDiff < 0 ? -1 : 0;\r\n                return (offset + yearDiff * 12 + monthDiff) % 12;\r\n            case 'yd':\r\n                // The years of the dates are ignored.\r\n                if (monthDiff < 0 || monthDiff === 0 && dayDiff < 0) {\r\n                    startDate.setUTCFullYear(endDate.getUTCFullYear() - 1);\r\n                } else {\r\n                    startDate.setUTCFullYear(endDate.getUTCFullYear());\r\n                }\r\n                return Math.floor(endDate - startDate) / MS_PER_DAY;\r\n\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Limitation: Year must be four digit, only support ISO 8016 date format.\r\n     * Does not support date without year, i.e. \"5-JUL\".\r\n     * @param {string} dateText\r\n     */\r\n    DATEVALUE: (dateText) => {\r\n        dateText = H.accept(dateText, Types.STRING);\r\n        const {date, isDateGiven} = parseDateWithExtra(dateText);\r\n        if (!isDateGiven) return 0;\r\n        const serial = toSerial(date);\r\n        if (serial < 0 || serial > 2958465)\r\n            throw FormulaError.VALUE;\r\n        return serial;\r\n    },\r\n\r\n    DAY: serialOrString => {\r\n        const date = parseDate(serialOrString);\r\n        return date.getUTCDate();\r\n    },\r\n\r\n    DAYS: (endDate, startDate) => {\r\n        endDate = parseDate(endDate);\r\n        startDate = parseDate(startDate);\r\n        let offset = 0;\r\n        if (startDate < -2203891200000 && -2203891200000 < endDate) {\r\n            offset = 1;\r\n        }\r\n        return Math.floor(endDate - startDate) / MS_PER_DAY + offset;\r\n    },\r\n\r\n    DAYS360: (startDate, endDate, method) => {\r\n        startDate = parseDate(startDate);\r\n        endDate = parseDate(endDate);\r\n        // default is US method\r\n        method = H.accept(method, Types.BOOLEAN, false);\r\n\r\n        if (startDate.getUTCDate() === 31) {\r\n            startDate.setUTCDate(30);\r\n        }\r\n        if (!method && startDate.getUTCDate() < 30 && endDate.getUTCDate() > 30) {\r\n            endDate.setUTCMonth(endDate.getUTCMonth() + 1, 1);\r\n        } else {\r\n            // European method\r\n            if (endDate.getUTCDate() === 31) {\r\n                endDate.setUTCDate(30);\r\n            }\r\n        }\r\n\r\n        const yearDiff = endDate.getUTCFullYear() - startDate.getUTCFullYear();\r\n        const monthDiff = endDate.getUTCMonth() - startDate.getUTCMonth();\r\n        const dayDiff = endDate.getUTCDate() - startDate.getUTCDate();\r\n\r\n        return (monthDiff) * 30 + dayDiff + yearDiff * 12 * 30;\r\n    },\r\n\r\n    EDATE: (startDate, months) => {\r\n        startDate = parseDate(startDate);\r\n        months = H.accept(months, Types.NUMBER);\r\n        startDate.setUTCMonth(startDate.getUTCMonth() + months);\r\n        return toSerial(startDate);\r\n    },\r\n\r\n    EOMONTH: (startDate, months) => {\r\n        startDate = parseDate(startDate);\r\n        months = H.accept(months, Types.NUMBER);\r\n        startDate.setUTCMonth(startDate.getUTCMonth() + months + 1, 0);\r\n        return toSerial(startDate);\r\n    },\r\n\r\n    HOUR: serialOrString => {\r\n        const date = parseDate(serialOrString);\r\n        return date.getUTCHours();\r\n    },\r\n\r\n    ISOWEEKNUM: (serialOrString) => {\r\n        const date = parseDate(serialOrString);\r\n\r\n        // https://stackoverflow.com/questions/6117814/get-week-of-year-in-javascript-like-in-php\r\n        const d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\r\n        const dayNum = d.getUTCDay();\r\n        d.setUTCDate(d.getUTCDate() + 4 - dayNum);\r\n        const yearStart = new Date(Date.UTC(d.getUTCFullYear(), 0, 1));\r\n        return Math.ceil((((d - yearStart) / 86400000) + 1) / 7)\r\n    },\r\n\r\n    MINUTE: serialOrString => {\r\n        const date = parseDate(serialOrString);\r\n        return date.getUTCMinutes();\r\n    },\r\n\r\n    MONTH: serialOrString => {\r\n        const date = parseDate(serialOrString);\r\n        return date.getUTCMonth() + 1;\r\n    },\r\n\r\n    NETWORKDAYS: (startDate, endDate, holidays) => {\r\n        startDate = parseDate(startDate);\r\n        endDate = parseDate(endDate);\r\n        let sign = 1;\r\n        if (startDate > endDate) {\r\n            sign = -1;\r\n            const temp = startDate;\r\n            startDate = endDate;\r\n            endDate = temp;\r\n        }\r\n        const holidaysArr = [];\r\n        if (holidays != null) {\r\n            H.flattenParams([holidays], Types.NUMBER, false, item => {\r\n                holidaysArr.push(parseDate(item));\r\n            });\r\n        }\r\n        let numWorkDays = 0;\r\n        while (startDate <= endDate) {\r\n            // Skips Sunday and Saturday\r\n            if (startDate.getUTCDay() !== 0 && startDate.getUTCDay() !== 6) {\r\n                let found = false;\r\n                for (let i = 0; i < holidaysArr.length; i++) {\r\n                    if (compareDateIgnoreTime(startDate, holidaysArr[i])) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n                if (!found) numWorkDays++;\r\n            }\r\n            startDate.setUTCDate(startDate.getUTCDate() + 1);\r\n        }\r\n        return sign * numWorkDays;\r\n\r\n    },\r\n\r\n    'NETWORKDAYS.INTL': (startDate, endDate, weekend, holidays) => {\r\n        startDate = parseDate(startDate);\r\n        endDate = parseDate(endDate);\r\n        let sign = 1;\r\n        if (startDate > endDate) {\r\n            sign = -1;\r\n            const temp = startDate;\r\n            startDate = endDate;\r\n            endDate = temp;\r\n        }\r\n        weekend = H.accept(weekend, null, 1);\r\n        // Using 1111111 will always return 0.\r\n        if (weekend === '1111111')\r\n            return 0;\r\n\r\n        // using weekend string, i.e, 0000011\r\n        if (typeof weekend === \"string\" && Number(weekend).toString() !== weekend) {\r\n            if (weekend.length !== 7) throw FormulaError.VALUE;\r\n            weekend = weekend.charAt(6) + weekend.slice(0, 6);\r\n            const weekendArr = [];\r\n            for (let i = 0; i < weekend.length; i++) {\r\n                if (weekend.charAt(i) === '1')\r\n                    weekendArr.push(i);\r\n            }\r\n            weekend = weekendArr;\r\n        } else {\r\n            // using weekend number\r\n            if (typeof weekend !== \"number\")\r\n                throw FormulaError.VALUE;\r\n            weekend = WEEKEND_TYPES[weekend];\r\n        }\r\n\r\n        const holidaysArr = [];\r\n        if (holidays != null) {\r\n            H.flattenParams([holidays], Types.NUMBER, false, item => {\r\n                holidaysArr.push(parseDate(item));\r\n            });\r\n        }\r\n        let numWorkDays = 0;\r\n        while (startDate <= endDate) {\r\n            let skip = false;\r\n            for (let i = 0; i < weekend.length; i++) {\r\n                if (weekend[i] === startDate.getUTCDay()) {\r\n                    skip = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (!skip) {\r\n                let found = false;\r\n                for (let i = 0; i < holidaysArr.length; i++) {\r\n                    if (compareDateIgnoreTime(startDate, holidaysArr[i])) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n                if (!found) numWorkDays++;\r\n            }\r\n            startDate.setUTCDate(startDate.getUTCDate() + 1);\r\n        }\r\n        return sign * numWorkDays;\r\n\r\n    },\r\n\r\n    NOW: () => {\r\n        const now = new Date();\r\n        return toSerial(Date.UTC(now.getFullYear(), now.getMonth(), now.getDate(),\r\n            now.getHours(), now.getMinutes(), now.getSeconds(), now.getMilliseconds()))\r\n            + (3600 * now.getHours() + 60 * now.getMinutes() + now.getSeconds()) / 86400;\r\n    },\r\n\r\n    SECOND: (serialOrString) => {\r\n        const date = parseDate(serialOrString);\r\n        return date.getUTCSeconds();\r\n    },\r\n\r\n    TIME: (hour, minute, second) => {\r\n        hour = H.accept(hour, Types.NUMBER);\r\n        minute = H.accept(minute, Types.NUMBER);\r\n        second = H.accept(second, Types.NUMBER);\r\n\r\n        if (hour < 0 || hour > 32767 || minute < 0 || minute > 32767 || second < 0 || second > 32767)\r\n            throw FormulaError.NUM;\r\n        return (3600 * hour + 60 * minute + second) / 86400;\r\n    },\r\n\r\n    TIMEVALUE: (timeText) => {\r\n        timeText = parseDate(timeText);\r\n        return (3600 * timeText.getUTCHours() + 60 * timeText.getUTCMinutes() + timeText.getUTCSeconds()) / 86400;\r\n    },\r\n\r\n    TODAY: () => {\r\n        const now = new Date();\r\n        return toSerial(Date.UTC(now.getFullYear(), now.getMonth(), now.getDate()));\r\n    },\r\n\r\n    WEEKDAY: (serialOrString, returnType) => {\r\n        const date = parseDate(serialOrString);\r\n        returnType = H.accept(returnType, Types.NUMBER, 1);\r\n\r\n        const day = date.getUTCDay();\r\n        const weekTypes = WEEK_TYPES[returnType];\r\n        if (!weekTypes)\r\n            throw FormulaError.NUM;\r\n        return weekTypes[day];\r\n\r\n    },\r\n\r\n    WEEKNUM: (serialOrString, returnType) => {\r\n        const date = parseDate(serialOrString);\r\n        returnType = H.accept(returnType, Types.NUMBER, 1);\r\n        if (returnType === 21) {\r\n            return DateFunctions.ISOWEEKNUM(serialOrString);\r\n        }\r\n        const weekStart = WEEK_STARTS[returnType];\r\n        const yearStart = new Date(Date.UTC(date.getUTCFullYear(), 0, 1));\r\n        const offset = yearStart.getUTCDay() < weekStart ? 1 : 0;\r\n        return Math.ceil((((date - yearStart) / 86400000) + 1) / 7) + offset;\r\n    },\r\n\r\n    WORKDAY: (startDate, days, holidays) => {\r\n        return DateFunctions[\"WORKDAY.INTL\"](startDate, days, 1, holidays);\r\n    },\r\n\r\n    'WORKDAY.INTL': (startDate, days, weekend, holidays) => {\r\n        startDate = parseDate(startDate);\r\n        days = H.accept(days, Types.NUMBER);\r\n\r\n        weekend = H.accept(weekend, null, 1);\r\n        // Using 1111111 will always return value error.\r\n        if (weekend === '1111111')\r\n            throw FormulaError.VALUE;\r\n\r\n        // using weekend string, i.e, 0000011\r\n        if (typeof weekend === \"string\" && Number(weekend).toString() !== weekend) {\r\n            if (weekend.length !== 7)\r\n                throw FormulaError.VALUE;\r\n            weekend = weekend.charAt(6) + weekend.slice(0, 6);\r\n            const weekendArr = [];\r\n            for (let i = 0; i < weekend.length; i++) {\r\n                if (weekend.charAt(i) === '1')\r\n                    weekendArr.push(i);\r\n            }\r\n            weekend = weekendArr;\r\n        } else {\r\n            // using weekend number\r\n            if (typeof weekend !== \"number\")\r\n                throw FormulaError.VALUE;\r\n            weekend = WEEKEND_TYPES[weekend];\r\n            if (weekend == null)\r\n                throw FormulaError.NUM;\r\n        }\r\n\r\n        const holidaysArr = [];\r\n        if (holidays != null) {\r\n            H.flattenParams([holidays], Types.NUMBER, false, item => {\r\n                holidaysArr.push(parseDate(item));\r\n            });\r\n        }\r\n        startDate.setUTCDate(startDate.getUTCDate() + 1);\r\n        let cnt = 0;\r\n        while (cnt < days) {\r\n            let skip = false;\r\n            for (let i = 0; i < weekend.length; i++) {\r\n                if (weekend[i] === startDate.getUTCDay()) {\r\n                    skip = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (!skip) {\r\n                let found = false;\r\n                for (let i = 0; i < holidaysArr.length; i++) {\r\n                    if (compareDateIgnoreTime(startDate, holidaysArr[i])) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n                if (!found) cnt++;\r\n            }\r\n            startDate.setUTCDate(startDate.getUTCDate() + 1);\r\n        }\r\n        return toSerial(startDate) - 1;\r\n    },\r\n\r\n    YEAR: (serialOrString) => {\r\n        const date = parseDate(serialOrString);\r\n        return date.getUTCFullYear();\r\n    },\r\n\r\n    // Warning: may have bugs\r\n    YEARFRAC: (startDate, endDate, basis) => {\r\n        startDate = parseDate(startDate);\r\n        endDate = parseDate(endDate);\r\n        if (startDate > endDate) {\r\n            const temp = startDate;\r\n            startDate = endDate;\r\n            endDate = temp;\r\n        }\r\n        basis = H.accept(basis, Types.NUMBER, 0);\r\n        basis = Math.trunc(basis);\r\n\r\n        if (basis < 0 || basis > 4)\r\n            throw FormulaError.VALUE;\r\n\r\n        // https://github.com/LesterLyu/formula.js/blob/develop/lib/date-time.js#L508\r\n        let sd = startDate.getUTCDate();\r\n        const sm = startDate.getUTCMonth() + 1;\r\n        const sy = startDate.getUTCFullYear();\r\n        let ed = endDate.getUTCDate();\r\n        const em = endDate.getUTCMonth() + 1;\r\n        const ey = endDate.getUTCFullYear();\r\n\r\n        switch (basis) {\r\n            case 0:\r\n                // US (NASD) 30/360\r\n                if (sd === 31 && ed === 31) {\r\n                    sd = 30;\r\n                    ed = 30;\r\n                } else if (sd === 31) {\r\n                    sd = 30;\r\n                } else if (sd === 30 && ed === 31) {\r\n                    ed = 30;\r\n                }\r\n                return Math.abs((ed + em * 30 + ey * 360) - (sd + sm * 30 + sy * 360)) / 360;\r\n            case 1:\r\n                // Actual/actual\r\n                if (ey - sy < 2) {\r\n                    const yLength = isLeapYear(sy) && sy !== 1900 ? 366 : 365;\r\n                    const days = DateFunctions.DAYS(endDate, startDate);\r\n                    return days / yLength;\r\n                } else {\r\n                    const years = (ey - sy) + 1;\r\n                    const days = (new Date(ey + 1, 0, 1) - new Date(sy, 0, 1)) / 1000 / 60 / 60 / 24;\r\n                    const average = days / years;\r\n                    return DateFunctions.DAYS(endDate, startDate) / average;\r\n                }\r\n            case 2:\r\n                // Actual/360\r\n                return Math.abs(DateFunctions.DAYS(endDate, startDate) / 360);\r\n            case 3:\r\n                // Actual/365\r\n                return Math.abs(DateFunctions.DAYS(endDate, startDate) / 365);\r\n            case 4:\r\n                // European 30/360\r\n                return Math.abs((ed + em * 30 + ey * 360) - (sd + sm * 30 + sy * 360)) / 360;\r\n        }\r\n    },\r\n};\r\n\r\nmodule.exports = DateFunctions;\r\n", "const FormulaError = require('../error');\r\nconst {FormulaHelpers, Types} = require('../helpers');\r\nconst H = FormulaHelpers;\r\n\r\nconst WebFunctions = {\r\n    ENCODEURL: text => {\r\n        return encodeURIComponent(H.accept(text, Types.STRING));\r\n    },\r\n\r\n    FILTERXML: () => {\r\n        // Not implemented due to extra dependency\r\n    },\r\n\r\n    WEBSERVICE: (context, url) => {\r\n        throw FormulaError.ERROR('WEBSERVICE is not supported in sync mode.');\r\n        if (typeof fetch === \"function\") {\r\n            url = H.accept(url, Types.STRING);\r\n            return fetch(url).then(res => res.text());\r\n        } else {\r\n            // Not implemented for Node.js due to extra dependency\r\n            // Sample code for Node.js\r\n            // const fetch = require('node-fetch');\r\n            // url = H.accept(url, Types.STRING);\r\n            // return fetch(url).then(res => res.text());\r\n            throw FormulaError.ERROR('WEBSERVICE only available to browser with fetch.' +\r\n                'If you want to use WEBSERVICE in Node.js, please override this function: \\n' +\r\n                'new FormulaParser({\\n' +\r\n                '    functionsNeedContext: {\\n' +\r\n                '        WEBSERVICE: (context, url) => {...}}\\n' +\r\n                '})');\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports = WebFunctions;\r\n", null, null, ";(function(root, factory) {\n    // istanbul ignore next\n    if (typeof define === \"function\" && define.amd) {\n        // istanbul ignore next\n        define([], factory)\n    } else if (typeof module === \"object\" && module.exports) {\n        module.exports = factory()\n    } else {\n        // istanbul ignore next\n        root.regexpToAst = factory()\n    }\n})(\n    typeof self !== \"undefined\"\n        ? // istanbul ignore next\n          self\n        : this,\n    function() {\n        // references\n        // https://hackernoon.com/the-madness-of-parsing-real-world-javascript-regexps-d9ee336df983\n        // https://www.ecma-international.org/ecma-262/8.0/index.html#prod-Pattern\n        function RegExpParser() {}\n\n        RegExpParser.prototype.saveState = function() {\n            return {\n                idx: this.idx,\n                input: this.input,\n                groupIdx: this.groupIdx\n            }\n        }\n\n        RegExpParser.prototype.restoreState = function(newState) {\n            this.idx = newState.idx\n            this.input = newState.input\n            this.groupIdx = newState.groupIdx\n        }\n\n        RegExpParser.prototype.pattern = function(input) {\n            // parser state\n            this.idx = 0\n            this.input = input\n            this.groupIdx = 0\n\n            this.consumeChar(\"/\")\n            var value = this.disjunction()\n            this.consumeChar(\"/\")\n\n            var flags = {\n                type: \"Flags\",\n                loc: { begin: this.idx, end: input.length },\n                global: false,\n                ignoreCase: false,\n                multiLine: false,\n                unicode: false,\n                sticky: false\n            }\n\n            while (this.isRegExpFlag()) {\n                switch (this.popChar()) {\n                    case \"g\":\n                        addFlag(flags, \"global\")\n                        break\n                    case \"i\":\n                        addFlag(flags, \"ignoreCase\")\n                        break\n                    case \"m\":\n                        addFlag(flags, \"multiLine\")\n                        break\n                    case \"u\":\n                        addFlag(flags, \"unicode\")\n                        break\n                    case \"y\":\n                        addFlag(flags, \"sticky\")\n                        break\n                }\n            }\n\n            if (this.idx !== this.input.length) {\n                throw Error(\n                    \"Redundant input: \" + this.input.substring(this.idx)\n                )\n            }\n            return {\n                type: \"Pattern\",\n                flags: flags,\n                value: value,\n                loc: this.loc(0)\n            }\n        }\n\n        RegExpParser.prototype.disjunction = function() {\n            var alts = []\n            var begin = this.idx\n\n            alts.push(this.alternative())\n\n            while (this.peekChar() === \"|\") {\n                this.consumeChar(\"|\")\n                alts.push(this.alternative())\n            }\n\n            return { type: \"Disjunction\", value: alts, loc: this.loc(begin) }\n        }\n\n        RegExpParser.prototype.alternative = function() {\n            var terms = []\n            var begin = this.idx\n\n            while (this.isTerm()) {\n                terms.push(this.term())\n            }\n\n            return { type: \"Alternative\", value: terms, loc: this.loc(begin) }\n        }\n\n        RegExpParser.prototype.term = function() {\n            if (this.isAssertion()) {\n                return this.assertion()\n            } else {\n                return this.atom()\n            }\n        }\n\n        RegExpParser.prototype.assertion = function() {\n            var begin = this.idx\n            switch (this.popChar()) {\n                case \"^\":\n                    return {\n                        type: \"StartAnchor\",\n                        loc: this.loc(begin)\n                    }\n                case \"$\":\n                    return { type: \"EndAnchor\", loc: this.loc(begin) }\n                // '\\b' or '\\B'\n                case \"\\\\\":\n                    switch (this.popChar()) {\n                        case \"b\":\n                            return {\n                                type: \"WordBoundary\",\n                                loc: this.loc(begin)\n                            }\n                        case \"B\":\n                            return {\n                                type: \"NonWordBoundary\",\n                                loc: this.loc(begin)\n                            }\n                    }\n                    // istanbul ignore next\n                    throw Error(\"Invalid Assertion Escape\")\n                // '(?=' or '(?!'\n                case \"(\":\n                    this.consumeChar(\"?\")\n\n                    var type\n                    switch (this.popChar()) {\n                        case \"=\":\n                            type = \"Lookahead\"\n                            break\n                        case \"!\":\n                            type = \"NegativeLookahead\"\n                            break\n                    }\n                    ASSERT_EXISTS(type)\n\n                    var disjunction = this.disjunction()\n\n                    this.consumeChar(\")\")\n\n                    return {\n                        type: type,\n                        value: disjunction,\n                        loc: this.loc(begin)\n                    }\n            }\n            // istanbul ignore next\n            ASSERT_NEVER_REACH_HERE()\n        }\n\n        RegExpParser.prototype.quantifier = function(isBacktracking) {\n            var range\n            var begin = this.idx\n            switch (this.popChar()) {\n                case \"*\":\n                    range = {\n                        atLeast: 0,\n                        atMost: Infinity\n                    }\n                    break\n                case \"+\":\n                    range = {\n                        atLeast: 1,\n                        atMost: Infinity\n                    }\n                    break\n                case \"?\":\n                    range = {\n                        atLeast: 0,\n                        atMost: 1\n                    }\n                    break\n                case \"{\":\n                    var atLeast = this.integerIncludingZero()\n                    switch (this.popChar()) {\n                        case \"}\":\n                            range = {\n                                atLeast: atLeast,\n                                atMost: atLeast\n                            }\n                            break\n                        case \",\":\n                            var atMost\n                            if (this.isDigit()) {\n                                atMost = this.integerIncludingZero()\n                                range = {\n                                    atLeast: atLeast,\n                                    atMost: atMost\n                                }\n                            } else {\n                                range = {\n                                    atLeast: atLeast,\n                                    atMost: Infinity\n                                }\n                            }\n                            this.consumeChar(\"}\")\n                            break\n                    }\n                    // throwing exceptions from \"ASSERT_EXISTS\" during backtracking\n                    // causes severe performance degradations\n                    if (isBacktracking === true && range === undefined) {\n                        return undefined\n                    }\n                    ASSERT_EXISTS(range)\n                    break\n            }\n\n            // throwing exceptions from \"ASSERT_EXISTS\" during backtracking\n            // causes severe performance degradations\n            if (isBacktracking === true && range === undefined) {\n                return undefined\n            }\n\n            ASSERT_EXISTS(range)\n\n            if (this.peekChar(0) === \"?\") {\n                this.consumeChar(\"?\")\n                range.greedy = false\n            } else {\n                range.greedy = true\n            }\n\n            range.type = \"Quantifier\"\n            range.loc = this.loc(begin)\n            return range\n        }\n\n        RegExpParser.prototype.atom = function() {\n            var atom\n            var begin = this.idx\n            switch (this.peekChar()) {\n                case \".\":\n                    atom = this.dotAll()\n                    break\n                case \"\\\\\":\n                    atom = this.atomEscape()\n                    break\n                case \"[\":\n                    atom = this.characterClass()\n                    break\n                case \"(\":\n                    atom = this.group()\n                    break\n            }\n\n            if (atom === undefined && this.isPatternCharacter()) {\n                atom = this.patternCharacter()\n            }\n\n            ASSERT_EXISTS(atom)\n\n            atom.loc = this.loc(begin)\n\n            if (this.isQuantifier()) {\n                atom.quantifier = this.quantifier()\n            }\n\n            return atom\n        }\n\n        RegExpParser.prototype.dotAll = function() {\n            this.consumeChar(\".\")\n            return {\n                type: \"Set\",\n                complement: true,\n                value: [cc(\"\\n\"), cc(\"\\r\"), cc(\"\\u2028\"), cc(\"\\u2029\")]\n            }\n        }\n\n        RegExpParser.prototype.atomEscape = function() {\n            this.consumeChar(\"\\\\\")\n\n            switch (this.peekChar()) {\n                case \"1\":\n                case \"2\":\n                case \"3\":\n                case \"4\":\n                case \"5\":\n                case \"6\":\n                case \"7\":\n                case \"8\":\n                case \"9\":\n                    return this.decimalEscapeAtom()\n                case \"d\":\n                case \"D\":\n                case \"s\":\n                case \"S\":\n                case \"w\":\n                case \"W\":\n                    return this.characterClassEscape()\n                case \"f\":\n                case \"n\":\n                case \"r\":\n                case \"t\":\n                case \"v\":\n                    return this.controlEscapeAtom()\n                case \"c\":\n                    return this.controlLetterEscapeAtom()\n                case \"0\":\n                    return this.nulCharacterAtom()\n                case \"x\":\n                    return this.hexEscapeSequenceAtom()\n                case \"u\":\n                    return this.regExpUnicodeEscapeSequenceAtom()\n                default:\n                    return this.identityEscapeAtom()\n            }\n        }\n\n        RegExpParser.prototype.decimalEscapeAtom = function() {\n            var value = this.positiveInteger()\n\n            return { type: \"GroupBackReference\", value: value }\n        }\n\n        RegExpParser.prototype.characterClassEscape = function() {\n            var set\n            var complement = false\n            switch (this.popChar()) {\n                case \"d\":\n                    set = digitsCharCodes\n                    break\n                case \"D\":\n                    set = digitsCharCodes\n                    complement = true\n                    break\n                case \"s\":\n                    set = whitespaceCodes\n                    break\n                case \"S\":\n                    set = whitespaceCodes\n                    complement = true\n                    break\n                case \"w\":\n                    set = wordCharCodes\n                    break\n                case \"W\":\n                    set = wordCharCodes\n                    complement = true\n                    break\n            }\n\n            ASSERT_EXISTS(set)\n\n            return { type: \"Set\", value: set, complement: complement }\n        }\n\n        RegExpParser.prototype.controlEscapeAtom = function() {\n            var escapeCode\n            switch (this.popChar()) {\n                case \"f\":\n                    escapeCode = cc(\"\\f\")\n                    break\n                case \"n\":\n                    escapeCode = cc(\"\\n\")\n                    break\n                case \"r\":\n                    escapeCode = cc(\"\\r\")\n                    break\n                case \"t\":\n                    escapeCode = cc(\"\\t\")\n                    break\n                case \"v\":\n                    escapeCode = cc(\"\\v\")\n                    break\n            }\n            ASSERT_EXISTS(escapeCode)\n\n            return { type: \"Character\", value: escapeCode }\n        }\n\n        RegExpParser.prototype.controlLetterEscapeAtom = function() {\n            this.consumeChar(\"c\")\n            var letter = this.popChar()\n            if (/[a-zA-Z]/.test(letter) === false) {\n                throw Error(\"Invalid \")\n            }\n\n            var letterCode = letter.toUpperCase().charCodeAt(0) - 64\n            return { type: \"Character\", value: letterCode }\n        }\n\n        RegExpParser.prototype.nulCharacterAtom = function() {\n            // TODO implement '[lookahead \u2209 DecimalDigit]'\n            // TODO: for the deprecated octal escape sequence\n            this.consumeChar(\"0\")\n            return { type: \"Character\", value: cc(\"\\0\") }\n        }\n\n        RegExpParser.prototype.hexEscapeSequenceAtom = function() {\n            this.consumeChar(\"x\")\n            return this.parseHexDigits(2)\n        }\n\n        RegExpParser.prototype.regExpUnicodeEscapeSequenceAtom = function() {\n            this.consumeChar(\"u\")\n            return this.parseHexDigits(4)\n        }\n\n        RegExpParser.prototype.identityEscapeAtom = function() {\n            // TODO: implement \"SourceCharacter but not UnicodeIDContinue\"\n            // // http://unicode.org/reports/tr31/#Specific_Character_Adjustments\n            var escapedChar = this.popChar()\n            return { type: \"Character\", value: cc(escapedChar) }\n        }\n\n        RegExpParser.prototype.classPatternCharacterAtom = function() {\n            switch (this.peekChar()) {\n                // istanbul ignore next\n                case \"\\n\":\n                // istanbul ignore next\n                case \"\\r\":\n                // istanbul ignore next\n                case \"\\u2028\":\n                // istanbul ignore next\n                case \"\\u2029\":\n                // istanbul ignore next\n                case \"\\\\\":\n                // istanbul ignore next\n                case \"]\":\n                    throw Error(\"TBD\")\n                default:\n                    var nextChar = this.popChar()\n                    return { type: \"Character\", value: cc(nextChar) }\n            }\n        }\n\n        RegExpParser.prototype.characterClass = function() {\n            var set = []\n            var complement = false\n            this.consumeChar(\"[\")\n            if (this.peekChar(0) === \"^\") {\n                this.consumeChar(\"^\")\n                complement = true\n            }\n\n            while (this.isClassAtom()) {\n                var from = this.classAtom()\n                var isFromSingleChar = from.type === \"Character\"\n                if (isFromSingleChar && this.isRangeDash()) {\n                    this.consumeChar(\"-\")\n                    var to = this.classAtom()\n                    var isToSingleChar = to.type === \"Character\"\n\n                    // a range can only be used when both sides are single characters\n                    if (isToSingleChar) {\n                        if (to.value < from.value) {\n                            throw Error(\"Range out of order in character class\")\n                        }\n                        set.push({ from: from.value, to: to.value })\n                    } else {\n                        // literal dash\n                        insertToSet(from.value, set)\n                        set.push(cc(\"-\"))\n                        insertToSet(to.value, set)\n                    }\n                } else {\n                    insertToSet(from.value, set)\n                }\n            }\n\n            this.consumeChar(\"]\")\n\n            return { type: \"Set\", complement: complement, value: set }\n        }\n\n        RegExpParser.prototype.classAtom = function() {\n            switch (this.peekChar()) {\n                // istanbul ignore next\n                case \"]\":\n                // istanbul ignore next\n                case \"\\n\":\n                // istanbul ignore next\n                case \"\\r\":\n                // istanbul ignore next\n                case \"\\u2028\":\n                // istanbul ignore next\n                case \"\\u2029\":\n                    throw Error(\"TBD\")\n                case \"\\\\\":\n                    return this.classEscape()\n                default:\n                    return this.classPatternCharacterAtom()\n            }\n        }\n\n        RegExpParser.prototype.classEscape = function() {\n            this.consumeChar(\"\\\\\")\n            switch (this.peekChar()) {\n                // Matches a backspace.\n                // (Not to be confused with \\b word boundary outside characterClass)\n                case \"b\":\n                    this.consumeChar(\"b\")\n                    return { type: \"Character\", value: cc(\"\\u0008\") }\n                case \"d\":\n                case \"D\":\n                case \"s\":\n                case \"S\":\n                case \"w\":\n                case \"W\":\n                    return this.characterClassEscape()\n                case \"f\":\n                case \"n\":\n                case \"r\":\n                case \"t\":\n                case \"v\":\n                    return this.controlEscapeAtom()\n                case \"c\":\n                    return this.controlLetterEscapeAtom()\n                case \"0\":\n                    return this.nulCharacterAtom()\n                case \"x\":\n                    return this.hexEscapeSequenceAtom()\n                case \"u\":\n                    return this.regExpUnicodeEscapeSequenceAtom()\n                default:\n                    return this.identityEscapeAtom()\n            }\n        }\n\n        RegExpParser.prototype.group = function() {\n            var capturing = true\n            this.consumeChar(\"(\")\n            switch (this.peekChar(0)) {\n                case \"?\":\n                    this.consumeChar(\"?\")\n                    this.consumeChar(\":\")\n                    capturing = false\n                    break\n                default:\n                    this.groupIdx++\n                    break\n            }\n            var value = this.disjunction()\n            this.consumeChar(\")\")\n\n            var groupAst = {\n                type: \"Group\",\n                capturing: capturing,\n                value: value\n            }\n\n            if (capturing) {\n                groupAst.idx = this.groupIdx\n            }\n\n            return groupAst\n        }\n\n        RegExpParser.prototype.positiveInteger = function() {\n            var number = this.popChar()\n\n            // istanbul ignore next - can't ever get here due to previous lookahead checks\n            // still implementing this error checking in case this ever changes.\n            if (decimalPatternNoZero.test(number) === false) {\n                throw Error(\"Expecting a positive integer\")\n            }\n\n            while (decimalPattern.test(this.peekChar(0))) {\n                number += this.popChar()\n            }\n\n            return parseInt(number, 10)\n        }\n\n        RegExpParser.prototype.integerIncludingZero = function() {\n            var number = this.popChar()\n            if (decimalPattern.test(number) === false) {\n                throw Error(\"Expecting an integer\")\n            }\n\n            while (decimalPattern.test(this.peekChar(0))) {\n                number += this.popChar()\n            }\n\n            return parseInt(number, 10)\n        }\n\n        RegExpParser.prototype.patternCharacter = function() {\n            var nextChar = this.popChar()\n            switch (nextChar) {\n                // istanbul ignore next\n                case \"\\n\":\n                // istanbul ignore next\n                case \"\\r\":\n                // istanbul ignore next\n                case \"\\u2028\":\n                // istanbul ignore next\n                case \"\\u2029\":\n                // istanbul ignore next\n                case \"^\":\n                // istanbul ignore next\n                case \"$\":\n                // istanbul ignore next\n                case \"\\\\\":\n                // istanbul ignore next\n                case \".\":\n                // istanbul ignore next\n                case \"*\":\n                // istanbul ignore next\n                case \"+\":\n                // istanbul ignore next\n                case \"?\":\n                // istanbul ignore next\n                case \"(\":\n                // istanbul ignore next\n                case \")\":\n                // istanbul ignore next\n                case \"[\":\n                // istanbul ignore next\n                case \"|\":\n                    // istanbul ignore next\n                    throw Error(\"TBD\")\n                default:\n                    return { type: \"Character\", value: cc(nextChar) }\n            }\n        }\n        RegExpParser.prototype.isRegExpFlag = function() {\n            switch (this.peekChar(0)) {\n                case \"g\":\n                case \"i\":\n                case \"m\":\n                case \"u\":\n                case \"y\":\n                    return true\n                default:\n                    return false\n            }\n        }\n\n        RegExpParser.prototype.isRangeDash = function() {\n            return this.peekChar() === \"-\" && this.isClassAtom(1)\n        }\n\n        RegExpParser.prototype.isDigit = function() {\n            return decimalPattern.test(this.peekChar(0))\n        }\n\n        RegExpParser.prototype.isClassAtom = function(howMuch) {\n            if (howMuch === undefined) {\n                howMuch = 0\n            }\n\n            switch (this.peekChar(howMuch)) {\n                case \"]\":\n                case \"\\n\":\n                case \"\\r\":\n                case \"\\u2028\":\n                case \"\\u2029\":\n                    return false\n                default:\n                    return true\n            }\n        }\n\n        RegExpParser.prototype.isTerm = function() {\n            return this.isAtom() || this.isAssertion()\n        }\n\n        RegExpParser.prototype.isAtom = function() {\n            if (this.isPatternCharacter()) {\n                return true\n            }\n\n            switch (this.peekChar(0)) {\n                case \".\":\n                case \"\\\\\": // atomEscape\n                case \"[\": // characterClass\n                // TODO: isAtom must be called before isAssertion - disambiguate\n                case \"(\": // group\n                    return true\n                default:\n                    return false\n            }\n        }\n\n        RegExpParser.prototype.isAssertion = function() {\n            switch (this.peekChar(0)) {\n                case \"^\":\n                case \"$\":\n                    return true\n                // '\\b' or '\\B'\n                case \"\\\\\":\n                    switch (this.peekChar(1)) {\n                        case \"b\":\n                        case \"B\":\n                            return true\n                        default:\n                            return false\n                    }\n                // '(?=' or '(?!'\n                case \"(\":\n                    return (\n                        this.peekChar(1) === \"?\" &&\n                        (this.peekChar(2) === \"=\" || this.peekChar(2) === \"!\")\n                    )\n                default:\n                    return false\n            }\n        }\n\n        RegExpParser.prototype.isQuantifier = function() {\n            var prevState = this.saveState()\n            try {\n                return this.quantifier(true) !== undefined\n            } catch (e) {\n                return false\n            } finally {\n                this.restoreState(prevState)\n            }\n        }\n\n        RegExpParser.prototype.isPatternCharacter = function() {\n            switch (this.peekChar()) {\n                case \"^\":\n                case \"$\":\n                case \"\\\\\":\n                case \".\":\n                case \"*\":\n                case \"+\":\n                case \"?\":\n                case \"(\":\n                case \")\":\n                case \"[\":\n                case \"|\":\n                case \"/\":\n                case \"\\n\":\n                case \"\\r\":\n                case \"\\u2028\":\n                case \"\\u2029\":\n                    return false\n                default:\n                    return true\n            }\n        }\n\n        RegExpParser.prototype.parseHexDigits = function(howMany) {\n            var hexString = \"\"\n            for (var i = 0; i < howMany; i++) {\n                var hexChar = this.popChar()\n                if (hexDigitPattern.test(hexChar) === false) {\n                    throw Error(\"Expecting a HexDecimal digits\")\n                }\n                hexString += hexChar\n            }\n            var charCode = parseInt(hexString, 16)\n            return { type: \"Character\", value: charCode }\n        }\n\n        RegExpParser.prototype.peekChar = function(howMuch) {\n            if (howMuch === undefined) {\n                howMuch = 0\n            }\n            return this.input[this.idx + howMuch]\n        }\n\n        RegExpParser.prototype.popChar = function() {\n            var nextChar = this.peekChar(0)\n            this.consumeChar()\n            return nextChar\n        }\n\n        RegExpParser.prototype.consumeChar = function(char) {\n            if (char !== undefined && this.input[this.idx] !== char) {\n                throw Error(\n                    \"Expected: '\" +\n                        char +\n                        \"' but found: '\" +\n                        this.input[this.idx] +\n                        \"' at offset: \" +\n                        this.idx\n                )\n            }\n\n            if (this.idx >= this.input.length) {\n                throw Error(\"Unexpected end of input\")\n            }\n            this.idx++\n        }\n\n        RegExpParser.prototype.loc = function(begin) {\n            return { begin: begin, end: this.idx }\n        }\n\n        // consts and utilities\n        var hexDigitPattern = /[0-9a-fA-F]/\n        var decimalPattern = /[0-9]/\n        var decimalPatternNoZero = /[1-9]/\n\n        function cc(char) {\n            return char.charCodeAt(0)\n        }\n\n        function insertToSet(item, set) {\n            if (item.length !== undefined) {\n                item.forEach(function(subItem) {\n                    set.push(subItem)\n                })\n            } else {\n                set.push(item)\n            }\n        }\n\n        function addFlag(flagObj, flagKey) {\n            if (flagObj[flagKey] === true) {\n                throw \"duplicate flag \" + flagKey\n            }\n\n            flagObj[flagKey] = true\n        }\n\n        function ASSERT_EXISTS(obj) {\n            // istanbul ignore next\n            if (obj === undefined) {\n                throw Error(\"Internal Error - Should never get here!\")\n            }\n        }\n\n        // istanbul ignore next\n        function ASSERT_NEVER_REACH_HERE() {\n            throw Error(\"Internal Error - Should never get here!\")\n        }\n\n        var i\n        var digitsCharCodes = []\n        for (i = cc(\"0\"); i <= cc(\"9\"); i++) {\n            digitsCharCodes.push(i)\n        }\n\n        var wordCharCodes = [cc(\"_\")].concat(digitsCharCodes)\n        for (i = cc(\"a\"); i <= cc(\"z\"); i++) {\n            wordCharCodes.push(i)\n        }\n\n        for (i = cc(\"A\"); i <= cc(\"Z\"); i++) {\n            wordCharCodes.push(i)\n        }\n\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp#character-classes\n        var whitespaceCodes = [\n            cc(\" \"),\n            cc(\"\\f\"),\n            cc(\"\\n\"),\n            cc(\"\\r\"),\n            cc(\"\\t\"),\n            cc(\"\\v\"),\n            cc(\"\\t\"),\n            cc(\"\\u00a0\"),\n            cc(\"\\u1680\"),\n            cc(\"\\u2000\"),\n            cc(\"\\u2001\"),\n            cc(\"\\u2002\"),\n            cc(\"\\u2003\"),\n            cc(\"\\u2004\"),\n            cc(\"\\u2005\"),\n            cc(\"\\u2006\"),\n            cc(\"\\u2007\"),\n            cc(\"\\u2008\"),\n            cc(\"\\u2009\"),\n            cc(\"\\u200a\"),\n            cc(\"\\u2028\"),\n            cc(\"\\u2029\"),\n            cc(\"\\u202f\"),\n            cc(\"\\u205f\"),\n            cc(\"\\u3000\"),\n            cc(\"\\ufeff\")\n        ]\n\n        function BaseRegExpVisitor() {}\n\n        BaseRegExpVisitor.prototype.visitChildren = function(node) {\n            for (var key in node) {\n                var child = node[key]\n                /* istanbul ignore else */\n                if (node.hasOwnProperty(key)) {\n                    if (child.type !== undefined) {\n                        this.visit(child)\n                    } else if (Array.isArray(child)) {\n                        child.forEach(function(subChild) {\n                            this.visit(subChild)\n                        }, this)\n                    }\n                }\n            }\n        }\n\n        BaseRegExpVisitor.prototype.visit = function(node) {\n            switch (node.type) {\n                case \"Pattern\":\n                    this.visitPattern(node)\n                    break\n                case \"Flags\":\n                    this.visitFlags(node)\n                    break\n                case \"Disjunction\":\n                    this.visitDisjunction(node)\n                    break\n                case \"Alternative\":\n                    this.visitAlternative(node)\n                    break\n                case \"StartAnchor\":\n                    this.visitStartAnchor(node)\n                    break\n                case \"EndAnchor\":\n                    this.visitEndAnchor(node)\n                    break\n                case \"WordBoundary\":\n                    this.visitWordBoundary(node)\n                    break\n                case \"NonWordBoundary\":\n                    this.visitNonWordBoundary(node)\n                    break\n                case \"Lookahead\":\n                    this.visitLookahead(node)\n                    break\n                case \"NegativeLookahead\":\n                    this.visitNegativeLookahead(node)\n                    break\n                case \"Character\":\n                    this.visitCharacter(node)\n                    break\n                case \"Set\":\n                    this.visitSet(node)\n                    break\n                case \"Group\":\n                    this.visitGroup(node)\n                    break\n                case \"GroupBackReference\":\n                    this.visitGroupBackReference(node)\n                    break\n                case \"Quantifier\":\n                    this.visitQuantifier(node)\n                    break\n            }\n\n            this.visitChildren(node)\n        }\n\n        BaseRegExpVisitor.prototype.visitPattern = function(node) {}\n\n        BaseRegExpVisitor.prototype.visitFlags = function(node) {}\n\n        BaseRegExpVisitor.prototype.visitDisjunction = function(node) {}\n\n        BaseRegExpVisitor.prototype.visitAlternative = function(node) {}\n\n        // Assertion\n        BaseRegExpVisitor.prototype.visitStartAnchor = function(node) {}\n\n        BaseRegExpVisitor.prototype.visitEndAnchor = function(node) {}\n\n        BaseRegExpVisitor.prototype.visitWordBoundary = function(node) {}\n\n        BaseRegExpVisitor.prototype.visitNonWordBoundary = function(node) {}\n\n        BaseRegExpVisitor.prototype.visitLookahead = function(node) {}\n\n        BaseRegExpVisitor.prototype.visitNegativeLookahead = function(node) {}\n\n        // atoms\n        BaseRegExpVisitor.prototype.visitCharacter = function(node) {}\n\n        BaseRegExpVisitor.prototype.visitSet = function(node) {}\n\n        BaseRegExpVisitor.prototype.visitGroup = function(node) {}\n\n        BaseRegExpVisitor.prototype.visitGroupBackReference = function(node) {}\n\n        BaseRegExpVisitor.prototype.visitQuantifier = function(node) {}\n\n        return {\n            RegExpParser: RegExpParser,\n            BaseRegExpVisitor: BaseRegExpVisitor,\n            VERSION: \"0.5.0\"\n        }\n    }\n)\n", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "const {createToken, Lexer} = require('chevrotain');\r\nconst FormulaError = require('../formulas/error')\r\n\r\n// the vocabulary will be exported and used in the Parser definition.\r\nconst tokenVocabulary = {};\r\n\r\nconst WhiteSpace = createToken({\r\n    name: 'WhiteSpace',\r\n    pattern: /\\s+/,\r\n    group: Lexer.SKIPPED,\r\n});\r\n\r\nconst String = createToken({\r\n    name: 'String',\r\n    pattern: /\"(\"\"|[^\"])*\"/\r\n});\r\n\r\nconst SingleQuotedString = createToken({\r\n    name: 'SingleQuotedString',\r\n    pattern: /'(''|[^'])*'/\r\n});\r\n\r\nconst SheetQuoted = createToken({\r\n    name: 'SheetQuoted',\r\n    pattern: /'((?![\\\\\\/\\[\\]*?:]).)+?'!/\r\n});\r\n\r\nconst Function = createToken({\r\n    name: 'Function',\r\n    pattern: /[A-Za-z_]+[A-Za-z_0-9.]*\\(/\r\n});\r\n\r\nconst FormulaErrorT = createToken({\r\n    name: 'FormulaErrorT',\r\n    pattern: /#NULL!|#DIV\\/0!|#VALUE!|#NAME\\?|#NUM!|#N\\/A/\r\n});\r\n\r\nconst RefError = createToken({\r\n    name: 'RefError',\r\n    pattern: /#REF!/\r\n});\r\n\r\nconst Name = createToken({\r\n    name: 'Name',\r\n    pattern: /[a-zA-Z_][a-zA-Z0-9_.?]*/,\r\n    // longer_alt: RangeColumn // e.g. A:AA\r\n});\r\n\r\nconst Sheet = createToken({\r\n    name: 'Sheet',\r\n    pattern: /[A-Za-z_.\\d\\u007F-\\uFFFF]+!/\r\n});\r\n\r\nconst Cell = createToken({\r\n    name: 'Cell',\r\n    pattern: /[$]?[A-Za-z]{1,3}[$]?[1-9][0-9]*/,\r\n    longer_alt: Name\r\n});\r\n\r\nconst Number = createToken({\r\n    name: 'Number',\r\n    pattern: /[0-9]+[.]?[0-9]*([eE][+\\-][0-9]+)?/\r\n});\r\n\r\nconst Boolean = createToken({\r\n    name: 'Boolean',\r\n    pattern: /TRUE|FALSE/i\r\n});\r\n\r\nconst Column = createToken({\r\n    name: 'Column',\r\n    pattern: /[$]?[A-Za-z]{1,3}/,\r\n    longer_alt: Name\r\n});\r\n\r\n\r\n/**\r\n * Symbols and operators\r\n */\r\nconst At = createToken({\r\n    name: 'At',\r\n    pattern: /@/\r\n});\r\n\r\nconst Comma = createToken({\r\n    name: 'Comma',\r\n    pattern: /,/\r\n});\r\n\r\nconst Colon = createToken({\r\n    name: 'Colon',\r\n    pattern: /:/\r\n});\r\n\r\nconst Semicolon = createToken({\r\n    name: 'Semicolon',\r\n    pattern: /;/\r\n});\r\n\r\nconst OpenParen = createToken({\r\n    name: 'OpenParen',\r\n    pattern: /\\(/\r\n});\r\n\r\nconst CloseParen = createToken({\r\n    name: 'CloseParen',\r\n    pattern: /\\)/\r\n});\r\n\r\nconst OpenSquareParen = createToken({\r\n    name: 'OpenSquareParen',\r\n    pattern: /\\[/\r\n});\r\n\r\nconst CloseSquareParen = createToken({\r\n    name: 'CloseSquareParen',\r\n    pattern: /]/\r\n});\r\n\r\nconst ExclamationMark = createToken({\r\n    name: 'exclamationMark',\r\n    pattern: /!/\r\n});\r\n\r\nconst OpenCurlyParen = createToken({\r\n    name: 'OpenCurlyParen',\r\n    pattern: /{/\r\n});\r\n\r\nconst CloseCurlyParen = createToken({\r\n    name: 'CloseCurlyParen',\r\n    pattern: /}/\r\n});\r\n\r\nconst QuoteS = createToken({\r\n    name: 'QuoteS',\r\n    pattern: /'/\r\n});\r\n\r\n\r\nconst MulOp = createToken({\r\n    name: 'MulOp',\r\n    pattern: /\\*/\r\n});\r\n\r\nconst PlusOp = createToken({\r\n    name: 'PlusOp',\r\n    pattern: /\\+/\r\n});\r\n\r\nconst DivOp = createToken({\r\n    name: 'DivOp',\r\n    pattern: /\\//\r\n});\r\n\r\nconst MinOp = createToken({\r\n    name: 'MinOp',\r\n    pattern: /-/\r\n});\r\n\r\nconst ConcatOp = createToken({\r\n    name: 'ConcatOp',\r\n    pattern: /&/\r\n});\r\n\r\nconst ExOp = createToken({\r\n    name: 'ExOp',\r\n    pattern: /\\^/\r\n});\r\n\r\nconst PercentOp = createToken({\r\n    name: 'PercentOp',\r\n    pattern: /%/\r\n});\r\n\r\nconst GtOp = createToken({\r\n    name: 'GtOp',\r\n    pattern: />/\r\n});\r\n\r\nconst EqOp = createToken({\r\n    name: 'EqOp',\r\n    pattern: /=/\r\n});\r\n\r\nconst LtOp = createToken({\r\n    name: 'LtOp',\r\n    pattern: /</\r\n});\r\n\r\nconst NeqOp = createToken({\r\n    name: 'NeqOp',\r\n    pattern: /<>/\r\n});\r\n\r\nconst GteOp = createToken({\r\n    name: 'GteOp',\r\n    pattern: />=/\r\n});\r\n\r\nconst LteOp = createToken({\r\n    name: 'LteOp',\r\n    pattern: /<=/\r\n});\r\n\r\n// The order of tokens is important\r\nconst allTokens = [\r\n\r\n    WhiteSpace,\r\n    String,\r\n    SheetQuoted,\r\n    SingleQuotedString,\r\n    Function,\r\n    FormulaErrorT,\r\n    RefError,\r\n    Sheet,\r\n    Cell,\r\n    Boolean,\r\n    Column,\r\n    Name,\r\n    Number,\r\n\r\n    At,\r\n    Comma,\r\n    Colon,\r\n    Semicolon,\r\n    OpenParen,\r\n    CloseParen,\r\n    OpenSquareParen,\r\n    CloseSquareParen,\r\n    // ExclamationMark,\r\n    OpenCurlyParen,\r\n    CloseCurlyParen,\r\n    QuoteS,\r\n    MulOp,\r\n    PlusOp,\r\n    DivOp,\r\n    MinOp,\r\n    ConcatOp,\r\n    ExOp,\r\n    MulOp,\r\n    PercentOp,\r\n    NeqOp,\r\n    GteOp,\r\n    LteOp,\r\n    GtOp,\r\n    EqOp,\r\n    LtOp,\r\n];\r\n\r\nconst SelectLexer = new Lexer(allTokens, {ensureOptimizations: true});\r\n\r\nallTokens.forEach(tokenType => {\r\n    tokenVocabulary[tokenType.name] = tokenType\r\n});\r\n\r\nmodule.exports = {\r\n    tokenVocabulary: tokenVocabulary,\r\n\r\n    lex: function (inputText) {\r\n        const lexingResult = SelectLexer.tokenize(inputText)\r\n\r\n        if (lexingResult.errors.length > 0) {\r\n            const error = lexingResult.errors[0];\r\n            const line = error.line, column = error.column;\r\n            let msg = '\\n' + inputText.split('\\n')[line - 1] + '\\n';\r\n            msg += Array(column - 1).fill(' ').join('') + '^\\n';\r\n            error.message = msg + `Error at position ${line}:${column}\\n` + error.message;\r\n            error.errorLocation = {line, column};\r\n            throw FormulaError.ERROR(error.message, error);\r\n        }\r\n\r\n        return lexingResult\r\n    }\r\n};\r\n", "const lexer = require('./lexing');\r\nconst {EmbeddedActionsParser} = require(\"chevrotain\");\r\nconst tokenVocabulary = lexer.tokenVocabulary;\r\nconst {\r\n    String,\r\n    SheetQuoted,\r\n    ExcelRefFunction,\r\n    ExcelConditionalRefFunction,\r\n    Function,\r\n    FormulaErrorT,\r\n    RefError,\r\n    Cell,\r\n    Sheet,\r\n    Name,\r\n    Number,\r\n    Boolean,\r\n    Column,\r\n\r\n    // At,\r\n    Comma,\r\n    Colon,\r\n    Semicolon,\r\n    OpenParen,\r\n    CloseParen,\r\n    // OpenSquareParen,\r\n    // CloseSquareParen,\r\n    // ExclamationMark,\r\n    OpenCurlyParen,\r\n    CloseCurlyParen,\r\n    MulOp,\r\n    PlusOp,\r\n    DivOp,\r\n    MinOp,\r\n    ConcatOp,\r\n    ExOp,\r\n    PercentOp,\r\n    NeqOp,\r\n    GteOp,\r\n    LteOp,\r\n    GtOp,\r\n    EqOp,\r\n    LtOp\r\n} = lexer.tokenVocabulary;\r\n\r\nclass Parsing extends EmbeddedActionsParser {\r\n    /**\r\n     *\r\n     * @param {FormulaParser|DepParser} context\r\n     * @param {Utils} utils\r\n     */\r\n    constructor(context, utils) {\r\n        super(tokenVocabulary, {\r\n            outputCst: false,\r\n            maxLookahead: 1,\r\n            skipValidations: true,\r\n            // traceInitPerf: true,\r\n        });\r\n        this.utils = utils;\r\n        this.binaryOperatorsPrecedence = [\r\n            ['^'],\r\n            ['*', '/'],\r\n            ['+', '-'],\r\n            ['&'],\r\n            ['<', '>', '=', '<>', '<=', '>='],\r\n        ];\r\n        const $ = this;\r\n\r\n        // Adopted from https://github.com/spreadsheetlab/XLParser/blob/master/src/XLParser/ExcelFormulaGrammar.cs\r\n\r\n        $.RULE('formulaWithBinaryOp', () => {\r\n            const infixes = [];\r\n            const values = [$.SUBRULE($.formulaWithPercentOp)];\r\n            $.MANY(() => {\r\n                // Caching Arrays of Alternatives\r\n                // https://sap.github.io/chevrotain/docs/guide/performance.html#caching-arrays-of-alternatives\r\n                infixes.push($.OR($.c1 ||\r\n                    (\r\n                        $.c1 = [\r\n                            {ALT: () => $.CONSUME(GtOp).image},\r\n                            {ALT: () => $.CONSUME(EqOp).image},\r\n                            {ALT: () => $.CONSUME(LtOp).image},\r\n                            {ALT: () => $.CONSUME(NeqOp).image},\r\n                            {ALT: () => $.CONSUME(GteOp).image},\r\n                            {ALT: () => $.CONSUME(LteOp).image},\r\n                            {ALT: () => $.CONSUME(ConcatOp).image},\r\n                            {ALT: () => $.CONSUME(PlusOp).image},\r\n                            {ALT: () => $.CONSUME(MinOp).image},\r\n                            {ALT: () => $.CONSUME(MulOp).image},\r\n                            {ALT: () => $.CONSUME(DivOp).image},\r\n                            {ALT: () => $.CONSUME(ExOp).image}\r\n                        ]\r\n                    )));\r\n                values.push($.SUBRULE2($.formulaWithPercentOp));\r\n            });\r\n            $.ACTION(() => {\r\n                // evaluate\r\n                for (const ops of this.binaryOperatorsPrecedence) {\r\n                    for (let index = 0, length = infixes.length; index < length; index++) {\r\n                        const infix = infixes[index];\r\n                        if (!ops.includes(infix)) continue;\r\n                        infixes.splice(index, 1);\r\n                        values.splice(index, 2, this.utils.applyInfix(values[index], infix, values[index + 1]));\r\n                        index--;\r\n                        length--;\r\n                    }\r\n                }\r\n            });\r\n\r\n            return values[0];\r\n        });\r\n\r\n        $.RULE('plusMinusOp', () => $.OR([\r\n            {ALT: () => $.CONSUME(PlusOp).image},\r\n            {ALT: () => $.CONSUME(MinOp).image}\r\n        ]));\r\n\r\n        $.RULE('formulaWithPercentOp', () => {\r\n            let value = $.SUBRULE($.formulaWithUnaryOp);\r\n            $.OPTION(() => {\r\n                const postfix = $.CONSUME(PercentOp).image;\r\n                value = $.ACTION(() => this.utils.applyPostfix(value, postfix));\r\n            });\r\n            return value;\r\n        });\r\n\r\n        $.RULE('formulaWithUnaryOp', () => {\r\n            // support ++---3 => -3\r\n            const prefixes = [];\r\n            $.MANY(() => {\r\n                const op = $.OR([\r\n                    {ALT: () => $.CONSUME(PlusOp).image},\r\n                    {ALT: () => $.CONSUME(MinOp).image}\r\n                ]);\r\n                prefixes.push(op);\r\n            });\r\n            const formula = $.SUBRULE($.formulaWithIntersect);\r\n            if (prefixes.length > 0) return $.ACTION(() => this.utils.applyPrefix(prefixes, formula));\r\n            return formula;\r\n        });\r\n\r\n\r\n        $.RULE('formulaWithIntersect', () => {\r\n            // e.g.  'A1 A2 A3'\r\n            let ref1 = $.SUBRULE($.formulaWithRange);\r\n            const refs = [ref1];\r\n            // console.log('check intersect')\r\n            $.MANY({\r\n                GATE: () => {\r\n                    // see https://github.com/SAP/chevrotain/blob/master/examples/grammars/css/css.js#L436-L441\r\n                    const prevToken = $.LA(0);\r\n                    const nextToken = $.LA(1);\r\n                    //  This is the only place where the grammar is whitespace sensitive.\r\n                    return nextToken.startOffset > prevToken.endOffset + 1;\r\n                },\r\n                DEF: () => {\r\n                    refs.push($.SUBRULE3($.formulaWithRange));\r\n                }\r\n            });\r\n            if (refs.length > 1) {\r\n                return $.ACTION(() => $.ACTION(() => this.utils.applyIntersect(refs)))\r\n            }\r\n            return ref1;\r\n        });\r\n\r\n        $.RULE('formulaWithRange', () => {\r\n            // e.g. 'A1:C3' or 'A1:A3:C4', can be any number of references, at lease 2\r\n            const ref1 = $.SUBRULE($.formula);\r\n            const refs = [ref1];\r\n            $.MANY(() => {\r\n                $.CONSUME(Colon);\r\n                refs.push($.SUBRULE2($.formula));\r\n            });\r\n            if (refs.length > 1)\r\n                return $.ACTION(() => $.ACTION(() => this.utils.applyRange(refs)));\r\n            return ref1;\r\n        });\r\n\r\n        $.RULE('formula', () => $.OR9([\r\n            {ALT: () => $.SUBRULE($.referenceWithoutInfix)},\r\n            {ALT: () => $.SUBRULE($.paren)},\r\n            {ALT: () => $.SUBRULE($.constant)},\r\n            {ALT: () => $.SUBRULE($.functionCall)},\r\n            {ALT: () => $.SUBRULE($.constantArray)},\r\n        ]));\r\n\r\n        $.RULE('paren', () => {\r\n            // formula paren or union paren\r\n            $.CONSUME(OpenParen);\r\n            let result;\r\n            const refs = [];\r\n            refs.push($.SUBRULE($.formulaWithBinaryOp));\r\n            $.MANY(() => {\r\n                $.CONSUME(Comma);\r\n                refs.push($.SUBRULE2($.formulaWithBinaryOp));\r\n            });\r\n            if (refs.length > 1)\r\n                result = $.ACTION(() => this.utils.applyUnion(refs));\r\n            else\r\n                result = refs[0];\r\n\r\n            $.CONSUME(CloseParen);\r\n            return result;\r\n        });\r\n\r\n        $.RULE('constantArray', () => {\r\n            // console.log('constantArray');\r\n            const arr = [[]];\r\n            let currentRow = 0;\r\n            $.CONSUME(OpenCurlyParen);\r\n\r\n            // array must contain at least one item\r\n            arr[currentRow].push($.SUBRULE($.constantForArray));\r\n            $.MANY(() => {\r\n                const sep = $.OR([\r\n                    {ALT: () => $.CONSUME(Comma).image},\r\n                    {ALT: () => $.CONSUME(Semicolon).image}\r\n                ]);\r\n                const constant = $.SUBRULE2($.constantForArray);\r\n                if (sep === ',') {\r\n                    arr[currentRow].push(constant)\r\n                } else {\r\n                    currentRow++;\r\n                    arr[currentRow] = [];\r\n                    arr[currentRow].push(constant)\r\n                }\r\n            });\r\n\r\n            $.CONSUME(CloseCurlyParen);\r\n\r\n            return $.ACTION(() => this.utils.toArray(arr));\r\n        });\r\n\r\n        /**\r\n         * Used in array\r\n         */\r\n        $.RULE('constantForArray', () => $.OR([\r\n            {\r\n                ALT: () => {\r\n                    const prefix = $.OPTION(() => $.SUBRULE($.plusMinusOp));\r\n                    const image = $.CONSUME(Number).image;\r\n                    const number = $.ACTION(() => this.utils.toNumber(image));\r\n                    if (prefix)\r\n                        return $.ACTION(() => this.utils.applyPrefix([prefix], number));\r\n                    return number;\r\n                }\r\n            }, {\r\n                ALT: () => {\r\n                    const str = $.CONSUME(String).image;\r\n                    return $.ACTION(() => this.utils.toString(str));\r\n                }\r\n            }, {\r\n                ALT: () => {\r\n                    const bool = $.CONSUME(Boolean).image;\r\n                    return $.ACTION(() => this.utils.toBoolean(bool));\r\n                }\r\n            }, {\r\n                ALT: () => {\r\n                    const err = $.CONSUME(FormulaErrorT).image;\r\n                    return $.ACTION(() => this.utils.toError(err));\r\n                }\r\n            }, {\r\n                ALT: () => {\r\n                    const err = $.CONSUME(RefError).image;\r\n                    return $.ACTION(() => this.utils.toError(err));\r\n                }\r\n            },\r\n        ]));\r\n\r\n        $.RULE('constant', () => $.OR([\r\n            {\r\n                ALT: () => {\r\n                    const number = $.CONSUME(Number).image;\r\n                    return $.ACTION(() => this.utils.toNumber(number));\r\n                }\r\n            }, {\r\n                ALT: () => {\r\n                    const str = $.CONSUME(String).image;\r\n                    return $.ACTION(() => this.utils.toString(str));\r\n                }\r\n            }, {\r\n                ALT: () => {\r\n                    const bool = $.CONSUME(Boolean).image;\r\n                    return $.ACTION(() => this.utils.toBoolean(bool));\r\n                }\r\n            }, {\r\n                ALT: () => {\r\n                    const err = $.CONSUME(FormulaErrorT).image;\r\n                    return $.ACTION(() => this.utils.toError(err));\r\n                }\r\n            },\r\n        ]));\r\n\r\n        $.RULE('functionCall', () => {\r\n            const functionName = $.CONSUME(Function).image.slice(0, -1);\r\n            // console.log('functionName', functionName);\r\n            const args = $.SUBRULE($.arguments);\r\n            $.CONSUME(CloseParen);\r\n            // dependency parser won't call function.\r\n            return $.ACTION(() => context.callFunction(functionName, args));\r\n\r\n        });\r\n\r\n        $.RULE('arguments', () => {\r\n            // console.log('try arguments')\r\n\r\n            // allows ',' in the front\r\n            $.MANY2(() => {\r\n                $.CONSUME2(Comma);\r\n            });\r\n            const args = [];\r\n            // allows empty arguments\r\n            $.OPTION(() => {\r\n                args.push($.SUBRULE($.formulaWithBinaryOp));\r\n                $.MANY(() => {\r\n                    $.CONSUME1(Comma);\r\n                    args.push(null); // e.g. ROUND(1.5,)\r\n                    $.OPTION3(() => {\r\n                        args.pop();\r\n                        args.push($.SUBRULE2($.formulaWithBinaryOp))\r\n                    });\r\n                });\r\n            });\r\n            return args;\r\n        });\r\n\r\n        $.RULE('referenceWithoutInfix', () => $.OR([\r\n\r\n            {ALT: () => $.SUBRULE($.referenceItem)},\r\n\r\n            {\r\n                // sheet name prefix\r\n                ALT: () => {\r\n                    // console.log('try sheetName');\r\n                    const sheetName = $.SUBRULE($.prefixName);\r\n                    // console.log('sheetName', sheetName);\r\n                    const referenceItem = $.SUBRULE2($.formulaWithRange);\r\n\r\n                    $.ACTION(() => {\r\n                        if (this.utils.isFormulaError(referenceItem))\r\n                            return referenceItem;\r\n                        referenceItem.ref.sheet = sheetName\r\n                    });\r\n                    return referenceItem;\r\n                }\r\n            },\r\n\r\n            // {ALT: () => $.SUBRULE('dynamicDataExchange')},\r\n        ]));\r\n\r\n        $.RULE('referenceItem', () => $.OR([\r\n            {\r\n                ALT: () => {\r\n                    const address = $.CONSUME(Cell).image;\r\n                    return $.ACTION(() => this.utils.parseCellAddress(address));\r\n                }\r\n            },\r\n            {\r\n                ALT: () => {\r\n                    const name = $.CONSUME(Name).image;\r\n                    return $.ACTION(() => context.getVariable(name))\r\n                }\r\n            },\r\n            {\r\n                ALT: () => {\r\n                    const column = $.CONSUME(Column).image;\r\n                    return $.ACTION(() => this.utils.parseCol(column))\r\n                }\r\n            },\r\n            // A row check should be here, but the token is same with Number,\r\n            // In other to resolve ambiguities, I leave this empty, and\r\n            // parse the number to row number when needed.\r\n            {\r\n                ALT: () => {\r\n                    const err = $.CONSUME(RefError).image;\r\n                    return $.ACTION(() => this.utils.toError(err))\r\n                }\r\n            },\r\n            // {ALT: () => $.SUBRULE($.udfFunctionCall)},\r\n            // {ALT: () => $.SUBRULE($.structuredReference)},\r\n        ]));\r\n\r\n        $.RULE('prefixName', () => $.OR([\r\n            {ALT: () => $.CONSUME(Sheet).image.slice(0, -1)},\r\n            {ALT: () => $.CONSUME(SheetQuoted).image.slice(1, -2).replace(/''/g, \"'\")},\r\n        ]));\r\n\r\n        this.performSelfAnalysis();\r\n    }\r\n}\r\n\r\nmodule.exports = {\r\n    Parser: Parsing,\r\n};\r\n", "const FormulaError = require('../formulas/error');\r\nconst {Address} = require('../formulas/helpers');\r\nconst {Prefix, Postfix, Infix, Operators} = require('../formulas/operators');\r\nconst Collection = require('./type/collection');\r\nconst MAX_ROW = 1048576, MAX_COLUMN = 16384;\r\nconst {NotAllInputParsedException} = require('chevrotain');\r\n\r\nclass Utils {\r\n\r\n    constructor(context) {\r\n        this.context = context;\r\n    }\r\n\r\n    columnNameToNumber(columnName) {\r\n        return Address.columnNameToNumber(columnName);\r\n    }\r\n\r\n    /**\r\n     * Parse the cell address only.\r\n     * @param {string} cellAddress\r\n     * @return {{ref: {col: number, address: string, row: number}}}\r\n     */\r\n    parseCellAddress(cellAddress) {\r\n        const res = cellAddress.match(/([$]?)([A-Za-z]{1,3})([$]?)([1-9][0-9]*)/);\r\n        // console.log('parseCellAddress', cellAddress);\r\n        return {\r\n            ref: {\r\n                address: res[0],\r\n                col: this.columnNameToNumber(res[2]),\r\n                row: +res[4]\r\n            },\r\n        };\r\n    }\r\n\r\n    parseRow(row) {\r\n        const rowNum = +row;\r\n        if (!Number.isInteger(rowNum))\r\n            throw Error('Row number must be integer.');\r\n        return {\r\n            ref: {\r\n                col: undefined,\r\n                row: +row\r\n            },\r\n        };\r\n    }\r\n\r\n    parseCol(col) {\r\n        return {\r\n            ref: {\r\n                col: this.columnNameToNumber(col),\r\n                row: undefined,\r\n            },\r\n        };\r\n    }\r\n\r\n    parseColRange(col1, col2) {\r\n        // const res = colRange.match(/([$]?)([A-Za-z]{1,3}):([$]?)([A-Za-z]{1,4})/);\r\n        col1 = this.columnNameToNumber(col1);\r\n        col2 = this.columnNameToNumber(col2);\r\n        return {\r\n            ref: {\r\n                from: {\r\n                    col: Math.min(col1, col2),\r\n                    row: null\r\n                },\r\n                to: {\r\n                    col: Math.max(col1, col2),\r\n                    row: null\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    parseRowRange(row1, row2) {\r\n        // const res = rowRange.match(/([$]?)([1-9][0-9]*):([$]?)([1-9][0-9]*)/);\r\n        return {\r\n            ref: {\r\n                from: {\r\n                    col: null,\r\n                    row: Math.min(row1, row2),\r\n                },\r\n                to: {\r\n                    col: null,\r\n                    row: Math.max(row1, row2),\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n    _applyPrefix(prefixes, val, isArray) {\r\n        if (this.isFormulaError(val))\r\n            return val;\r\n        return Prefix.unaryOp(prefixes, val, isArray);\r\n    }\r\n\r\n    async applyPrefixAsync(prefixes, value) {\r\n        const {val, isArray} = this.extractRefValue(await value);\r\n        return this._applyPrefix(prefixes, val, isArray);\r\n    }\r\n\r\n    /**\r\n     * Apply + or - unary prefix.\r\n     * @param {Array.<string>} prefixes\r\n     * @param {*} value\r\n     * @return {*}\r\n     */\r\n    applyPrefix(prefixes, value) {\r\n        // console.log('applyPrefix', prefixes, value);\r\n        if (this.context.async) {\r\n            return this.applyPrefixAsync(prefixes, value);\r\n        } else {\r\n            const {val, isArray} = this.extractRefValue(value);\r\n            return this._applyPrefix(prefixes, val, isArray);\r\n        }\r\n    }\r\n\r\n    _applyPostfix(val, isArray, postfix) {\r\n        if (this.isFormulaError(val))\r\n            return val;\r\n        return Postfix.percentOp(val, postfix, isArray);\r\n    }\r\n\r\n    async applyPostfixAsync(value, postfix) {\r\n        const {val, isArray} = this.extractRefValue(await value);\r\n        return this._applyPostfix(val, isArray, postfix);\r\n    }\r\n\r\n    applyPostfix(value, postfix) {\r\n        // console.log('applyPostfix', value, postfix);\r\n        if (this.context.async) {\r\n            return this.applyPostfixAsync(value, postfix);\r\n        } else {\r\n            const {val, isArray} = this.extractRefValue(value);\r\n            return this._applyPostfix(val, isArray, postfix)\r\n        }\r\n    }\r\n\r\n    _applyInfix(res1, infix, res2) {\r\n        const val1 = res1.val, isArray1 = res1.isArray;\r\n        const val2 = res2.val, isArray2 = res2.isArray;\r\n        if (this.isFormulaError(val1))\r\n            return val1;\r\n        if (this.isFormulaError(val2))\r\n            return val2;\r\n        if (Operators.compareOp.includes(infix))\r\n            return Infix.compareOp(val1, infix, val2, isArray1, isArray2);\r\n        else if (Operators.concatOp.includes(infix))\r\n            return Infix.concatOp(val1, infix, val2, isArray1, isArray2);\r\n        else if (Operators.mathOp.includes(infix))\r\n            return Infix.mathOp(val1, infix, val2, isArray1, isArray2);\r\n        else\r\n            throw new Error(`Unrecognized infix: ${infix}`);\r\n    }\r\n\r\n    async applyInfixAsync(value1, infix, value2) {\r\n        const res1 = this.extractRefValue(await value1);\r\n        const res2 = this.extractRefValue(await value2);\r\n        return this._applyInfix(res1, infix, res2)\r\n    }\r\n\r\n    applyInfix(value1, infix, value2) {\r\n        if (this.context.async) {\r\n            return this.applyInfixAsync(value1, infix, value2)\r\n        } else {\r\n            const res1 = this.extractRefValue(value1);\r\n            const res2 = this.extractRefValue(value2);\r\n            return this._applyInfix(res1, infix, res2)\r\n        }\r\n    }\r\n\r\n    applyIntersect(refs) {\r\n        // console.log('applyIntersect', refs);\r\n        if (this.isFormulaError(refs[0]))\r\n            return refs[0];\r\n        if (!refs[0].ref)\r\n            throw Error(`Expecting a reference, but got ${refs[0]}.`);\r\n        // a intersection will keep track of references, value won't be retrieved here.\r\n        let maxRow, maxCol, minRow, minCol, sheet, res; // index start from 1\r\n        // first time setup\r\n        const ref = refs.shift().ref;\r\n        sheet = ref.sheet;\r\n        if (!ref.from) {\r\n            // check whole row/col reference\r\n            if (ref.row === undefined || ref.col === undefined) {\r\n                throw Error('Cannot intersect the whole row or column.')\r\n            }\r\n\r\n            // cell ref\r\n            maxRow = minRow = ref.row;\r\n            maxCol = minCol = ref.col;\r\n        } else {\r\n            // range ref\r\n            // update\r\n            maxRow = Math.max(ref.from.row, ref.to.row);\r\n            minRow = Math.min(ref.from.row, ref.to.row);\r\n            maxCol = Math.max(ref.from.col, ref.to.col);\r\n            minCol = Math.min(ref.from.col, ref.to.col);\r\n        }\r\n\r\n        let err;\r\n        refs.forEach(ref => {\r\n            if (this.isFormulaError(ref))\r\n                return ref;\r\n            ref = ref.ref;\r\n            if (!ref) throw Error(`Expecting a reference, but got ${ref}.`);\r\n            if (!ref.from) {\r\n                if (ref.row === undefined || ref.col === undefined) {\r\n                    throw Error('Cannot intersect the whole row or column.')\r\n                }\r\n                // cell ref\r\n                if (ref.row > maxRow || ref.row < minRow || ref.col > maxCol || ref.col < minCol\r\n                    || sheet !== ref.sheet) {\r\n                    err = FormulaError.NULL;\r\n                }\r\n                maxRow = minRow = ref.row;\r\n                maxCol = minCol = ref.col;\r\n            } else {\r\n                // range ref\r\n                const refMaxRow = Math.max(ref.from.row, ref.to.row);\r\n                const refMinRow = Math.min(ref.from.row, ref.to.row);\r\n                const refMaxCol = Math.max(ref.from.col, ref.to.col);\r\n                const refMinCol = Math.min(ref.from.col, ref.to.col);\r\n                if (refMinRow > maxRow || refMaxRow < minRow || refMinCol > maxCol || refMaxCol < minCol\r\n                    || sheet !== ref.sheet) {\r\n                    err = FormulaError.NULL;\r\n                }\r\n                // update\r\n                maxRow = Math.min(maxRow, refMaxRow);\r\n                minRow = Math.max(minRow, refMinRow);\r\n                maxCol = Math.min(maxCol, refMaxCol);\r\n                minCol = Math.max(minCol, refMinCol);\r\n            }\r\n        });\r\n        if (err) return err;\r\n        // check if the ref can be reduced to cell reference\r\n        if (maxRow === minRow && maxCol === minCol) {\r\n            res = {\r\n                ref: {\r\n                    sheet,\r\n                    row: maxRow,\r\n                    col: maxCol\r\n                }\r\n            }\r\n        } else {\r\n            res = {\r\n                ref: {\r\n                    sheet,\r\n                    from: {row: minRow, col: minCol},\r\n                    to: {row: maxRow, col: maxCol}\r\n                }\r\n            };\r\n        }\r\n\r\n        if (!res.ref.sheet)\r\n            delete res.ref.sheet;\r\n        return res;\r\n    }\r\n\r\n    applyUnion(refs) {\r\n        const collection = new Collection();\r\n        for (let i = 0; i < refs.length; i++) {\r\n            if (this.isFormulaError(refs[i]))\r\n                return refs[i];\r\n            collection.add(this.extractRefValue(refs[i]).val, refs[i]);\r\n        }\r\n\r\n        // console.log('applyUnion', unions);\r\n        return collection;\r\n    }\r\n\r\n    /**\r\n     * Apply multiple references, e.g. A1:B3:C8:A:1:.....\r\n     * @param refs\r\n     // * @return {{ref: {from: {col: number, row: number}, to: {col: number, row: number}}}}\r\n     */\r\n    applyRange(refs) {\r\n        let res, maxRow = -1, maxCol = -1, minRow = MAX_ROW + 1, minCol = MAX_COLUMN + 1;\r\n        refs.forEach(ref => {\r\n            if (this.isFormulaError(ref))\r\n                return ref;\r\n            // row ref is saved as number, parse the number to row ref here\r\n            if (typeof ref === 'number') {\r\n                ref = this.parseRow(ref);\r\n            }\r\n            ref = ref.ref;\r\n            // check whole row/col reference\r\n            if (ref.row === undefined) {\r\n                minRow = 1;\r\n                maxRow = MAX_ROW\r\n            }\r\n            if (ref.col === undefined) {\r\n                minCol = 1;\r\n                maxCol = MAX_COLUMN;\r\n            }\r\n\r\n            if (ref.row > maxRow)\r\n                maxRow = ref.row;\r\n            if (ref.row < minRow)\r\n                minRow = ref.row;\r\n            if (ref.col > maxCol)\r\n                maxCol = ref.col;\r\n            if (ref.col < minCol)\r\n                minCol = ref.col;\r\n        });\r\n        if (maxRow === minRow && maxCol === minCol) {\r\n            res = {\r\n                ref: {\r\n                    row: maxRow,\r\n                    col: maxCol\r\n                }\r\n            }\r\n        } else {\r\n            res = {\r\n                ref: {\r\n                    from: {row: minRow, col: minCol},\r\n                    to: {row: maxRow, col: maxCol}\r\n                }\r\n            };\r\n        }\r\n        return res;\r\n    }\r\n\r\n    /**\r\n     * Throw away the refs, and retrieve the value.\r\n     * @return {{val: *, isArray: boolean}}\r\n     */\r\n    extractRefValue(obj) {\r\n        let res = obj, isArray = false;\r\n        if (Array.isArray(res))\r\n            isArray = true;\r\n        if (obj.ref) {\r\n            // can be number or array\r\n            return {val: this.context.retrieveRef(obj), isArray};\r\n\r\n        }\r\n        return {val: res, isArray};\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param array\r\n     * @return {Array}\r\n     */\r\n    toArray(array) {\r\n        // TODO: check if array is valid\r\n        // console.log('toArray', array);\r\n        return array;\r\n    }\r\n\r\n    /**\r\n     * @param {string} number\r\n     * @return {number}\r\n     */\r\n    toNumber(number) {\r\n        return Number(number);\r\n    }\r\n\r\n    /**\r\n     * @param {string} string\r\n     * @return {string}\r\n     */\r\n    toString(string) {\r\n        return string.substring(1, string.length - 1) .replace(/\"\"/g, '\"');\r\n    }\r\n\r\n    /**\r\n     * @param {string} bool\r\n     * @return {boolean}\r\n     */\r\n    toBoolean(bool) {\r\n        return bool === 'TRUE';\r\n    }\r\n\r\n    /**\r\n     * Parse an error.\r\n     * @param {string} error\r\n     * @return {string}\r\n     */\r\n    toError(error) {\r\n        return new FormulaError(error.toUpperCase());\r\n    }\r\n\r\n    isFormulaError(obj) {\r\n        return obj instanceof FormulaError;\r\n    }\r\n\r\n    static formatChevrotainError(error, inputText) {\r\n        let line, column, msg = '';\r\n        // e.g. SUM(1))\r\n        if (error instanceof NotAllInputParsedException) {\r\n            line = error.token.startLine;\r\n            column = error.token.startColumn;\r\n        } else {\r\n            line = error.previousToken.startLine;\r\n            column = error.previousToken.startColumn + 1;\r\n        }\r\n\r\n        msg += '\\n' + inputText.split('\\n')[line - 1] + '\\n';\r\n        msg += Array(column - 1).fill(' ').join('') + '^\\n';\r\n        msg += `Error at position ${line}:${column}\\n` + error.message;\r\n        error.errorLocation = {line, column};\r\n        return FormulaError.ERROR(msg, error);\r\n    }\r\n\r\n}\r\n\r\nmodule.exports = Utils;\r\n", "const TextFunctions = require('../formulas/functions/text');\r\nconst MathFunctions = require('../formulas/functions/math');\r\nconst TrigFunctions = require('../formulas/functions/trigonometry');\r\nconst LogicalFunctions = require('../formulas/functions/logical');\r\nconst EngFunctions = require('../formulas/functions/engineering');\r\nconst ReferenceFunctions = require('../formulas/functions/reference');\r\nconst InformationFunctions = require('../formulas/functions/information');\r\nconst StatisticalFunctions = require('../formulas/functions/statistical');\r\nconst DateFunctions = require('../formulas/functions/date');\r\nconst WebFunctions = require('../formulas/functions/web');\r\nconst FormulaError = require('../formulas/error');\r\nconst {FormulaHelpers} = require('../formulas/helpers');\r\nconst {Parser, allTokens} = require('./parsing');\r\nconst lexer = require('./lexing');\r\nconst Utils = require('./utils');\r\n\r\n/**\r\n * A Excel Formula Parser & Evaluator\r\n */\r\nclass FormulaParser {\r\n\r\n    /**\r\n     * @param {{functions: {}, functionsNeedContext: {}, onVariable: function, onCell: function, onRange: function}} [config]\r\n     * @param isTest - is in testing environment\r\n     */\r\n    constructor(config, isTest = false) {\r\n        this.logs = [];\r\n        this.isTest = isTest;\r\n        this.utils = new Utils(this);\r\n        config = Object.assign({\r\n            functions: {},\r\n            functionsNeedContext: {},\r\n            onVariable: () => null,\r\n            onCell: () => 0,\r\n            onRange: () => [[0]],\r\n        }, config);\r\n\r\n        this.onVariable = config.onVariable;\r\n        this.functions = Object.assign({}, DateFunctions, StatisticalFunctions, InformationFunctions, ReferenceFunctions,\r\n            EngFunctions, LogicalFunctions, TextFunctions, MathFunctions, TrigFunctions, WebFunctions,\r\n            config.functions, config.functionsNeedContext);\r\n        this.onRange = config.onRange;\r\n        this.onCell = config.onCell;\r\n\r\n        // functions treat null as 0, other functions treats null as \"\"\r\n        this.funsNullAs0 = Object.keys(MathFunctions)\r\n            .concat(Object.keys(TrigFunctions))\r\n            .concat(Object.keys(LogicalFunctions))\r\n            .concat(Object.keys(EngFunctions))\r\n            .concat(Object.keys(ReferenceFunctions))\r\n            .concat(Object.keys(StatisticalFunctions))\r\n            .concat(Object.keys(DateFunctions));\r\n\r\n        // functions need context and don't need to retrieve references\r\n        this.funsNeedContextAndNoDataRetrieve = ['ROW', 'ROWS', 'COLUMN', 'COLUMNS', 'SUMIF', 'INDEX', 'AVERAGEIF', 'IF'];\r\n\r\n        // functions need parser context\r\n        this.funsNeedContext = [...Object.keys(config.functionsNeedContext), ...this.funsNeedContextAndNoDataRetrieve,\r\n            'INDEX', 'OFFSET', 'INDIRECT', 'IF', 'CHOOSE', 'WEBSERVICE'];\r\n\r\n        // functions preserve reference in arguments\r\n        this.funsPreserveRef = Object.keys(InformationFunctions);\r\n\r\n        this.parser = new Parser(this, this.utils);\r\n    }\r\n\r\n    /**\r\n     * Get all lexing token names. Webpack needs this.\r\n     * @return {Array.<string>} - All token names that should not be minimized.\r\n     */\r\n    static get allTokens() {\r\n        return allTokens;\r\n    }\r\n\r\n    /**\r\n     * Get value from the cell reference\r\n     * @param ref\r\n     * @return {*}\r\n     */\r\n    getCell(ref) {\r\n        // console.log('get cell', JSON.stringify(ref));\r\n        if (ref.sheet == null)\r\n            ref.sheet = this.position ? this.position.sheet : undefined;\r\n        return this.onCell(ref);\r\n    }\r\n\r\n    /**\r\n     * Get values from the range reference.\r\n     * @param ref\r\n     * @return {*}\r\n     */\r\n    getRange(ref) {\r\n        // console.log('get range', JSON.stringify(ref));\r\n        if (ref.sheet == null)\r\n            ref.sheet = this.position ? this.position.sheet : undefined;\r\n        return this.onRange(ref)\r\n    }\r\n\r\n    /**\r\n     * TODO:\r\n     * Get references or values from a user defined variable.\r\n     * @param name\r\n     * @return {*}\r\n     */\r\n    getVariable(name) {\r\n        // console.log('get variable', name);\r\n        const res = {ref: this.onVariable(name, this.position.sheet, this.position)};\r\n        if (res.ref == null)\r\n            return FormulaError.NAME;\r\n        return res;\r\n    }\r\n\r\n    /**\r\n     * Retrieve values from the given reference.\r\n     * @param valueOrRef\r\n     * @return {*}\r\n     */\r\n    retrieveRef(valueOrRef) {\r\n        if (FormulaHelpers.isRangeRef(valueOrRef)) {\r\n            return this.getRange(valueOrRef.ref);\r\n        }\r\n        if (FormulaHelpers.isCellRef(valueOrRef)) {\r\n            return this.getCell(valueOrRef.ref)\r\n        }\r\n        return valueOrRef;\r\n    }\r\n\r\n    /**\r\n     * Call an excel function.\r\n     * @param name - Function name.\r\n     * @param args - Arguments that pass to the function.\r\n     * @return {*}\r\n     */\r\n    _callFunction(name, args) {\r\n        if (name.indexOf('_xlfn.') === 0)\r\n            name = name.slice(6);\r\n        name = name.toUpperCase();\r\n        // if one arg is null, it means 0 or \"\" depends on the function it calls\r\n        const nullValue = this.funsNullAs0.includes(name) ? 0 : '';\r\n\r\n        if (!this.funsNeedContextAndNoDataRetrieve.includes(name)) {\r\n            // retrieve reference\r\n            args = args.map(arg => {\r\n                if (arg === null)\r\n                    return {value: nullValue, isArray: false, omitted: true};\r\n                const res = this.utils.extractRefValue(arg);\r\n\r\n                if (this.funsPreserveRef.includes(name)) {\r\n                    return {value: res.val, isArray: res.isArray, ref: arg.ref};\r\n                }\r\n                return {\r\n                    value: res.val,\r\n                    isArray: res.isArray,\r\n                    isRangeRef: !!FormulaHelpers.isRangeRef(arg),\r\n                    isCellRef: !!FormulaHelpers.isCellRef(arg)\r\n                };\r\n            });\r\n        }\r\n        // console.log('callFunction', name, args)\r\n\r\n        if (this.functions[name]) {\r\n            let res;\r\n            try {\r\n                if (!this.funsNeedContextAndNoDataRetrieve.includes(name) && !this.funsNeedContext.includes(name))\r\n                    res = (this.functions[name](...args));\r\n                else\r\n                    res = (this.functions[name](this, ...args));\r\n            } catch (e) {\r\n                // allow functions throw FormulaError, this make functions easier to implement!\r\n                if (e instanceof FormulaError) {\r\n                    return e;\r\n                } else {\r\n                    throw e;\r\n                }\r\n            }\r\n            if (res === undefined) {\r\n                // console.log(`Function ${name} may be not implemented.`);\r\n                if (this.isTest) {\r\n                    if (!this.logs.includes(name)) this.logs.push(name);\r\n                    return {value: 0, ref: {}};\r\n                }\r\n                throw FormulaError.NOT_IMPLEMENTED(name);\r\n            }\r\n            return res;\r\n        } else {\r\n            // console.log(`Function ${name} is not implemented`);\r\n            if (this.isTest) {\r\n                if (!this.logs.includes(name)) this.logs.push(name);\r\n                return {value: 0, ref: {}};\r\n            }\r\n            throw FormulaError.NOT_IMPLEMENTED(name);\r\n        }\r\n    }\r\n\r\n    async callFunctionAsync(name, args) {\r\n        const awaitedArgs = [];\r\n        for (const arg of args) {\r\n            awaitedArgs.push(await arg);\r\n        }\r\n        const res = await this._callFunction(name, awaitedArgs);\r\n        return FormulaHelpers.checkFunctionResult(res)\r\n    }\r\n\r\n    callFunction(name, args) {\r\n        if (this.async) {\r\n            return this.callFunctionAsync(name, args);\r\n        } else {\r\n            const res = this._callFunction(name, args);\r\n            return FormulaHelpers.checkFunctionResult(res);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Return currently supported functions.\r\n     * @return {this}\r\n     */\r\n    supportedFunctions() {\r\n        const supported = [];\r\n        const functions = Object.keys(this.functions);\r\n        functions.forEach(fun => {\r\n            try {\r\n                const res = this.functions[fun](0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\r\n                if (res === undefined) return;\r\n                supported.push(fun);\r\n            } catch (e) {\r\n                if (e instanceof Error)\r\n                    supported.push(fun);\r\n            }\r\n        });\r\n        return supported.sort();\r\n    }\r\n\r\n    /**\r\n     * Check and return the appropriate formula result.\r\n     * @param result\r\n     * @param {boolean} [allowReturnArray] - If the formula can return an array\r\n     * @return {*}\r\n     */\r\n    checkFormulaResult(result, allowReturnArray = false) {\r\n        const type = typeof result;\r\n        // number\r\n        if (type === 'number') {\r\n            if (isNaN(result)) {\r\n                return FormulaError.VALUE;\r\n            } else if (!isFinite(result)) {\r\n                return FormulaError.NUM;\r\n            }\r\n            result += 0; // make -0 to 0\r\n        } else if (type === 'object') {\r\n            if (result instanceof FormulaError)\r\n                return result;\r\n            if (allowReturnArray) {\r\n                if (result.ref) {\r\n                    result = this.retrieveRef(result);\r\n                }\r\n                // Disallow union, and other unknown data types.\r\n                // e.g. `=(A1:C1, A2:E9)` -> #VALUE!\r\n                if (typeof result === 'object' && !Array.isArray(result) && result != null) {\r\n                    return FormulaError.VALUE;\r\n                }\r\n\r\n            } else {\r\n                if (result.ref && result.ref.row && !result.ref.from) {\r\n                    // single cell reference\r\n                    result = this.retrieveRef(result);\r\n                } else if (result.ref && result.ref.from && result.ref.from.col === result.ref.to.col) {\r\n                    // single Column reference\r\n                    result = this.retrieveRef({\r\n                        ref: {\r\n                            row: result.ref.from.row, col: result.ref.from.col\r\n                        }\r\n                    });\r\n                } else if (Array.isArray(result)) {\r\n                    result = result[0][0]\r\n                } else {\r\n                    // array, range reference, union collections\r\n                    return FormulaError.VALUE;\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Parse an excel formula.\r\n     * @param {string} inputText\r\n     * @param {{row: number, col: number}} [position] - The position of the parsed formula\r\n     *              e.g. {row: 1, col: 1}\r\n     * @param {boolean} [allowReturnArray] - If the formula can return an array. Useful when parsing array formulas,\r\n     *                                      or data validation formulas.\r\n     * @returns {*}\r\n     */\r\n    parse(inputText, position, allowReturnArray = false) {\r\n        if (inputText.length === 0) throw Error('Input must not be empty.');\r\n        this.position = position;\r\n        this.async = false;\r\n        const lexResult = lexer.lex(inputText);\r\n        this.parser.input = lexResult.tokens;\r\n        let res;\r\n        try {\r\n            res = this.parser.formulaWithBinaryOp();\r\n            res = this.checkFormulaResult(res, allowReturnArray);\r\n            if (res instanceof FormulaError) {\r\n                return res;\r\n            }\r\n        } catch (e) {\r\n            throw FormulaError.ERROR(e.message, e);\r\n        }\r\n        if (this.parser.errors.length > 0) {\r\n            const error = this.parser.errors[0];\r\n            throw Utils.formatChevrotainError(error, inputText);\r\n        }\r\n        return res;\r\n    }\r\n\r\n    /**\r\n     * Parse an excel formula asynchronously.\r\n     * Use when providing custom async functions.\r\n     * @param {string} inputText\r\n     * @param {{row: number, col: number}} [position] - The position of the parsed formula\r\n     *              e.g. {row: 1, col: 1}\r\n     * @param {boolean} [allowReturnArray] - If the formula can return an array. Useful when parsing array formulas,\r\n     *                                      or data validation formulas.\r\n     * @returns {*}\r\n     */\r\n    async parseAsync(inputText, position, allowReturnArray = false) {\r\n        if (inputText.length === 0) throw Error('Input must not be empty.');\r\n        this.position = position;\r\n        this.async = true;\r\n        const lexResult = lexer.lex(inputText);\r\n        this.parser.input = lexResult.tokens;\r\n        let res;\r\n        try {\r\n            res = await this.parser.formulaWithBinaryOp();\r\n            res = this.checkFormulaResult(res, allowReturnArray);\r\n            if (res instanceof FormulaError) {\r\n                return res;\r\n            }\r\n        } catch (e) {\r\n            throw FormulaError.ERROR(e.message, e);\r\n        }\r\n        if (this.parser.errors.length > 0) {\r\n            const error = this.parser.errors[0];\r\n            throw Utils.formatChevrotainError(error, inputText);\r\n        }\r\n        return res;\r\n    }\r\n}\r\n\r\nmodule.exports = {\r\n    FormulaParser,\r\n    FormulaHelpers,\r\n};\r\n", "const FormulaError = require('../../formulas/error');\r\nconst {FormulaHelpers, Types, Address} = require('../../formulas/helpers');\r\nconst {Prefix, Postfix, Infix, Operators} = require('../../formulas/operators');\r\nconst Collection = require('../type/collection');\r\nconst MAX_ROW = 1048576, MAX_COLUMN = 16384;\r\n\r\nclass Utils {\r\n\r\n    constructor(context) {\r\n        this.context = context;\r\n    }\r\n\r\n    columnNameToNumber(columnName) {\r\n        return Address.columnNameToNumber(columnName);\r\n    }\r\n\r\n    /**\r\n     * Parse the cell address only.\r\n     * @param {string} cellAddress\r\n     * @return {{ref: {col: number, address: string, row: number}}}\r\n     */\r\n    parseCellAddress(cellAddress) {\r\n        const res = cellAddress.match(/([$]?)([A-Za-z]{1,3})([$]?)([1-9][0-9]*)/);\r\n        // console.log('parseCellAddress', cellAddress);\r\n        return {\r\n            ref: {\r\n                col: this.columnNameToNumber(res[2]),\r\n                row: +res[4]\r\n            },\r\n        };\r\n    }\r\n\r\n    parseRow(row) {\r\n        const rowNum = +row;\r\n        if (!Number.isInteger(rowNum))\r\n            throw Error('Row number must be integer.');\r\n        return {\r\n            ref: {\r\n                col: undefined,\r\n                row: +row\r\n            },\r\n        };\r\n    }\r\n\r\n    parseCol(col) {\r\n        return {\r\n            ref: {\r\n                col: this.columnNameToNumber(col),\r\n                row: undefined,\r\n            },\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Apply + or - unary prefix.\r\n     * @param {Array.<string>} prefixes\r\n     * @param {*} value\r\n     * @return {*}\r\n     */\r\n    applyPrefix(prefixes, value) {\r\n        this.extractRefValue(value);\r\n        return 0;\r\n    }\r\n\r\n    applyPostfix(value, postfix) {\r\n        this.extractRefValue(value);\r\n        return 0\r\n    }\r\n\r\n    applyInfix(value1, infix, value2) {\r\n        this.extractRefValue(value1);\r\n        this.extractRefValue(value2);\r\n        return 0;\r\n    }\r\n\r\n    applyIntersect(refs) {\r\n        // console.log('applyIntersect', refs);\r\n        if (this.isFormulaError(refs[0]))\r\n            return refs[0];\r\n        if (!refs[0].ref)\r\n            throw Error(`Expecting a reference, but got ${refs[0]}.`);\r\n        // a intersection will keep track of references, value won't be retrieved here.\r\n        let maxRow, maxCol, minRow, minCol, sheet, res; // index start from 1\r\n        // first time setup\r\n        const ref = refs.shift().ref;\r\n        sheet = ref.sheet;\r\n        if (!ref.from) {\r\n            // check whole row/col reference\r\n            if (ref.row === undefined || ref.col === undefined) {\r\n                throw Error('Cannot intersect the whole row or column.')\r\n            }\r\n\r\n            // cell ref\r\n            maxRow = minRow = ref.row;\r\n            maxCol = minCol = ref.col;\r\n        } else {\r\n            // range ref\r\n            // update\r\n            maxRow = Math.max(ref.from.row, ref.to.row);\r\n            minRow = Math.min(ref.from.row, ref.to.row);\r\n            maxCol = Math.max(ref.from.col, ref.to.col);\r\n            minCol = Math.min(ref.from.col, ref.to.col);\r\n        }\r\n\r\n        let err;\r\n        refs.forEach(ref => {\r\n            if (this.isFormulaError(ref))\r\n                return ref;\r\n            ref = ref.ref;\r\n            if (!ref) throw Error(`Expecting a reference, but got ${ref}.`);\r\n            if (!ref.from) {\r\n                if (ref.row === undefined || ref.col === undefined) {\r\n                    throw Error('Cannot intersect the whole row or column.')\r\n                }\r\n                // cell ref\r\n                if (ref.row > maxRow || ref.row < minRow || ref.col > maxCol || ref.col < minCol\r\n                    || sheet !== ref.sheet) {\r\n                    err = FormulaError.NULL;\r\n                }\r\n                maxRow = minRow = ref.row;\r\n                maxCol = minCol = ref.col;\r\n            } else {\r\n                // range ref\r\n                const refMaxRow = Math.max(ref.from.row, ref.to.row);\r\n                const refMinRow = Math.min(ref.from.row, ref.to.row);\r\n                const refMaxCol = Math.max(ref.from.col, ref.to.col);\r\n                const refMinCol = Math.min(ref.from.col, ref.to.col);\r\n                if (refMinRow > maxRow || refMaxRow < minRow || refMinCol > maxCol || refMaxCol < minCol\r\n                    || sheet !== ref.sheet) {\r\n                    err = FormulaError.NULL;\r\n                }\r\n                // update\r\n                maxRow = Math.min(maxRow, refMaxRow);\r\n                minRow = Math.max(minRow, refMinRow);\r\n                maxCol = Math.min(maxCol, refMaxCol);\r\n                minCol = Math.max(minCol, refMinCol);\r\n            }\r\n        });\r\n        if (err) return err;\r\n        // check if the ref can be reduced to cell reference\r\n        if (maxRow === minRow && maxCol === minCol) {\r\n            res = {\r\n                ref: {\r\n                    sheet,\r\n                    row: maxRow,\r\n                    col: maxCol\r\n                }\r\n            }\r\n        } else {\r\n            res = {\r\n                ref: {\r\n                    sheet,\r\n                    from: {row: minRow, col: minCol},\r\n                    to: {row: maxRow, col: maxCol}\r\n                }\r\n            };\r\n        }\r\n\r\n        if (!res.ref.sheet)\r\n            delete res.ref.sheet;\r\n        return res;\r\n    }\r\n\r\n    applyUnion(refs) {\r\n        const collection = new Collection();\r\n        for (let i = 0; i < refs.length; i++) {\r\n            if (this.isFormulaError(refs[i]))\r\n                return refs[i];\r\n            collection.add(this.extractRefValue(refs[i]).val, refs[i]);\r\n        }\r\n\r\n        // console.log('applyUnion', unions);\r\n        return collection;\r\n    }\r\n\r\n    /**\r\n     * Apply multiple references, e.g. A1:B3:C8:A:1:.....\r\n     * @param refs\r\n     // * @return {{ref: {from: {col: number, row: number}, to: {col: number, row: number}}}}\r\n     */\r\n    applyRange(refs) {\r\n        let res, maxRow = -1, maxCol = -1, minRow = MAX_ROW + 1, minCol = MAX_COLUMN + 1;\r\n        refs.forEach(ref => {\r\n            if (this.isFormulaError(ref))\r\n                return ref;\r\n            // row ref is saved as number, parse the number to row ref here\r\n            if (typeof ref === 'number') {\r\n                ref = this.parseRow(ref);\r\n            }\r\n            ref = ref.ref;\r\n            // check whole row/col reference\r\n            if (ref.row === undefined) {\r\n                minRow = 1;\r\n                maxRow = MAX_ROW\r\n            }\r\n            if (ref.col === undefined) {\r\n                minCol = 1;\r\n                maxCol = MAX_COLUMN;\r\n            }\r\n\r\n            if (ref.row > maxRow)\r\n                maxRow = ref.row;\r\n            if (ref.row < minRow)\r\n                minRow = ref.row;\r\n            if (ref.col > maxCol)\r\n                maxCol = ref.col;\r\n            if (ref.col < minCol)\r\n                minCol = ref.col;\r\n        });\r\n        if (maxRow === minRow && maxCol === minCol) {\r\n            res = {\r\n                ref: {\r\n                    row: maxRow,\r\n                    col: maxCol\r\n                }\r\n            }\r\n        } else {\r\n            res = {\r\n                ref: {\r\n                    from: {row: minRow, col: minCol},\r\n                    to: {row: maxRow, col: maxCol}\r\n                }\r\n            };\r\n        }\r\n        return res;\r\n    }\r\n\r\n    /**\r\n     * Throw away the refs, and retrieve the value.\r\n     * @return {{val: *, isArray: boolean}}\r\n     */\r\n    extractRefValue(obj) {\r\n        const isArray = Array.isArray(obj);\r\n        if (obj.ref) {\r\n            // can be number or array\r\n            return {val: this.context.retrieveRef(obj), isArray};\r\n\r\n        }\r\n        return {val: obj, isArray};\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param array\r\n     * @return {Array}\r\n     */\r\n    toArray(array) {\r\n        // TODO: check if array is valid\r\n        // console.log('toArray', array);\r\n        return array;\r\n    }\r\n\r\n    /**\r\n     * @param {string} number\r\n     * @return {number}\r\n     */\r\n    toNumber(number) {\r\n        return Number(number);\r\n    }\r\n\r\n    /**\r\n     * @param {string} string\r\n     * @return {string}\r\n     */\r\n    toString(string) {\r\n        return string.substring(1, string.length - 1) .replace(/\"\"/g, '\"');\r\n    }\r\n\r\n    /**\r\n     * @param {string} bool\r\n     * @return {boolean}\r\n     */\r\n    toBoolean(bool) {\r\n        return bool === 'TRUE';\r\n    }\r\n\r\n    /**\r\n     * Parse an error.\r\n     * @param {string} error\r\n     * @return {FormulaError}\r\n     */\r\n    toError(error) {\r\n        return new FormulaError(error.toUpperCase());\r\n    }\r\n\r\n    isFormulaError(obj) {\r\n        return obj instanceof FormulaError;\r\n    }\r\n}\r\n\r\nmodule.exports = Utils;\r\n", "const FormulaError = require('../../formulas/error');\r\nconst {FormulaHelpers} = require('../../formulas/helpers');\r\nconst {Parser} = require('../parsing');\r\nconst lexer = require('../lexing');\r\nconst Utils = require('./utils');\r\nconst {formatChevrotainError} = require('../utils');\r\n\r\nclass DepParser {\r\n\r\n    /**\r\n     *\r\n     * @param {{onVariable: Function}} [config]\r\n     */\r\n    constructor(config) {\r\n        this.data = [];\r\n        this.utils = new Utils(this);\r\n        config = Object.assign({\r\n            onVariable: () => null,\r\n        }, config);\r\n        this.utils = new Utils(this);\r\n\r\n        this.onVariable = config.onVariable;\r\n        this.functions = {}\r\n\r\n        this.parser = new Parser(this, this.utils);\r\n    }\r\n\r\n    /**\r\n     * Get value from the cell reference\r\n     * @param ref\r\n     * @return {*}\r\n     */\r\n    getCell(ref) {\r\n        // console.log('get cell', JSON.stringify(ref));\r\n        if (ref.row != null) {\r\n            if (ref.sheet == null)\r\n                ref.sheet = this.position ? this.position.sheet : undefined;\r\n            const idx = this.data.findIndex(element => {\r\n                return (element.from && element.from.row <= ref.row && element.to.row >= ref.row\r\n                    && element.from.col <= ref.col && element.to.col >= ref.col)\r\n                    || (element.row === ref.row && element.col === ref.col && element.sheet === ref.sheet)\r\n            });\r\n            if (idx === -1)\r\n                this.data.push(ref);\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * Get values from the range reference.\r\n     * @param ref\r\n     * @return {*}\r\n     */\r\n    getRange(ref) {\r\n        // console.log('get range', JSON.stringify(ref));\r\n        if (ref.from.row != null) {\r\n            if (ref.sheet == null)\r\n                ref.sheet = this.position ? this.position.sheet : undefined;\r\n\r\n            const idx = this.data.findIndex(element => {\r\n                return element.from && element.from.row === ref.from.row && element.from.col === ref.from.col\r\n                    && element.to.row === ref.to.row && element.to.col === ref.to.col;\r\n            });\r\n            if (idx === -1)\r\n                this.data.push(ref);\r\n        }\r\n        return [[0]]\r\n    }\r\n\r\n    /**\r\n     * TODO:\r\n     * Get references or values from a user defined variable.\r\n     * @param name\r\n     * @return {*}\r\n     */\r\n    getVariable(name) {\r\n        // console.log('get variable', name);\r\n        const res = {ref: this.onVariable(name, this.position.sheet)};\r\n        if (res.ref == null)\r\n            return FormulaError.NAME;\r\n        if (FormulaHelpers.isCellRef(res))\r\n            this.getCell(res.ref);\r\n        else {\r\n            this.getRange(res.ref);\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * Retrieve values from the given reference.\r\n     * @param valueOrRef\r\n     * @return {*}\r\n     */\r\n    retrieveRef(valueOrRef) {\r\n        if (FormulaHelpers.isRangeRef(valueOrRef)) {\r\n            return this.getRange(valueOrRef.ref);\r\n        }\r\n        if (FormulaHelpers.isCellRef(valueOrRef)) {\r\n            return this.getCell(valueOrRef.ref)\r\n        }\r\n        return valueOrRef;\r\n    }\r\n\r\n    /**\r\n     * Call an excel function.\r\n     * @param name - Function name.\r\n     * @param args - Arguments that pass to the function.\r\n     * @return {*}\r\n     */\r\n    callFunction(name, args) {\r\n        args.forEach(arg => {\r\n            if (arg == null)\r\n                return;\r\n            this.retrieveRef(arg);\r\n        });\r\n        return {value: 0, ref: {}};\r\n    }\r\n\r\n    /**\r\n     * Check and return the appropriate formula result.\r\n     * @param result\r\n     * @return {*}\r\n     */\r\n    checkFormulaResult(result) {\r\n        this.retrieveRef(result);\r\n    }\r\n\r\n    /**\r\n     * Parse an excel formula and return the dependencies\r\n     * @param {string} inputText\r\n     * @param {{row: number, col: number, sheet: string}} position\r\n     * @param {boolean} [ignoreError=false] if true, throw FormulaError when error occurred.\r\n     *                                      if false, the parser will return partial dependencies.\r\n     * @returns {Array.<{}>}\r\n     */\r\n    parse(inputText, position, ignoreError = false) {\r\n        if (inputText.length === 0) throw Error('Input must not be empty.');\r\n        this.data = [];\r\n        this.position = position;\r\n        const lexResult = lexer.lex(inputText);\r\n        this.parser.input = lexResult.tokens;\r\n        try {\r\n            const res = this.parser.formulaWithBinaryOp();\r\n            this.checkFormulaResult(res);\r\n        } catch (e) {\r\n            if (!ignoreError) {\r\n                throw FormulaError.ERROR(e.message, e);\r\n            }\r\n        }\r\n        if (this.parser.errors.length > 0 && !ignoreError) {\r\n            const error = this.parser.errors[0];\r\n            throw formatChevrotainError(error, inputText);\r\n        }\r\n\r\n        return this.data;\r\n    }\r\n}\r\n\r\nmodule.exports = {\r\n    DepParser,\r\n};\r\n", "const {FormulaParser} = require('./grammar/hooks');\r\nconst {DepParser} = require('./grammar/dependency/hooks');\r\nconst SSF = require('./ssf/ssf');\r\nconst FormulaError = require('./formulas/error');\r\n\r\n// const funs = new FormulaParser().supportedFunctions();\r\n// console.log('Supported:', funs.join(', '),\r\n//     `\\nTotal: ${funs.length}/477, ${funs.length/477*100}% implemented.`);\r\n\r\n\r\nObject.assign(FormulaParser, {\r\n    MAX_ROW: 1048576,\r\n    MAX_COLUMN: 16384,\r\n    SSF,\r\n    DepParser,\r\n    FormulaError, ...require('./formulas/helpers')\r\n});\r\nmodule.exports = FormulaParser;\r\n", "import startCase from \"lodash/startCase\";\nimport { getIconForManifest } from \"./icons\";\n\nexport type PrimitiveColumnType = \"string\" | \"primitive\" | \"number\" | \"boolean\" | \"image-uri\" | \"date-time\" | \"uri\";\n\nexport type ColumnType = PrimitiveColumnType | { kind: \"array\"; items: PrimitiveColumnType };\n\nexport type StringColumnValue = { type: \"string\"; value?: string };\n\nexport type ColumnParam = {\n    name: string;\n    displayName: string;\n    type: ColumnType;\n};\n\nexport type PrimitiveValue = string | number | boolean;\n\nexport type ColumnValue =\n    | { type: \"primitive\"; value?: PrimitiveValue }\n    | { type: \"number\"; value?: number }\n    | { type: \"boolean\"; value?: boolean }\n    | StringColumnValue;\n\nexport type Column = (...values: ColumnValue[]) => any | Promise<any>;\n\nfunction convert(x: any) {\n    if (x instanceof Date) {\n        return x.toISOString();\n    } else if (Array.isArray(x)) {\n        return x.map(convert);\n    } else {\n        return x;\n    }\n}\n\nexport async function listen(event: MessageEvent<any>, main: Column) {\n    const {\n        // origin,\n        data: { key, params },\n    } = event;\n\n    let result;\n    let error;\n    try {\n        result = await main(...params);\n    } catch (e) {\n        result = undefined;\n        try {\n            error = e.toString();\n        } catch (e) {\n            error = \"Exception can't be stringified.\";\n        }\n    }\n\n    const response: any = { key };\n    if (result !== undefined) {\n        result = convert(result);\n        response.result = { type: \"string\", value: result };\n    }\n    if (error !== undefined) {\n        response.error = error;\n    }\n\n    // TODO fix this type\n    (event.source?.postMessage as any)(response, \"*\");\n}\n\nexport type Category =\n    | \"Machine Learning\"\n    | \"Glide\"\n    | \"General\"\n    | \"Array\"\n    | \"Number\"\n    | \"Encoding\"\n    | \"Text\"\n    | \"Data & APIs\"\n    | \"Image\"\n    | \"Fun\"\n    | \"Date & Time\"\n    | \"Cryptography\"\n    | \"Code\";\n\ntype Released = \"direct\" | \"sandboxed\";\n\nexport type Manifest = {\n    name: string;\n    category: Category;\n    released?: Released;\n    description: string;\n    author: string;\n    params: ColumnParam[];\n    result: { type: ColumnType };\n    icon: string;\n    about?: string;\n    video?: string;\n};\n\nexport type ManifestConvenient<T> = Omit<Manifest, \"params\" | \"icon\"> & {\n    params: Record<keyof T, Omit<ColumnParam, \"name\">>;\n    icon?: string;\n};\n\ntype Test<TParams> = { params: Partial<TParams>; expectedResult: any; allowFailure?: boolean };\n\nexport type ColumnDefinition<TColumnParams = {}> = ManifestConvenient<TColumnParams> & {\n    run: Column;\n    example?: Partial<TColumnParams>;\n    tests?: Test<TColumnParams>[];\n};\n\nexport function column<TColumnParams>(manifest: ColumnDefinition<TColumnParams>): ColumnDefinition<TColumnParams> & {\n    json: string;\n} {\n    // We run this code in node to output manifests, so check for window.\n    if (!process.env.DIRECT && typeof window !== \"undefined\") {\n        window.addEventListener(\"message\", e => listen(e, manifest.run));\n    }\n\n    return {\n        ...manifest,\n        json: JSON.stringify(toStrictManifest(manifest), null, 2),\n    };\n}\n\nexport function toStrictManifest(convenient: ManifestConvenient<any>): Manifest {\n    // We carefully pick out just the props in manifest, because more\n    // could come in from the component.\n    const { name, category, released, description, author, result, params, about, video } = convenient;\n    const icon = getIconForManifest(convenient);\n\n    return {\n        name,\n        category,\n        released,\n        description,\n        author,\n        result,\n        about,\n        icon,\n        video,\n        params: Object.entries(params).map(([name, param]) => ({\n            name,\n            ...param,\n        })),\n    };\n}\n\nconst defaultDefinition: ColumnDefinition = {\n    name: \"Glide Column\",\n    category: \"General\",\n    released: undefined,\n    description: \"No description\",\n    author: \"Glide <hello@glideapps.com>\",\n    params: {},\n    result: { type: \"string\" },\n    icon: undefined,\n    about: undefined,\n    video: \"https://www.loom.com/share/39ab84c058e14adea79ca4442f450351\",\n    tests: [],\n    async run() {\n        return undefined;\n    },\n};\n\nexport class Col<TParams = {}, TResult = string> {\n    readonly definition: ColumnDefinition<TParams>;\n    readonly requiredParams: string[];\n\n    constructor(m: Partial<ColumnDefinition<TParams>> = {}, requiredParams: string[] = []) {\n        this.definition = {\n            ...(defaultDefinition as ColumnDefinition<TParams>),\n            ...m,\n        };\n        this.requiredParams = [...requiredParams];\n    }\n\n    public with(m: Partial<ColumnDefinition<TParams>>, requiredParams: string[] = []): Col<TParams, TResult> {\n        return new Col({ ...this.definition, ...m }, [...this.requiredParams, ...requiredParams]);\n    }\n\n    public withName(name: string) {\n        return this.with({ name });\n    }\n\n    public withCategory(category: Manifest[\"category\"]) {\n        const { icon } = this.definition;\n        return this.with({ category, icon: getIconForManifest({ icon, category }) });\n    }\n\n    public withReleased(released: \"direct\" | \"sandboxed\") {\n        return this.with({ released });\n    }\n\n    public withDescription(description: string) {\n        return this.with({ description });\n    }\n\n    public withAbout(about: string) {\n        return this.with({ about });\n    }\n\n    public withVideo(video: Manifest[\"video\"]) {\n        return this.with({ video });\n    }\n\n    public withIcon(icon: Manifest[\"icon\"]) {\n        return this.with({ icon });\n    }\n\n    public withAuthor(name: string, email: string) {\n        return this.with({ author: `${name} <${email}>` });\n    }\n\n    public withTest(params: Partial<TParams>, expectedResult: TResult | undefined) {\n        const { tests = [] } = this.definition;\n\n        return this.with({\n            tests: [...tests, { params, expectedResult }],\n        });\n    }\n\n    public withFailingTest(params: Partial<TParams>, expectedResult: TResult | undefined) {\n        const { tests = [] } = this.definition;\n\n        return this.with({\n            tests: [...tests, { params, expectedResult, allowFailure: true }],\n        });\n    }\n\n    public withResult<T>(type: ColumnType) {\n        return this.with({ result: { type } }) as Col<TParams, T>;\n    }\n\n    public withStringResult() {\n        return this.withResult<string>(\"string\");\n    }\n\n    public withDateResult() {\n        return this.withResult<Date>(\"date-time\");\n    }\n\n    public withPrimitiveResult() {\n        return this.withResult<string>(\"primitive\");\n    }\n\n    public withImageResult() {\n        return this.withResult<string>(\"image-uri\");\n    }\n\n    public withNumberResult() {\n        return this.withResult<number>(\"number\");\n    }\n\n    public withBooleanResult() {\n        return this.withResult<boolean>(\"boolean\");\n    }\n\n    public withStringArrayResult() {\n        return this.withResult<string[]>({ kind: \"array\", items: \"string\" });\n    }\n\n    public withNumberArrayResult() {\n        return this.withResult<number[]>({ kind: \"array\", items: \"number\" });\n    }\n\n    public withPrimitiveArrayResult() {\n        return this.withResult<PrimitiveValue[]>({ kind: \"array\", items: \"primitive\" });\n    }\n\n    public withParam<TParam, TName extends string>(type: ColumnType, name: TName, displayName?: string) {\n        if (displayName === undefined) {\n            displayName = startCase(name);\n        }\n        return this.with({\n            params: { ...this.definition.params, [name]: { type, displayName } },\n        }) as Col<TParams & Partial<Record<TName, TParam>>, TResult>;\n    }\n\n    public withRequiredParam<TParam, TName extends string>(type: ColumnType, name: TName, displayName?: string) {\n        return this.withParam(type, name, displayName).with({}, [name]) as Col<\n            TParams & Record<TName, TParam>,\n            TResult\n        >;\n    }\n\n    public withPrimitiveParam<T extends string>(name: T, displayName?: string) {\n        return this.withParam<any, T>(\"primitive\", name, displayName);\n    }\n\n    public withBooleanParam<T extends string>(name: T, displayName?: string) {\n        return this.withParam<boolean, T>(\"boolean\", name, displayName);\n    }\n\n    public withStringParam<T extends string>(name: T, displayName?: string) {\n        return this.withParam<string, T>(\"string\", name, displayName);\n    }\n\n    public withDateParam<T extends string>(name: T, displayName?: string) {\n        return this.withParam<string, T>(\"date-time\", name, displayName);\n    }\n\n    public withNumberParam<T extends string>(name: T, displayName?: string) {\n        return this.withParam<number, T>(\"number\", name, displayName);\n    }\n\n    public withRequiredPrimitiveParam<T extends string>(name: T, displayName?: string) {\n        return this.withRequiredParam<any, T>(\"primitive\", name, displayName);\n    }\n\n    public withRequiredURIParam<T extends string>(name: T, displayName?: string) {\n        return this.withRequiredParam<string, T>(\"uri\", name, displayName);\n    }\n\n    public withRequiredBooleanParam<T extends string>(name: T, displayName?: string) {\n        return this.withRequiredParam<boolean, T>(\"boolean\", name, displayName);\n    }\n\n    public withRequiredStringParam<T extends string>(name: T, displayName?: string) {\n        return this.withRequiredParam<string, T>(\"string\", name, displayName);\n    }\n\n    public withRequiredDateParam<T extends string>(name: T, displayName?: string) {\n        return this.withRequiredParam<string, T>(\"date-time\", name, displayName);\n    }\n\n    public withRequiredNumberParam<T extends string>(name: T, displayName?: string) {\n        return this.withRequiredParam<number, T>(\"number\", name, displayName);\n    }\n\n    public withStringArrayParam<T extends string>(name: T, displayName?: string) {\n        return this.withParam<string[], T>({ kind: \"array\", items: \"string\" }, name, displayName);\n    }\n\n    public withRequiredStringArrayParam<T extends string>(name: T, displayName?: string) {\n        return this.withRequiredParam<string[], T>({ kind: \"array\", items: \"string\" }, name, displayName);\n    }\n\n    public withNumberArrayParam<T extends string>(name: T, displayName?: string) {\n        return this.withParam<number[], T>({ kind: \"array\", items: \"number\" }, name, displayName);\n    }\n\n    public withPrimitiveArrayParam<T extends string>(name: T, displayName?: string) {\n        return this.withParam<PrimitiveValue[], T>({ kind: \"array\", items: \"primitive\" }, name, displayName);\n    }\n\n    public withRequiredPrimitiveArrayParam<T extends string>(name: T, displayName?: string) {\n        return this.withRequiredParam<PrimitiveValue[], T>({ kind: \"array\", items: \"primitive\" }, name, displayName);\n    }\n\n    public withExample(example: TParams) {\n        return this.with({ example });\n    }\n\n    public run(columnFunction: (params: TParams) => Promise<TResult | undefined> | TResult | undefined) {\n        const { params: staticParams } = this.definition;\n        const requiredParamNames = this.requiredParams;\n        const staticParamNames = Object.keys(staticParams);\n\n        function run(...dynamicParams) {\n            const params = {} as TParams;\n\n            dynamicParams.forEach(({ value }, i) => {\n                params[staticParamNames[i]] = value;\n            });\n\n            if (requiredParamNames.some(name => params[name] === undefined)) {\n                return undefined;\n            }\n\n            return columnFunction(params);\n        }\n\n        return column({\n            ...this.definition,\n            run,\n        });\n    }\n}\n\nexport function columnNamed(name: string) {\n    return new Col({ name });\n}\n", "import type { Manifest, Category } from \"./glide\";\n\nconst Glide = `\n        <svg\n          width=\"48\"\n          height=\"48\"\n          viewBox=\"0 0 26 27\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            d=\"M0 14.85L14.3 0V7.29C14.3 11.4653 11.0406 14.85 7.02 14.85H0Z\"\n            fill=\"currentColor\"\n          />\n          <path\n            d=\"M11.7 19.71C11.7 15.5347 14.9594 12.15 18.98 12.15H26L11.7 27V19.71Z\"\n            fill=\"currentColor\"\n          />\n        </svg>\n    `;\n\nconst Code = `\n<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4\" />\n</svg>\n    `;\n\nconst Number = `\n<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\"\n          height=\"48\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 7h6m0 10v-3m-3 3h.01M9 17h.01M9 14h.01M12 14h.01M15 11h.01M12 11h.01M9 11h.01M7 21h10a2 2 0 002-2V5a2 2 0 00-2-2H7a2 2 0 00-2 2v14a2 2 0 002 2z\" />\n</svg>\n`;\n\nexport const defaultIcon = `\n<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M11 4a2 2 0 114 0v1a1 1 0 001 1h3a1 1 0 011 1v3a1 1 0 01-1 1h-1a2 2 0 100 4h1a1 1 0 011 1v3a1 1 0 01-1 1h-3a1 1 0 01-1-1v-1a2 2 0 10-4 0v1a1 1 0 01-1 1H7a1 1 0 01-1-1v-3a1 1 0 00-1-1H4a2 2 0 110-4h1a1 1 0 001-1V7a1 1 0 011-1h3a1 1 0 001-1V4z\" />\n</svg>\n`;\n\nconst Array = `\n<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10\" />\n</svg>\n`;\n\nconst Image = `\n<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n</svg>\n`;\n\nconst Fun = `\n<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n</svg>\n`;\n\nconst Date = `\n<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n</svg>\n`;\n\nconst APIs = `\n<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3 15a4 4 0 004 4h9a5 5 0 10-.1-9.999 5.002 5.002 0 10-9.78 2.096A4.001 4.001 0 003 15z\" />\n</svg>\n`;\n\nconst Text = `\n<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n</svg>\n`;\n\nconst AI = `\n<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 3v2m6-2v2M9 19v2m6-2v2M5 9H3m2 6H3m18-6h-2m2 6h-2M7 19h10a2 2 0 002-2V7a2 2 0 00-2-2H7a2 2 0 00-2 2v10a2 2 0 002 2zM9 9h6v6H9V9z\" />\n</svg>\n`;\n\nconst Encoding = `\n<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M7 20l4-16m2 16l4-16M6 9h14M4 15h14\" />\n</svg>\n`;\n\nexport const categoryIcons: Partial<Record<Category, string>> = {\n    Glide,\n    \"Machine Learning\": AI,\n    General: defaultIcon,\n    Array,\n    Number,\n    Encoding,\n    Text,\n    \"Data & APIs\": APIs,\n    Image,\n    Fun,\n    \"Date & Time\": Date,\n    Code,\n};\n\nexport function getIconForManifest({ icon, category }: { icon?: string; category: Category }): string {\n    return icon ?? categoryIcons[category] ?? defaultIcon;\n}\n", "import * as glide from \"../glide\";\n\nimport FormulaParser from \"fast-formula-parser\";\n\nfunction convertCell(cell: any): any {\n    try {\n        if (typeof cell === \"string\") {\n            const res = JSON.parse(cell);\n            if (typeof res === \"number\") {\n                return res;\n            }\n        }\n        return cell;\n    } catch (err) {\n        return cell;\n    }\n}\n\nconst run: glide.Column = (formula, ...params) => {\n    const data: any[][] = params.map(p => [p.value]);\n\n    const parser = new FormulaParser({\n        onCell: ({ _, row, col }) => {\n            return convertCell(data[row - 1][col - 1]);\n        },\n        onRange: (ref: { from: { row: number; col: number }; to: { row: number; col: number } }) => {\n            const arr: any[][] = [];\n            for (let row = ref.from.row; row <= ref.to.row; row++) {\n                const innerArr: any[] = [];\n                if (data[row - 1]) {\n                    for (let col = ref.from.col; col <= ref.to.col; col++) {\n                        innerArr.push(convertCell(data[row - 1][col - 1]));\n                    }\n                }\n                arr.push(innerArr);\n            }\n            return arr;\n        },\n    });\n\n    if (formula?.value === undefined) return undefined;\n    const position = { row: 1, col: 1, sheet: 0 };\n    try {\n        return parser.parse(formula.value, position);\n    } catch (err) {}\n};\n\nexport default glide.column({\n    name: \"Excel Formula\",\n    category: \"Code\",\n    released: \"direct\",\n    description: \"Run Excel formulas\",\n    about: `Uses [lesterlyu.github.io/fast-formula-parser](lesterlyu.github.io/fast-formula-parser) to evaluate Excel formulas.`,\n    author: \"Chris Ozgo <chris.ozgo@heyglide.com>\",\n    params: {\n        formula: {\n            displayName: \"Formula\",\n            type: \"string\",\n        },\n        A1: {\n            displayName: \"A1\",\n            type: \"primitive\",\n        },\n        A2: {\n            displayName: \"A2\",\n            type: \"primitive\",\n        },\n        A3: {\n            displayName: \"A3\",\n            type: \"primitive\",\n        },\n        A4: {\n            displayName: \"A4\",\n            type: \"primitive\",\n        },\n        A5: {\n            displayName: \"A5\",\n            type: \"primitive\",\n        },\n    },\n    result: {\n        type: \"primitive\",\n    },\n    example: {\n        formula: \"SUM(A1, A2)\",\n        A1: 1,\n        A2: 2,\n    },\n    run,\n    tests: [\n        { params: { formula: \"A1 + A2\", A1: 1, A2: 2 }, expectedResult: 3 },\n        { params: { formula: \"SUM(A1:A3)\", A1: 1, A2: 2, A3: 3 }, expectedResult: 6 },\n        { params: { formula: \"AVERAGE(1, A1)\", A1: 3 }, expectedResult: 2 },\n        { params: { formula: \"SUM(A1, A2)\", A1: 4, A2: \"4\" }, expectedResult: 8 },\n        { params: { formula: \"SUM(A1, A2, 5)\", A1: \"5\", A2: \"10\" }, expectedResult: 20 },\n    ],\n});\n"],
  "mappings": "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",
  "names": []
}
